0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;6956;True;64;-39.7711719737048;38.2811953128533;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);127;31310;True;75;-63.6216137864537;41.3182679342991;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);27;10131;True;60;-30.6858767689839;37.7864635150668;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);34;11065;True;60;-31.7051774506301;33.8766115352824;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);85;1682;True;103;-45.6959457415602;18691451.8273562;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);81;735;True;111;-729735049.554383;463527922.566283;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);643;17360;True;101;-65.293478059703;125470.5782158;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;17660;False;-1;-27.3098701909607;362081.252617273;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;31494;False;-1;-39.2546789760767;7.97304348416622;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8333;False;-1;-52.4100030638066;1670553.0178205;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;12192;False;-1;-35.3166829866695;16.1156870505947;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;18207;False;-1;0;2023390.51842205;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;6068;False;-1;-19.4664643010379;25746390.1829861;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7751;False;-1;-36.4300526559339;120564743.60088;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5089;False;-1;-706081055.745339;97838047.4392285;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7041;False;-1;-322653172.678078;61896716.1489821;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3405;False;-1;-154217464.206862;193596643.19591;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3959;False;-1;-226195753.691091;100367437.448649;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4281;False;-1;-442966663.538869;46813878.6062967;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);95;79108;True;71;-156.23487790026;259.354473692706;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);72;96623;True;52;-76.6482278681637;93.8214042420611;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;390791;False;-1;-441.006346011074;232.519159083508;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;323570;False;-1;-341.569871041812;440.75623337074;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;36310;True;78;-341.828039000809;364.771196592204;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;249444;False;-1;-468.522488503286;410.544188586534;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;326611;False;-1;-505.909191088735;346.99205620146;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;304933;False;-1;-313.243459917759;407.155540342448;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;167703;False;-1;-755.880818463497;993.313356430943;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;191959;False;-1;-525.647721049803;648.96554208005;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;131090;False;-1;-623.088896780691;793.101499547708;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;131121;False;-1;-857.318759541084;1037.5346353947;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;134067;False;-1;-629.272560761914;1120.47536824878;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;80192;False;-1;-988.742501279291;1330.83563652168;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;75641;False;-1;-953.335238450928;1534.58908032878;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;63700;False;-1;-1443.61191103358;2079.89010145894;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;77567;False;-1;-1219.81931274332;1941.0801676738;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;57079;False;-1;-1561.36149127597;2329.56523141106;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);502;1537890;True;54;-146.165850389887;99.9936498678796;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;95966;True;46;-98.2055662646341;72.6665521827082;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);164;584473;True;52;-138.825976918031;86.1884134771467;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;10341;True;44;-20.8312525353307;45.3254798966348;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);2;7534;True;83;-36.9961513658808;88.794416135411;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;23283;True;26;-45.0817769688055;54.1836411150969;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);257;738534;True;69;-207.185745492697;68.2679873451005;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;200672;True;31;-89.2310779338782;30.0567393098464;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;99181;True;30;-49.2469603412633;45.1021961999007;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;62785;True;204;-109.747357084836;103.126804675884;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;64026;True;142;-110.812433187892;150.166088422035;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;142295;True;93;-198.540061894269;138.976834689541;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);52;229215;True;273;-729.727156412113;184.508165205605;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);54;340505;True;92;-400.661199669802;62.4775665739659;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;30757;True;108;-141.403547459788;147.614870513241;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;162074;True;119;-171.278752936776;53.5799190448015;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);86;543351;True;264;-238.762581506388;54.0890063215234;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);140;678002;True;120;-535.878881129619;53.1604403266484;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1906337;False;-1;-700.001265040331;104.002829707612;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;120039;True;84;-121.025573247903;100.475808651972;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);50;234340;True;160;-458.3147417194;69.325366006103;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;126897;True;74;-160.217157111213;50.2929221421484;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);51;205910;True;91;-128.075385666449;62.4694548089462;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);349;748790;True;103;-150.501778322894;98.3214860225772;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;112979;True;249;-235.27277990234;50.5331378871447;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);68;168828;True;123;-142.622172652565;148.569390964148;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;23547;True;181;-453.701975008404;159.461706576992;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;16187;True;122;-67.9657290212796;163.188760983021;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);102;428835;True;125;-1054.53864496304;134.839773297669;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);13;43567;True;302;-377.20226009424;221.603763992409;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);179;881472;True;125;-228.472992560449;54.5429012447202;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2141214;False;-1;-593.079338193475;95.8029032506443;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);104;208401;True;155;-267.525052117007;128.200630319083;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;3133;True;75;-13747.5634504546;41223.2939236109;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);25;3073;True;91;-10140.6616583875;110737.261905831;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);66;5845;True;109;-102585.778765123;128275.989518827;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);373;15813;True;139;-173992.170003069;333480.778836583;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);134;3485;True;99;-343464.247532624;1619276.67121289;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);447;8187;True;126;-2087615.96608651;2372633.9096198;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);620;8559;True;136;-1907741.41514995;3067313.2884725;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3866;False;-1;-1353186.14522515;4655861.1567089;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;2163;True;45;-84651.9555245754;151566.205341963;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;1634;True;41;-2410.75177952836;87577.4627149926;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;2710;True;61;-8069.03824450615;267571.444679027;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);33;3776;True;56;-50596.8603198974;279263.081217353;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;2152;True;56;-20505.8634961468;143912.094271371;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;1539;True;47;-51823.8469309713;249551.364385515;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;2825;True;66;-123225.283368719;273360.573540488;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);54;3379;True;68;-249000.440633492;651945.840112958;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;4186;True;77;-179244.716416292;416898.738152565;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;2233;True;63;-163787.798992155;326361.660836135;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;3765;True;76;-129209.121596246;453287.638018059;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;4753;True;80;-238532.669592051;450632.435673934;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);165;5456;True;103;-642319.469642453;1132671.74258404;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);48;2192;True;82;-159177.191184486;770518.388375655;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);60;3662;True;82;-1211611.33826362;587005.178980789;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);53;2560;True;81;-310028.503099172;742675.467981237;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);234;8694;True;140;-465628.880973674;1100174.05430062;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);322;6091;True;127;-1216244.2680337;2159516.85064811;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);90;3575;True;82;-406693.722732642;874042.060379321;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);147;5785;True;105;-514688.79183915;891409.182132346;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);201;6670;True;140;-639638.357769946;1194855.53831757;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);443;1341819;True;173;-246.870539069671;246.40802262206;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2017305;False;-1;-300.002517697304;277.876114284037;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1677301;False;-1;-286.79009504072;305.838756196754;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1572201;False;-1;-290.793315109549;339.417483801039;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1471278;False;-1;-398.193917536296;357.558935002385;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1339855;False;-1;-376.870060577081;377.082078331984;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1274039;False;-1;-405.545818172761;415.149963863508;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;975054;False;-1;-158.899715841804;212.644623382112;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1111330;False;-1;-205.482647377799;179.036087831872;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1100143;False;-1;-156.543644397725;164.373824433315;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1029115;False;-1;-196.208365712094;205.19814387007;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1158412;False;-1;-182.481986165796;150.76081076878;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);149;789391;True;45;-38.6577483486956;45.9126597745021;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);620;3103962;True;51;-43.9780651081477;52.5652109084931;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);38;155799;True;40;-35.4977978434088;45.820444214207;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);168;875900;True;52;-49.4191943978444;56.9263267224294;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;335991;True;43;-44.9677474925199;49.1486030309351;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;72054;True;37;-29.0940341245521;38.1818037956259;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;25600;False;-1;-162.999050579975;353.386092955555;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;494578;False;-1;-390.239494467294;390.226166620589;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;83019;False;-1;-1439.24304071535;1687.65839528241;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2191;False;-1;-765.965639956472;2946.11145902443;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);901;473;False;-1;-929.843964948645;4736.02033207396;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3075;False;-1;-1448.61271447338;10002.3942058933;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5309;False;-1;-567.204311567207;1544.35026703602;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2692281;False;-1;-56.8646696269959;56.8732657037376;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2376;True;42;-19.620787341655;40.5679425401853;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;3408;True;52;-5.53105498544206;38.4855888740278;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);20;30238;True;97;-37.3868334663772;83.369786946914;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;19208;True;90;-35.012541944574;65.9862598805644;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);105;139595;True;98;-96.5969296067284;69.8676700160362;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;31233;True;100;-40.5300453259177;68.2482030717173;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;67309;True;97;-56.3749393559755;73.6098501498673;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);45;61188;True;94;-68.0910328368504;75.2281488256901;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);28;36652;True;101;-62.0072298046409;76.8800761767326;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;56601;True;103;-63.6510436493206;74.5614426615963;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;40666;True;105;-47.5333364564871;74.8484761332899;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);75;90994;True;107;-62.1866593128357;74.3580539951095;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);94;110982;True;103;-72.0226241900527;88.6711067883986;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);83;92155;True;108;-88.9312741847366;77.5184840027172;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;67705;True;104;-86.8748521082461;92.6714859975181;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);33;39294;True;106;-68.0774604729209;70.0559904418995;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;74137;True;106;-65.8709852933099;76.9010907495019;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);95;99944;True;117;-77.3721383596705;100.461271105383;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);110;112738;True;106;-71.8297593095544;79.6824065406689;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);56;58108;True;111;-69.2919061612126;77.0062213855514;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);77;79917;True;115;-79.4038644901069;83.5337685487446;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);58;55904;True;117;-62.8126408185047;87.1248260076119;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);203;192579;True;117;-83.3851144160075;78.6043992460141;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);55;53330;True;116;-70.0406136749898;87.1110978121446;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);151;140841;True;112;-57.0277050854045;84.4207028167904;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);99;83460;True;116;-88.7404254949925;93.5800439768776;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);625;505974;True;118;-69.1655504352858;90.0501735173534;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);155;105611;True;118;-75.6844624025467;87.3250841495722;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);181;131698;True;114;-84.3429535640388;103.725766096876;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);147;112451;True;118;-86.8737362693859;90.2570598925345;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);261;181171;True;118;-84.8806516389254;93.809169601089;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);189;128278;True;127;-102.313005523629;86.7048871697794;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);273;191317;True;122;-103.524784396128;88.8474427373161;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);186;133268;True;124;-87.6738317604488;89.6925998983735;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1068;True;36;-4.96628658604072;38.806397352503;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;797;True;29;-17.0449743002255;32.315142932792;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1183;True;36;-10.727897707941;43.7298514637438;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;781;True;34;-10.1347072411217;36.7006894516635;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;817;True;26;-3.61898330838019;38.6862835333411;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;696;True;34;-2.54673977653476;29.9837970940935;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;954;True;38;-4.90562824958045;33.6792836663951;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1051;True;37;-21.4310179002297;41.6479854857866;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1596;True;32;-2.71368536054079;40.4220959822822;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1429;True;38;-22.0175796680563;40.290465496387;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2761;True;42;-21.1278316711835;31.3213565730335;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1250;True;36;-31.0376740016829;39.5963651569163;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1669;True;44;-21.5547749600686;41.4916989900768;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1088;True;34;-12.8585896118505;40.4347623842865;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1790;True;34;-6.38781452191339;35.5033948154334;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1714;True;41;-10.1342875396938;33.091883083632;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2415;True;46;-17.1396649086621;43.5398223135475;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2139;True;49;-12.1463468798339;39.5382308695194;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1351;True;36;-24.4529633074586;43.5831168062852;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1908;True;43;-21.9156797107086;39.8212307860234;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;6717;True;66;0;37.1735464895703;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);131;32841;True;73;0;44.2090962199905;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;9604;True;60;0;40.2042752652031;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;9576;True;58;0;34.0817237821632;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);74;1312;True;101;0;57.5858500561175;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);184;2291;True;109;0;49273906.7198093;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);589;16946;True;102;0;125800.92531075;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;17639;False;-1;0;14.3644277367943;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;38234;False;-1;0;6.2332791013936;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;17341;False;-1;0;249551.027221433;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;13039;False;-1;0;14.1621832188636;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;19039;False;-1;0;2150579.04789432;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7843;False;-1;0;8749175.76388973;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);841;8566;True;109;0;60832689.5006044;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5755;False;-1;0;75567080.3415796;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5374;False;-1;0;70152010.7007336;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3560;False;-1;0;28357298.8481746;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4522;False;-1;0;74019296.1602683;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;6583;False;-1;0;20721694.3716421;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;662829;False;-1;146.758133875717;201.9756759686;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;18920;True;46;0;139.356501685319;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;397933;False;-1;232.619985217805;317.231488201615;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;288309;False;-1;287.393561815729;415.966420352186;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;458915;False;-1;241.227737167035;446.268441734954;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;238641;False;-1;280.756424320879;390.321140163289;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;380332;False;-1;181.064286744147;252.122156137951;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;325560;False;-1;216.821867355029;304.415416478391;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;173592;False;-1;591.233036856231;816.535550617135;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;234673;False;-1;301.566100730347;419.343723636243;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;132503;False;-1;395.608886880029;564.900767874404;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;115132;False;-1;847.811330533756;1109.24343049549;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;144362;False;-1;811.894259632585;1145.27602112759;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;85738;False;-1;546.938886755671;960.696431813773;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;81423;False;-1;701.67159313674;1028.52656185684;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;73021;False;-1;739.445406678695;1122.49990126431;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;94743;False;-1;1653.72909061951;2073.18649718359;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;59973;False;-1;1342.32837187361;1858.42766991051;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);32;79941;True;56;0;69.9908222049645;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;63098;True;36;0;57.8206120853954;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;53477;True;54;0;66.0008837488318;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);104;200128;True;35;0;40.4886305145761;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);29;66590;True;54;0;107.080664382527;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);45;247078;True;32;0;33.1386846185545;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);340;1115391;True;65;0;66.2327965006684;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2139;True;27;0;25.4638656367929;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;105108;True;28;0;36.2697866509253;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);34;89417;True;260;0;1846.46367302478;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;10379;True;121;0;182.58429308011;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);18;106402;True;159;0;97.1688606581206;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);37;184885;True;206;0;150.422225862248;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);46;357665;True;97;0;61.0914204373231;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;4435;True;100;0;90.0983167286209;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;161705;True;95;0;48.0146494942172;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);65;602222;True;88;0;38.5572687216239;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;49177;True;139;0;54.2017064272021;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;62794;True;281;0;484.192696256424;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;21516;True;79;0;87.410773108541;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);71;387584;True;178;0;61.2421696646587;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;127954;True;97;0;46.8540360277741;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);48;376371;True;106;0;60.9342180665303;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;14299;True;77;0;94.2597484328176;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);41;352520;True;183;0;53.4837468884727;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;5759;True;97;0;110.048180181989;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;35236;True;263;0;1041.9700949215;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;14852;True;109;0;160.063878799697;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);22;130902;True;152;0;98.4932087076685;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);22;100946;True;308;0;147.007505480481;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;69027;True;101;0;28.4780933827704;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);23;73878;True;280;0;436.08014882686;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;6758;True;112;0;66.0526972889191;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);37;5787;True;50;0;39330.0566906589;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);117;8180;True;94;0;179275.183128469;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);40;3690;True;107;0;111837.741425182;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);361;19677;True;70;0;312935.017959157;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);46;1540;True;84;0;1382307.23493948;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);47;1567;True;73;0;1477775.27717522;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);89;2720;True;89;0;1520303.85478858;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);293;2750;True;137;0;3718969.80484114;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;1294;True;36;0;83501.4220839941;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;1762;True;48;0;83362.2372041772;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;807;True;39;0;223270.987657408;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;1019;True;38;0;206179.999643572;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;980;True;36;0;176957.364132886;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;853;True;40;0;163585.452182868;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;1648;True;50;0;158191.061589239;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;1942;True;67;0;285124.990845591;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;1748;True;64;0;191800.685647081;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;1208;True;50;0;281190.493214174;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;1055;True;50;0;275288.400375034;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);26;1963;True;63;0;599346.978516334;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);39;2035;True;64;0;884927.992056416;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;2438;True;65;0;221753.486110295;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;1503;True;63;0;294507.749369562;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;1029;True;55;0;692627.364649313;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);53;2657;True;79;0;993325.232833537;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);62;2082;True;88;0;1430877.336239;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);30;1577;True;70;0;878594.284331266;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);36;1386;True;66;0;1298313.09141325;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);74;2670;True;98;0;1369896.52400467;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;21174;True;171;0;251.043146537267;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;27789;True;195;0;272.058953279248;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;44961;True;213;0;293.776752157426;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;44807;True;233;0;294.716086254734;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;46685;True;243;0;319.69822850975;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);21;58572;True;235;0;341.283509778953;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);25;64859;True;269;0;351.34563098376;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;12780;True;118;0;136.975218460246;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;10440;True;108;0;117.489535381171;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;8801;True;95;0;99.0926136451166;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;10936;True;119;0;131.820702861174;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;9014;True;105;0;127.361798410983;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1156;True;43;0;37.2152741737463;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2914;True;57;0;52.1875345861299;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1298;True;37;0;32.3710798989695;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2453;True;58;0;45.758640164046;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1396;True;47;0;39.7556570902196;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;902;True;35;0;31.0628816759893;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;60365;False;-1;74.2948884133589;166.703710153487;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);21;25359;True;71;0;290.625305228622;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;129774;False;-1;1004.17722629962;1384.76401451514;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3548;False;-1;2420.28447471526;2879.84210675089;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;827;False;-1;4145.63971898686;4781.08868626636;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4424;False;-1;8184.94088774094;9957.97699950595;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7549;False;-1;1318.75601033167;1575.37913207963;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;12423;True;47;0;30.533864443397;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1074;True;43;0;41.614020274544;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1360;True;48;0;42.5412381005356;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6067;True;91;0;82.5485895782535;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5320;True;89;0;81.4443787536629;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5919;True;95;0;84.2639223665276;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6465;True;98;0;87.0759417078707;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5886;True;93;0;83.4905403802727;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5140;True;95;0;88.3639342654755;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6190;True;98;0;90.688341076744;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6361;True;93;0;92.8227974901646;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5970;True;100;0;90.128062944247;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5448;True;100;0;92.0036635306849;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7165;True;101;0;94.3292917027655;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6472;True;96;0;89.2743825201642;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6455;True;102;0;97.4161849554604;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7421;True;106;0;102.301798789265;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7225;True;96;0;90.3576554090414;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8596;True;108;0;104.542348604933;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;8124;True;103;0;91.330471408759;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7116;True;104;0;97.549594696326;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8365;True;107;0;93.9508108638084;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;7804;True;113;0;102.48450705557;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8643;True;113;0;109.967306022607;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8580;True;106;0;98.6617385839573;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8082;True;108;0;106.928491501577;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8688;True;119;0;103.113170815613;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;10766;True;113;0;111.356804867725;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8545;True;112;0;103.728209671647;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9246;True;120;0;110.11570368737;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8432;True;122;0;109.456169732179;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9343;True;119;0;100.592872210934;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9166;True;118;0;105.282048719726;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;10108;True;123;0;106.521204948198;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9081;True;115;0;110.91828624369;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;849;True;34;0;40.7601000030588;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;529;True;28;0;27.4794249377251;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;901;True;36;0;36.8254062655179;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;773;True;38;0;26.3944868714388;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;636;True;28;0;32.97319593228;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1017;True;34;0;33.5057927946368;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;880;True;36;0;36.7320588715817;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;838;True;34;0;38.2075409080634;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;766;True;34;0;31.9417821995393;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1109;True;36;0;36.9865134247358;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;878;True;38;0;33.328199951058;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;797;True;36;0;37.1240157097926;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;913;True;40;0;35.9003188643833;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1123;True;36;0;34.6478463813839;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2217;True;40;0;27.9205201611494;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1332;True;40;0;37.2820591043418;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1563;True;42;0;46.0162725909749;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1369;True;43;0;42.3967185235674;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1244;True;40;0;40.4654061820972;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1564;True;42;0;33.3606548926491;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;6348;True;64;0;35.9167541949059;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);228;54318;True;75;0;47.9604406759347;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);29;9543;True;60;0;38.8608313177729;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;9631;True;58;0;34.7112335325783;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);81;1495;True;101;0;5406156.16412196;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);92;848;True;109;0;278814946.779744;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);663;14696;True;101;0;2382298.14778567;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;24805;False;-1;0;13.4394384530425;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;38029;False;-1;0;4.92525784530624;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;9522;False;-1;0;49574661.9504185;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;11715;False;-1;0;15.217842323902;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;18617;False;-1;0;1896660.05837628;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7073;False;-1;0;4230964.00305897;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;8063;False;-1;0;85134011.27732;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;5249;False;-1;0;77355051.7763224;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6441;False;-1;0;61754810.2034452;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3586;False;-1;0;26777239.8198171;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4815;False;-1;0;74011179.2490848;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6019;False;-1;0;10857959.574766;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;736139;False;-1;140.820079740891;201.967833398193;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);208;201958;True;58;0;87.7502924262488;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;382627;False;-1;416.007385194305;524.802289084434;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;299499;False;-1;294.403811874987;419.075375979352;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;480766;False;-1;249.600957611204;345.064897703859;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;209301;False;-1;217.606811666492;335.006213465886;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;307515;False;-1;230.426160067332;306.905590736775;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;330469;False;-1;200.010067736735;306.366608293076;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;171440;False;-1;580.883517377117;864.841897321569;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;232506;False;-1;400.184579659339;523.071452709763;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;143090;False;-1;357.058268759892;562.154427398844;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;135790;False;-1;520.165436773824;842.477826878017;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;143790;False;-1;786.292957767794;1112.03086204873;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;86321;False;-1;776.026911595849;1116.53781871638;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;85716;False;-1;665.163600293716;942.362539674297;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;68844;False;-1;990.408234103028;1448.37487911001;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;95741;False;-1;1489.69429118414;1955.84580653828;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;62762;False;-1;1427.29098793272;2103.29223264229;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);68;172505;True;66;0;71.4866471985947;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);64;272977;True;72;0;59.3656915625166;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);71;246300;True;58;0;66.9173890732069;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);70;109546;True;35;0;44.7216702908313;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;20957;True;67;0;105.484643402933;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);89;663095;True;34;0;32.2716555828798;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);297;1246384;True;61;0;64.1485449538264;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3382;True;28;0;29.775068448399;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;14537;True;34;0;38.8710840105537;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;49226;True;329;0;570.926073662878;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;16282;True;148;0;133.41036494751;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;16227;True;94;0;127.38142735999;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;76731;True;317;0;116.815331824886;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);33;276196;True;95;0;58.953952612892;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;14869;True;136;0;106.037051077594;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;54449;True;74;0;46.0945260352067;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;216777;True;133;0;55.1368591834024;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);31;240467;True;114;0;33.8157379322707;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);31;83407;True;349;0;379.294386012296;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;26864;True;71;0;92.1192589636611;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);118;603661;True;206;0;64.1328280673843;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;130131;True;102;0;45.7061115092452;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);37;295501;True;102;0;59.0441029035801;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;57715;True;84;0;98.2273756342875;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);117;984566;True;171;0;37.4710404229279;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;4893;True;94;0;98.4832207192574;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;54213;True;325;0;209.443153970146;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;8919;True;113;0;168.98013776372;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;11842;True;101;0;138.735667360571;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;51588;True;249;0;159.640040958081;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);31;241023;True;111;0;34.5206674817371;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;50096;True;222;0;528.545486329732;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;16610;True;134;0;96.8279308099609;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;4112;True;47;0;40150.4765314557;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);134;8397;True;114;0;190487.172918492;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);26;2447;True;84;0;123117.610198082;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;38229;False;-1;0;318495.349779018;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);59;1824;True;86;0;1538111.07113753;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);83;2720;True;92;0;1546457.57256173;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);198;3971;True;123;0;1984071.01943677;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4592;False;-1;0;4470695.31739453;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;2044;True;46;0;76152.5928611608;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1977;True;43;0;118439.916799608;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1072;True;46;0;242764.720974498;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;1658;True;53;0;185288.668871339;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1072;True;43;0;244664.813273229;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;1273;True;48;0;123449.600626136;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;2298;True;61;0;206955.102930166;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;1585;True;69;0;444538.336358289;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;1570;True;63;0;339475.008093108;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1141;True;51;0;236714.133283932;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;1809;True;57;0;211036.237067717;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;2402;True;82;0;516944.061832561;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);42;1981;True;79;0;940079.72173491;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);22;2200;True;76;0;419434.975740437;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;1512;True;56;0;421277.712955346;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);38;2094;True;72;0;900450.342722891;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);58;3452;True;96;0;786181.438976303;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);101;3291;True;90;0;1413380.23859912;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);26;1894;True;79;0;597859.692158343;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);57;2142;True;75;0;1330712.29489347;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);202;6098;True;100;0;1731251.94461105;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;32339;True;183;0;253.129650076206;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;31727;True;211;0;259.369436609152;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;40442;True;205;0;290.074165580974;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;76739;True;243;0;308.172356733486;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;53690;True;235;0;313.435532636295;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);33;93917;True;265;0;330.782384951424;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);39;101450;True;299;0;348.407595455507;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;16539;True;117;0;132.716456997051;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;12775;True;104;0;91.6007328419165;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;8321;True;91;0;108.703390120784;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;15815;True;115;0;95.03438810407;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;14333;True;107;0;111.716223760801;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3542;True;48;0;41.0441766028955;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;5268;True;56;0;53.3722674895802;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2102;True;43;0;31.3323724966158;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3148;True;60;0;50.1598505020697;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2368;True;49;0;44.5066160456871;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1447;True;42;0;35.7274238245917;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);581;62856;True;72;0;86.496074387301;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);48;51732;True;64;0;232.212283096951;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;165714;False;-1;370.155014776324;950.151298596747;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3540;False;-1;2076.4490054725;2721.3913156447;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;807;False;-1;3801.72639328173;4760.9993278774;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4563;False;-1;7316.70647156532;9613.15839305015;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7532;False;-1;1065.93773885534;1455.60103101006;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;11926;True;47;0;35.7594417539462;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1145;True;43;0;40.3625000927385;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2179;True;50;0;44.7962953678816;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;8331;True;94;0;91.4857483008909;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7461;True;93;0;80.7258793856353;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9387;True;100;0;81.3325192327009;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7126;True;97;0;82.0553384995156;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;8559;True;98;0;84.0978766070414;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;11299;True;109;0;88.1580797586458;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7004;True;98;0;88.6505099840506;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;8911;True;102;0;88.0180992081331;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;10941;True;99;0;93.0741388737912;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7658;True;109;0;93.1467847817279;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9368;True;103;0;82.5982245374907;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;7687;True;104;0;92.6409741468063;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;8827;True;110;0;91.7784326824187;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;14517;True;109;0;103.77042710384;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;8924;True;101;0;92.7141882691292;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;9513;True;108;0;92.1618389993499;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;11102;True;112;0;92.0661150769761;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;14256;True;110;0;111.185582376696;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;16254;True;114;0;93.5367844394198;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;11531;True;121;0;102.931189362034;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;13170;True;119;0;97.406040971621;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;10410;True;115;0;91.9888536163525;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;10170;True;116;0;97.2829765202121;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;16697;True;126;0;106.746707265423;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;16076;True;130;0;87.961147294323;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;10561;True;120;0;109.851697050757;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;16452;True;125;0;90.0976920522834;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;12256;True;120;0;103.463404875011;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;18336;True;128;0;101.628806316223;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;18158;True;131;0;112.271741816766;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;13710;True;124;0;116.966455317259;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;13560;True;126;0;112.352123569539;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;887;True;33;0;37.5001423358371;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;709;True;26;0;34.3482369051233;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;689;True;32;0;37.6942341406899;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1047;True;32;0;37.1965385613037;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;532;True;28;0;33.1383803344872;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1596;True;36;0;35.8303142837494;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;982;True;38;0;40.6006914852227;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;964;True;36;0;35.431155955578;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;705;True;32;0;34.5342239087361;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1217;True;38;0;40.7986656852421;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1228;True;40;0;28.6371191257665;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;799;True;32;0;40.4381682316718;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1481;True;42;0;38.2923264565824;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1065;True;38;0;36.3471793779863;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1173;True;34;0;34.8116262417175;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1454;True;42;0;39.8588934880281;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1165;True;42;0;41.6625430462462;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1507;True;45;0;43.1840756299673;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1660;True;38;0;39.7766602203478;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;978;True;38;0;38.0780851949166;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;7421;True;66;0;38.3340190806777;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);127;32775;True;75;0;41.3539869843555;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;10110;True;60;0;39.5299695376627;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;9624;True;62;0;32.8451770968642;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);78;1480;True;101;0;4287441.70099495;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);185;2376;True;109;0;86405438.7068505;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);573;13587;True;103;0;3519891.96463661;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;22371;False;-1;0;15.8165061962443;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;35363;False;-1;0;6.52833614210735;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;9796;False;-1;0;100111778.745051;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;11897;False;-1;0;15.4005019266274;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;17442;False;-1;0;2175347.95975454;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4644;False;-1;0;6862703.26995439;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;8337;False;-1;0;103518387.821362;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5253;False;-1;0;73206690.7645002;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4988;False;-1;0;82821233.0051323;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3787;False;-1;0;38180310.612335;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4843;False;-1;0;66239074.7772667;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5447;False;-1;0;10831912.5017979;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);103;96856;True;74;0;205.411168092517;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;22184;True;56;0;137.535512256123;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;412652;False;-1;217.02202170157;335.0090544834;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;330494;False;-1;252.003663327547;410.519420854965;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;490599;False;-1;217.022407129417;353.807350517785;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;223765;False;-1;224.736041516408;375.628216997492;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;395271;False;-1;165.217454945677;271.089597090038;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;291256;False;-1;205.914311356151;322.127309399096;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;175992;False;-1;591.204936086948;897.567618371124;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;211162;False;-1;354.723057090176;583.413376568702;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;147140;False;-1;339.093044446359;672.104119776348;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;155811;False;-1;333.419751955299;668.469849473708;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;140184;False;-1;678.717849863841;1078.27483260089;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;92536;False;-1;554.367495714672;941.544387249648;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;82980;False;-1;671.757896643671;1190.66919766814;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;69923;False;-1;873.657053938535;1450.96738528299;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;94424;False;-1;1277.91591479532;1898.30016961331;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;64018;False;-1;1163.95669073284;1975.63352157147;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);677;1708976;True;74;0;75.8057209351723;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);33;131232;True;56;0;61.2419550613687;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);52;189034;True;58;0;69.505313500926;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);35;55578;True;35;0;46.0165401694423;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;42278;True;58;0;89.1897776944803;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;85845;True;33;0;53.1306016334679;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);292;900308;True;61;0;80.8344345238281;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;3132;True;29;0;29.9871028443662;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;54443;True;39;0;35.5446048722701;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;27887;True;195;0;158.189333319527;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;20441;True;137;0;141.034338648519;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;18746;True;95;0;146.113998242296;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;50294;True;220;0;138.877121474122;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;234600;True;78;0;56.2284120205594;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;23770;True;114;0;73.8619312040469;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;118243;True;89;0;44.4932015969223;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;184402;True;117;0;33.5473411631442;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);87;541030;True;135;0;51.7214035954569;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);64;166715;True;274;0;158.768353119007;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);35;103774;True;73;0;105.687241325099;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);41;258133;True;213;0;48.3914018848538;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);34;210669;True;107;0;47.723342468745;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);21;173566;True;76;0;54.3158151479385;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;21663;True;82;0;84.027198899991;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);37;359776;True;151;0;45.3579507164885;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;22827;True;126;0;115.825428454467;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;61090;True;247;0;111.846352351367;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;6289;True;128;0;90.9539565260232;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;19504;True;129;0;123.431270664826;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;24632;True;277;0;191.830132035408;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);88;592018;True;136;0;45.5157782899519;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);23;60979;True;323;0;372.259140686081;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;92543;True;143;0;49.5312524790985;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;2665;True;99;0;44995.0770801843;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);52;4815;True;97;0;133690.584191724;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);74;6177;True;98;0;131634.177212596;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);150;8302;True;123;0;232976.201057616;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;9081;False;-1;0;2344613.66726925;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);57;2782;True;97;0;1066721.27636207;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);106;2571;True;98;0;2249412.80847324;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4873;False;-1;0;5052900.64702927;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;973;True;41;0;97817.2743943475;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;1283;True;43;0;141272.024576495;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;1430;True;53;0;240573.609919247;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;1321;True;52;0;204285.848176923;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;1055;True;42;0;227651.723447951;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;1248;True;47;0;130670.064130083;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;1163;True;47;0;216172.017679221;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;2086;True;71;0;382488.681494178;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;1752;True;64;0;243830.159647163;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;1796;True;60;0;194574.753214273;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;1606;True;63;0;291444.125131746;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);31;2931;True;95;0;470870.866844803;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);33;1911;True;74;0;864644.956048504;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;2320;True;74;0;371419.097316996;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;1489;True;66;0;426580.96348581;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);29;1387;True;62;0;1060793.26147749;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);45;2982;True;88;0;702838.389835074;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);84;3180;True;90;0;1374525.19965109;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);36;2247;True;85;0;718983.603361892;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);40;1951;True;85;0;1018655.10986513;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);96;3211;True;96;0;1591728.80257937;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;33372;True;185;0;239.668849785095;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;50262;True;205;0;240.662834413755;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;67629;True;229;0;274.868455806551;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);21;72079;True;233;0;285.511290363536;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);37;112045;True;257;0;284.35113632475;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);36;99021;True;249;0;323.378733968048;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);59;148055;True;291;0;354.439566723756;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;45731;True;136;0;111.62954279691;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;19939;True;101;0;116.831142180185;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;18050;True;91;0;108.040626913603;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;18629;True;120;0;108.666253876129;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;14705;True;104;0;117.342777940503;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;9434;True;46;0;42.7579539575473;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;12295;True;55;0;52.6158661958332;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;4056;True;43;0;32.1452678578468;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;7685;True;60;0;56.9204681824683;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;9318;True;45;0;49.2363876469113;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;8114;True;43;0;33.7700705698361;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;58227;False;-1;131.669815826449;221.547674339357;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;19833;True;54;0;165.377004374393;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;127085;False;-1;708.423662177484;1179.22224904858;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3578;False;-1;1878.9987859902;2747.95548740082;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;847;False;-1;3347.74901551444;4755.19962944671;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4657;False;-1;6526.2016043582;9556.08750457856;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7629;False;-1;988.592179198373;1495.97035763913;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;31948;True;45;0;30.7242387048272;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1435;True;45;0;40.2719322691147;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2249;True;47;0;45.0095353242157;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;8425;True;89;0;83.3223563147636;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;15528;True;93;0;91.7206646579774;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11754;True;91;0;77.8257092874655;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;14051;True;105;0;75.5753825449854;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;9868;True;97;0;78.4363516968232;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11643;True;101;0;90.2291562900188;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;10994;True;108;0;84.7349018662542;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;13197;True;102;0;78.4946690469754;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;15389;True;109;0;82.4106207740971;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;13415;True;105;0;101.307661371189;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11214;True;108;0;89.5106638665418;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;17316;True;105;0;92.1168595404044;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;14241;True;111;0;103.694587772512;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;12225;True;113;0;88.1483713286938;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;18008;True;109;0;94.6264450931715;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;14880;True;106;0;102.572078082216;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;20150;True;108;0;87.5340444555942;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;15644;True;118;0;93.3484309115896;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;18254;True;110;0;88.6936091743797;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;16626;True;120;0;96.5589659582447;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;15899;True;125;0;93.6436254294867;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;18554;True;113;0;102.72254942976;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;12747;True;117;0;88.1779349506781;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;18453;True;118;0;110.886126642614;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;19875;True;120;0;96.5686624886678;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;20599;True;122;0;92.5663174543883;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;22864;True;120;0;99.2071800905836;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;16446;True;120;0;111.178028950033;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;19849;True;128;0;98.4425644043565;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;22335;True;131;0;88.5345716710324;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;17156;True;122;0;108.834500879197;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;18963;True;129;0;105.348443092341;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;938;True;36;0;40.9132786276127;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;570;True;28;0;26.2358842389127;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1179;True;34;0;35.9569274983026;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;741;True;34;0;32.1375043597639;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;697;True;28;0;35.69789399096;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1239;True;38;0;37.4864640914452;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1148;True;42;0;39.4964400404669;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1048;True;33;0;39.7021516582811;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;969;True;36;0;38.0038894816242;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1027;True;38;0;42.1225872022221;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1526;True;44;0;32.3852963439468;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;933;True;34;0;39.8746399386812;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1230;True;40;0;38.8956763732462;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1006;True;34;0;42.4291141608616;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1192;True;36;0;37.9066311669969;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;993;True;38;0;36.2752122027298;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1763;True;44;0;38.7635448228679;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2286;True;50;0;48.8118397492151;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1203;True;38;0;43.3978486240975;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1578;True;41;0;43.0823420128758;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;6875;True;62;0;37.2836046765108;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);239;57234;True;75;0;47.856478186975;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;9236;True;60;0;37.5526860289572;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;9689;True;60;0;32.8895772775126;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);83;1582;True;103;0;10106549.9520563;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);212;2644;True;109;0;107644557.804421;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);627;16595;True;102;0;85897.6395035776;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;17587;False;-1;0;110228.90036947;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;33189;False;-1;0;7.18361842051536;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;16728;False;-1;0;1036774.25948906;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;11323;False;-1;0;16.1128873868649;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2365;False;-1;0;54594614.7314804;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7536;False;-1;0;14826281.8873867;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);819;7703;True;109;0;108820024.617986;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;5190;False;-1;0;73964063.2147699;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7233;False;-1;0;45193552.2378243;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3617;False;-1;0;17376867.0503035;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4750;False;-1;0;37190589.8588726;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;5073;False;-1;0;15373403.0455182;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);198;172752;True;72;0;201.575648504381;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);167;190172;True;65;0;99.0579550817062;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);336;150458;True;100;0;169.235183486839;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;378710;False;-1;222.490408815672;424.93225283366;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);164;97033;True;84;0;328.479816473079;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;244287;False;-1;206.348508415906;539.058120369919;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;343173;False;-1;156.072411477599;302.060831769267;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;345220;False;-1;187.21487522722;325.253288473424;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;171926;False;-1;516.07071924958;935.922115321932;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;216489;False;-1;289.444595439101;528.002398329389;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;141070;False;-1;287.010233279416;645.338451000999;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;120215;False;-1;355.667115843514;833.298861253282;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;133476;False;-1;384.041003465672;707.60732019514;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;72539;False;-1;587.267973853866;1247.96688277617;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;66793;False;-1;582.076251298225;1358.52127642286;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;59271;False;-1;781.133531041785;1636.45241496644;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;80923;False;-1;1189.98367169499;2077.5451385967;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;54583;False;-1;854.938656332222;1863.08751223012;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);550;1307982;True;60;0;79.5858698155649;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;102224;True;46;0;62.3812104346561;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);363;1083609;True;60;0;71.9050877290269;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;9296;True;38;0;48.0798956101866;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;64237;True;67;0;97.7022329288918;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);60;269939;True;35;0;37.9547284434222;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);351;1054356;True;66;0;69.0431774510524;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;3778;True;30;0;25.8046646200449;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;34042;True;35;0;41.3565925771275;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;43503;True;297;0;181.418274128097;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;4849;True;115;0;146.503406113228;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;37990;True;101;0;150.307213796752;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;37026;True;291;0;161.226593726826;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;155361;True;90;0;55.2339493479178;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;16474;True;116;0;125.962049599845;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;205567;True;114;0;48.7959359536213;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;65502;True;131;0;32.8003782329627;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);276;1163961;True;158;0;62.9062682622543;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;26872;True;310;0;536.94731706307;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;32742;True;81;0;105.273232569807;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;67260;True;198;0;81.4455902020485;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;136349;True;128;0;51.7076198378874;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;204617;True;86;0;57.0111054632869;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);24;61149;True;95;0;65.103968321181;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);88;667791;True;128;0;38.0821839230775;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;28834;True;112;0;115.089573226914;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;10853;True;257;0;631.387477477531;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;15782;True;120;0;143.586160228135;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;54656;True;98;0;138.420309053926;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;23953;True;226;0;170.106530383544;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);57;333036;True;88;0;39.8777092865869;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);267;823626;True;340;0;88.8731347263178;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;40994;True;125;0;110.378432722658;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;2989;True;78;0;46274.1699019298;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);70;6954;True;111;0;134133.562758861;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;3502;True;113;0;119155.506444012;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);467;21308;True;129;0;308214.049691926;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);63;2324;True;87;0;1142010.12530767;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);119;2934;True;91;0;1818658.11801846;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);145;2869;True;102;0;2462123.65181085;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4474;False;-1;0;5565156.41399467;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;1648;True;46;0;84239.1214038852;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1418;True;44;0;132203.51474406;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;1492;True;54;0;290570.951017867;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;1340;True;53;0;199534.871460498;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;1785;True;52;0;236893.264845986;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;2152;True;52;0;159578.315847269;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;1293;True;51;0;219089.838607658;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;1952;True;65;0;404029.080933001;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;1441;True;56;0;354509.323947172;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;1542;True;50;0;210695.218997502;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;1644;True;51;0;498499.69193682;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);41;2567;True;91;0;621721.083251174;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);53;3005;True;93;0;659951.802365524;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);33;2484;True;88;0;424485.946314693;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;1695;True;67;0;320948.022553123;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);87;3829;True;96;0;923078.611723643;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);60;2888;True;86;0;816579.396187199;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);147;3847;True;98;0;1711972.01266841;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);44;1802;True;78;0;859350.454329144;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);116;3596;True;81;0;1345279.51857943;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);164;5141;True;115;0;1428199.5437713;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;69480;True;191;0;221.537721267336;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;90964;True;197;0;238.350404432526;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;103819;True;207;0;258.105162932946;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);45;119423;True;229;0;276.789226581775;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);110;262261;True;267;0;313.54748716995;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);179;377523;True;267;0;314.100621618457;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);129;245439;True;283;0;362.435168632558;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);53;80815;True;120;0;123.095809224332;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);38;68089;True;103;0;94.5853880964848;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;41714;True;101;0;76.2440691007646;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;81900;True;124;0;108.851925479947;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;95085;True;119;0;78.0256616573033;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;45237;True;49;0;46.9849543127773;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;25489;True;53;0;57.454980092684;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;29172;True;36;0;39.0819349881011;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;48793;True;61;0;51.5111515176794;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;17698;True;48;0;37.3984868921334;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;5274;True;38;0;34.744356924158;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;43993;False;-1;115.4022924901;223.701050021305;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);44;32221;True;69;0;259.976948349537;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;97479;False;-1;705.940801754753;1265.66294423727;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2413;False;-1;1719.96015487516;2892.9921672867;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;533;False;-1;2868.35888769457;4855.27865978304;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3321;False;-1;5863.31878497122;9818.92419580146;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;5674;False;-1;855.709169337391;1533.40700813248;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);78;215476;True;43;0;29.2624511408212;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1585;True;45;0;39.4908154062525;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;3015;True;46;0;45.5240147815155;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;12274;True;95;0;81.444150365292;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;21650;True;95;0;83.5150111776037;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;23723;True;100;0;92.4486778957944;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16174;True;98;0;80.411357356721;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16620;True;100;0;83.2388599761212;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16393;True;106;0;87.0360385330597;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;14475;True;105;0;75.2902531561465;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;28510;True;110;0;72.9278913666686;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;20494;True;115;0;66.5746426168146;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;18427;True;113;0;103.851342532778;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;24449;True;105;0;82.3929529717221;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;27568;True;103;0;74.9961922815404;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;28070;True;113;0;90.1406553182204;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;19343;True;112;0;87.7424102825831;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;21384;True;103;0;84.1239284944539;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;21231;True;114;0;79.0015617693845;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;29268;True;112;0;91.0549359905876;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;31763;True;112;0;94.9948890173413;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;19422;True;112;0;84.1181334431419;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);30;31658;True;122;0;90.6155256266209;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;19787;True;122;0;99.5365310149707;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;35543;True;116;0;107.692865526122;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;24894;True;127;0;92.6119531312929;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;33798;True;123;0;102.099088925205;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;24363;True;122;0;93.1958200347414;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);35;34884;True;130;0;68.8153545742407;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);24;23964;True;131;0;102.628695435105;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;34446;True;130;0;87.8660697357391;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;33945;True;125;0;94.0152937649516;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;30896;True;124;0;134.293689803885;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;33476;True;130;0;116.95414872253;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;27762;True;137;0;99.3533683466483;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;849;True;34;0;38.4572358646983;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;891;True;34;0;30.0902860544679;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1094;True;38;0;35.6246902774094;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1250;True;32;0;36.9181591105395;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;601;True;28;0;35.850035190023;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1111;True;34;0;40.7149138809315;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1344;True;38;0;43.5379323318375;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;881;True;32;0;32.7356523082409;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1097;True;36;0;37.4666584652376;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1576;True;36;0;39.1786210735348;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;995;True;36;0;39.8514212892825;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1636;True;36;0;45.923717350121;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;965;True;40;0;40.2559893892424;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;894;True;34;0;41.0076538515022;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1655;True;38;0;37.2964868933812;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1606;True;38;0;40.8813889972187;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1816;True;42;0;43.9785172206881;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;2716;True;47;0;35.6379733091194;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1463;True;40;0;46.9807538379009;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1289;True;40;0;43.4729172100691;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);17;6484;True;62;-0.999700427986542;38.7887599841381;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);133;34242;True;71;-0.999610787257371;45.5764152833894;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);25;9069;True;60;-0.998252601361951;37.9415476018907;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);25;8717;True;58;-0.999748351983609;31.1301917753013;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);62;1061;True;101;-0.996265047228087;6690034.28630842;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);105;1140;True;109;-0.992032651785776;36674345.1237963;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);566;16844;True;101;-0.999887396581419;514935.304129135;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16429;False;-1;-0.999532497487745;263622.634622029;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;48928;False;-1;-0.999961823225004;1.42486071564308;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16716;False;-1;-0.999927910976078;258827.552398228;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;15423;False;-1;-0.999966051429494;12.3040957899933;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;20461;False;-1;-0.999900942668273;320058.559023892;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8450;False;-1;-0.999861801974411;1287014.6572324;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8714;False;-1;-0.999322606250328;38739348.3553017;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;5256;False;-1;-0.999522128142194;82348107.8082483;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7182;False;-1;-0.999722067266573;34454894.1495464;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3737;False;-1;-0.999699762090901;9357250.66072395;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4377;False;-1;-0.999269441701132;63613971.4614815;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7180;False;-1;-0.999531686305782;13070328.9672897;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;618612;False;-1;175.033317338691;214.175215651675;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);127;143457;True;30;0.405537243655667;139.575762176766;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;356394;False;-1;519.000039744191;530.487250863189;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;307100;False;-1;357.000017190352;370.95307923692;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;293495;False;-1;535.000052793883;539.67969344847;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;254440;False;-1;349.000042951666;404.720370831482;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;369259;False;-1;279.000518695452;345.691085994563;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;333774;False;-1;313.000011566095;357.522620376536;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;170124;False;-1;859.030730987913;885.45312946249;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;198040;False;-1;501.00040903315;563.050812980071;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;129580;False;-1;689.000042210333;724.149495044329;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;115315;False;-1;1093.03426802439;1135.55635256334;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;143600;False;-1;1047.34104859752;1184.54083726564;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;79007;False;-1;1067.00017082971;1291.49689059434;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;80101;False;-1;905.000614232384;1028.54652248819;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;67068;False;-1;1371.00001690816;1527.72741772112;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;94127;False;-1;1995.00707835518;2239.3995210039;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;52795;False;-1;2133.00002683047;2296.75866703903;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;23003;True;50;0.25610917678853;69.086450819142;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);33;140255;True;38;-0.855010908960836;57.5208948036212;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);75;243742;True;56;-0.26741286239932;65.1309572170064;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);54;126999;True;28;-0.164209774306142;38.1080555398349;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);95;208179;True;57;-0.872291739039259;117.29777611222;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);111;579414;True;34;-0.505050032169116;33.7215129380505;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);382;1365926;True;54;-0.00959376851543492;64.8483927639334;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2166;True;26;-0.178712593009096;22.6421551704475;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;29820;True;26;-0.0633415044580314;41.7921933078553;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);85;245578;True;204;0.926863479393937;1613.57174840518;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;12340;True;113;0.705779503893936;173.846545392574;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;12525;True;97;-0.728423668876488;151.037079917695;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;24066;True;209;0.0484227906206729;138.047586061452;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;329303;True;76;-0.310421552187959;59.8552186908962;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;5548;True;100;-0.924879344145246;63.2728991878547;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;117521;True;88;0.319173523839178;52.9220762028511;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);48;462205;True;88;0.87399973435048;39.2908810678221;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);113;690223;True;130;0.785251545619802;45.4812996542458;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);33;82674;True;202;-0.188202573539784;653.057483660995;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;15218;True;77;-0.0648775450256083;82.0333240673743;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);48;291668;True;176;0.233708292820355;57.0184500147856;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);12;123322;True;88;-0.518328748419103;53.1868502487278;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;314934;True;76;-0.131599390474893;59.7584920877938;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;15175;True;75;-0.777710406006179;83.7697348260433;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);46;448914;True;88;-0.0685240677876976;38.9539189190768;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;7271;True;106;-0.80881234435775;54.7340998088168;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);85;249216;True;200;-0.334372742722916;1599.72855960564;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;10938;True;113;-0.918919763490055;188.723776317843;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;12389;True;98;-0.00294400425764918;152.919584757589;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;24180;True;209;0.451506949705774;142.685151863871;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);103;661106;True;129;-0.620232651764635;44.8989837083929;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);28;72626;True;208;-0.55775174012303;731.564237977545;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;10724;True;103;0.455540289848829;77.6265288055342;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);15;2174;True;43;-0.98235849755926;38160.4353441514;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);13;2204;True;70;0.229918505637869;119173.365639128;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);96;7339;True;66;-0.991715790700035;163293.758062035;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;3242;True;100;-0.985990800888273;203199.275516682;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);88;12311;True;100;-0.968922381274832;281485.463674948;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);103;11564;True;78;-0.766015949550092;392141.874519705;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);172;3845;True;81;-0.989485684777371;2551717.24201924;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);266;4024;True;119;-0.992870413694936;2673496.17458268;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;2197;True;41;-0.407967061460003;96031.4272383604;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1370;True;41;-0.14749685262679;116123.959789255;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1028;True;42;0.959830414485107;183716.713272854;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1240;True;42;0.646611415616521;148246.138423824;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;10267;True;47;-0.354960674119629;55959.7043298922;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;895;True;42;0.905420780137843;174402.433222023;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;1589;True;52;-0.326811123325867;175737.589426127;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;5212;True;54;0.52763363976387;91200.6744758237;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1271;True;51;0.822483631699571;274788.846650039;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;1461;True;44;0.972233192050938;175600.790311351;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1188;True;48;0.604207859190278;298422.530037399;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;2339;True;63;0.00605823984651743;356445.94105177;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);47;2158;True;71;-0.933681741325968;1064263.35677377;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;11156;True;75;0.142270982797384;93330.6269823237;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);24;1914;True;59;-0.985667308785798;584561.738100559;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);55;2514;True;59;0.164456387592692;1128623.84507327;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);38;2186;True;76;0.521553789973983;869137.571634055;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);102;12832;True;104;-0.523098801971925;317405.250129605;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);72;6767;True;81;-0.955793727168717;426424.574490413;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);50;2277;True;67;-0.996228702364596;1160106.32656373;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);118;4137;True;88;-0.986438717686775;1468718.31260023;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;8234;True;117;-0.330723078609781;239.131357996649;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;11254;True;125;0.534270276098638;258.984026565616;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;12721;True;135;-0.861737339692999;273.417252420893;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;15263;True;143;-0.572683195384537;300.251727932638;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;15228;True;149;0.220170820700084;320.485311332362;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;19503;True;157;-0.216594674259701;333.777974572689;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;20606;True;165;-0.503601259320789;341.052539373815;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4668;True;84;-0.714177706145764;108.615245478981;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3948;True;76;-0.478400164040923;89.6865866047839;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3253;True;66;-0.779798082904796;83.0212461915234;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4566;True;80;0.136749519564561;104.590572092429;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;4026;True;74;-0.781513664769714;102.762717341039;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;890;True;40;0.254771792914146;34.3555877327943;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1264;True;50;0.259493070309746;39.7412396418046;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;914;True;38;-0.340252356296523;27.5871779682756;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1196;True;53;-0.608233472149928;43.1697952119359;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1027;True;42;0.104830353103965;32.7281815050889;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;933;True;34;-0.078646713438745;27.2624248092169;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);154;16255;True;52;0.499549319734587;111.07481401918;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5793;True;38;-0.776029667712762;208.567421710412;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;18080;True;55;-0.735690246213083;752.50623953548;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3716;False;-1;2567.13606198697;2703.45453672501;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);901;873;False;-1;4685.99369218899;4763.14601349257;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4701;False;-1;8639.26628173528;9444.6810324087;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7611;False;-1;1259.79268825836;1447.05438824134;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;9105;True;40;-0.621181122782259;22.6245185723602;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1115;True;41;0.251049710088898;35.1690830556594;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1381;True;46;-0.503595635995081;44.2148103154187;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4652;True;86;0.550504660955865;77.2782882913423;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4606;True;84;-0.0769221200965914;76.3734843185266;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4790;True;91;0.479912870321382;78.0786097556214;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4897;True;93;0.301295968378566;79.4638699546887;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4627;True;88;-0.37924036913516;79.9864061611167;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5147;True;89;0.204377574475658;81.394900490463;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4816;True;94;0.778632946209346;81.8863190609541;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5002;True;94;-0.227814653528768;81.7916823277733;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5594;True;94;-0.927107843536468;82.1908031204355;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5372;True;96;-0.64563970437536;89.9440390314975;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5020;True;92;0.552095701709434;85.7368310610558;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5630;True;96;0.921056786515311;83.7633966166599;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5444;True;103;-0.444609907197119;89.5106500994759;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5785;True;99;-0.992954806421397;86.2954635825214;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5335;True;93;-0.3412976951065;88.5333332908746;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6672;True;101;0.0579813230121422;92.2758351626883;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6416;True;95;-0.805073106570669;83.1665973040345;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6002;True;100;-0.949757595523148;93.657479689306;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5707;True;99;-0.290986229335417;90.5941149725481;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6871;True;106;0.536320669360608;93.9798430215157;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6836;True;105;0.488605738379343;95.1643922151501;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;7344;True;104;-0.192658918533781;86.2576381568964;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6313;True;100;-0.59657654240568;95.2595955657007;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7140;True;110;-0.993069914166382;96.1105631192916;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7645;True;107;0.89119805856198;94.757235140484;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6811;True;108;0.782734581168152;100.8992382169;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7323;True;106;-0.968070246264371;94.9257843931625;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6616;True;113;-0.890501456284198;101.272001996233;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7831;True;110;0.678898288718843;95.1777356611703;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;8088;True;113;-0.4051265192242;99.2532424993194;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7311;True;106;-0.209741707523233;103.548149956888;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7428;True;106;-0.285103073010735;103.254176116725;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;964;True;33;-0.527679975855947;42.3790920816747;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;530;True;30;-0.566480359792002;24.2319395352262;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;913;True;36;0.0510792802325819;39.88255404393;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;726;True;34;-0.779862371170829;29.9087866727621;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;657;True;30;0.461179749789266;35.2592777849384;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;921;True;32;0.168193883806557;34.9414750169178;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;871;True;40;0.734486079651157;35.1898509634464;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;731;True;36;0.945511459347564;35.6707640417421;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;731;True;36;0.707873383400903;34.3531167857881;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;778;True;34;0.441017926410315;38.3473587317805;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1040;True;38;-0.919339385777404;27.3549304732346;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;853;True;36;0.84845945790804;39.0850339888141;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1084;True;40;-0.624843323428577;36.3461253410149;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1070;True;38;0.868377985371453;34.3601125188886;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2102;True;38;0.537940025114426;34.3178771181238;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1188;True;38;-0.956512511687592;35.345851010901;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1528;True;40;0.624501189973439;41.626026524628;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1406;True;43;-0.0411718483274671;41.5673453478341;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1401;True;42;-0.906539620788088;45.1868971551142;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1556;True;36;0.105010163553529;35.6646808953447;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);16;6648;True;62;-1.99987421184772;38.9969727855721;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);227;55423;True;71;-1.99988491833205;50.6162837743529;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);24;8638;True;60;-1.99745257757486;39.0810053081377;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;9205;True;58;-1.99798303656186;32.4361780262901;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);68;1245;True;101;-1.98600638284628;3751124.19837265;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);107;1162;True;109;-1.99757639504856;40102453.4639884;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);582;17153;True;102;-1.99994865246115;505481.664812669;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;22503;False;-1;-1.99993432313201;9.20245153749547;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;48725;False;-1;-1.99999871104956;1.73372886548266;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;17134;False;-1;-1.99983683228485;252959.543600918;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;14626;False;-1;-1.99882017634754;12.7800698458064;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;20417;False;-1;-1.99962530285103;320187.351306822;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;9056;False;-1;-1.99818648956632;1200663.61084379;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;8783;False;-1;-1.99981963261954;46315819.7153389;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5494;False;-1;-1.99836310744209;85686176.2534274;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7609;False;-1;-1.99919394962452;26790130.55443;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3721;False;-1;-1.99885708279854;9400772.61609776;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4442;False;-1;-1.99713618866966;54315772.471553;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;6943;False;-1;-1.99982342496506;14134394.0330584;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;644285;False;-1;174.03399680929;210.907544329845;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);100;119132;True;33;-1.47573453536059;133.800151869048;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;366780;False;-1;518.000028595328;534.60849928412;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;319204;False;-1;400.000251717866;453.056367763904;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;405863;False;-1;534.000029750168;538.619101217537;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;268093;False;-1;394.000508127734;479.840593391613;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;376296;False;-1;278.001799676568;333.161336332214;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;344084;False;-1;312.000021295622;343.672479684173;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;174938;False;-1;860.00004670769;888.074682556104;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;207152;False;-1;532.000155491755;568.500593148449;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;141553;False;-1;650.000029094517;674.866106479214;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;102114;False;-1;1076.00138440728;1151.80903390984;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;151717;False;-1;1048.00197836012;1184.00440589982;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;82403;False;-1;1274.00001657382;1344.38632586268;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;81742;False;-1;670.000027604401;778.481528183846;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;71654;False;-1;892.000477800146;1297.89466396917;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;96031;False;-1;1994.00244185887;2235.47294617378;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;54233;False;-1;1956.00157035142;2204.27021955742;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;21758;True;48;0.472158959355279;68.4375455794594;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);50;215080;True;44;-0.687141220405298;57.6672722738621;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);72;238143;True;60;0.915960913019237;64.7766870824224;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);126;251551;True;29;-1.32950009933184;41.0347637923178;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);76;160880;True;61;-1.5530021318947;117.709719691844;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);152;800365;True;33;-1.67122835464367;34.4409477795384;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);515;1950147;True;57;-1.62414612976096;60.0575258250432;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3982;True;27;0.041741645914382;23.582514445193;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;37977;True;25;-1.28513028998167;36.4548215751684;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);85;247551;True;202;-1.83452961213632;1594.7331674019;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;19845;True;128;1.1254443168293;166.938799434641;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;17727;True;99;0.696595797639618;143.358350992422;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;25222;True;201;-1.66206204875468;134.881160417602;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;331542;True;85;-0.80178033877247;59.719943480129;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;6098;True;102;0.330082092587874;62.6934299615737;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;141331;True;88;0.00514170155168592;48.5385959646577;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);40;399941;True;88;-1.15953225603305;38.216978159809;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);53;358896;True;125;-0.70010271607903;40.3218760274449;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;68451;True;206;-1.93954566490815;777.357238338433;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;15730;True;77;0.0984530896406868;74.8735772799445;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);34;202592;True;180;-0.115348951013456;61.1234070801807;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;134215;True;88;-0.520285469722136;52.3047338551591;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;332570;True;76;-1.23284943552355;60.1183943682497;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;14191;True;77;-0.315593692621027;84.1161026286953;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);44;452636;True;93;-0.929314687349514;33.2993162212947;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3260;True;95;-0.634786836167232;97.5675370427004;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;249422;True;204;0.0471777972053633;1599.01457978804;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;10858;True;115;-1.15948478838405;192.118205080321;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;16407;True;107;0.00643613748552108;161.220212065647;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);33;171871;True;200;-0.404809226470445;182.345257363592;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);16;132794;True;106;0.0492271818449848;33.7139279368487;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;69161;True;206;-0.0994987590701779;752.854120185608;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;6331;True;105;0.330392167126011;76.7336867630765;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);15;2177;True;43;-1.96613953074726;38120.1711656292;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;2206;True;70;-0.500043540494537;119044.480789377;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);109;9582;True;80;-1.88031046459466;144820.722350182;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);48;3783;True;98;-1.98570283129146;210719.739725837;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);75;7104;True;96;-1.98484280704746;441998.083779226;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);118;5074;True;85;-1.48231840854619;1225325.71562902;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);173;3865;True;81;-1.97762114367337;2532165.12160541;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);266;4023;True;121;-1.96021318620081;2679172.80290233;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;2197;True;42;0.667406263140685;96031.2557945895;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;1370;True;41;-1.33241812853721;116123.927866926;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;1028;True;42;-1.65677143244854;183716.673683816;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;1512;True;44;-1.92198086153808;123307.912048932;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;10341;True;47;-0.529654111028488;55752.0580023582;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;902;True;42;-1.11013686242985;173119.324977665;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;1742;True;51;0.297194942039062;175893.462454387;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;5213;True;54;0.535766694944243;91184.7376485588;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1297;True;51;-0.231450381796551;272333.907022873;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;1461;True;44;0.443111116272915;175600.80722825;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1188;True;48;0.714507735667056;298422.498954929;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;2338;True;63;0.0615907572496639;355889.554082717;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);47;2492;True;77;-1.34980803325298;886469.83525034;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;11155;True;75;-0.173070262266821;93384.8005230812;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);24;1898;True;61;0.123508046438689;585562.465396113;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);55;2469;True;62;-0.169396703210378;1144336.82890901;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);39;2186;True;75;-1.09517504232711;869137.45843279;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);95;11948;True;97;-1.70000625946559;317236.363637886;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);71;6769;True;76;-1.54789792352724;421254.620978891;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);51;2327;True;70;-1.97275182044727;1139356.10085947;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);117;4147;True;88;-1.98329637571391;1465355.49273318;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;9603;True;121;-0.394926757735632;247.291831198444;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;10535;True;129;-1.31001324360725;261.979314941658;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;11900;True;137;-1.27964298393561;271.634759572529;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;14015;True;145;-1.41772539700276;304.732825328355;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;18257;True;151;0.0372395040640789;323.100527862835;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;19726;True;163;0.112093271739824;325.907744217575;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;18773;True;165;0.599397527333069;341.098603662662;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;5313;True;93;-1.62558025104254;94.723268856627;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4419;True;85;-1.71216433109351;88.6563177781158;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;3518;True;72;-1.65984602442935;76.3345458935003;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5052;True;90;-0.624872309446741;91.3161326527663;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;5266;True;81;-1.68325896546396;80.3376031498173;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1347;True;49;-0.24947560310805;30.5271740219304;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1522;True;53;-1.29429231364946;36.1795814605905;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1129;True;38;-1.57755952867566;29.3637410802605;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1452;True;57;-0.586173073661594;36.2317569378211;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1059;True;49;-0.556049444971629;33.1840671926232;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1070;True;38;-0.235609932912332;27.8032210563823;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);145;18490;True;57;-1.90178754921154;108.685613949798;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;9011;True;45;-1.93841623884552;180.029407074451;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);75;20826;True;58;-1.38120963581894;699.398748156293;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3732;False;-1;2566.27965076467;2703.43325399344;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);901;871;False;-1;4684.39734080452;4763.17883891116;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4705;False;-1;8638.03954886274;9443.6687441258;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7707;False;-1;1259.65755449499;1445.46780904168;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;6944;True;46;-1.86624413536221;26.3391373872744;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;957;True;42;0.536133593197974;38.8123021152115;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1403;True;47;1.01859593997644;43.3757668257614;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4771;True;88;-0.289297769912191;78.1108013748769;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4390;True;88;-0.19418265213919;75.1282636947972;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5244;True;98;-1.47259802532969;77.9921983842224;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4741;True;93;1.10810454986436;82.5186327486019;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4982;True;93;-0.341442612158806;81.0381786194038;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5083;True;99;-1.61569668707237;79.5154465259261;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5138;True;92;-0.0256791385010253;82.543020093149;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5268;True;94;-1.94995056835467;82.8132048359888;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5152;True;97;0.807567800771244;87.200109359032;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5438;True;97;0.9539868305223;86.4758957307094;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;6137;True;101;-1.2605253678097;77.1892761737646;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;6006;True;98;0.201065369975318;78.1553858419897;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;6060;True;104;-1.57008494602986;88.4136113518177;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5811;True;101;0.59402861194407;85.2946976400123;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5813;True;101;0.977720669926014;88.6649339228736;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6270;True;104;-1.45130942736348;94.9135928863831;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6132;True;99;0.886931147839376;86.9201749491518;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6263;True;105;-0.311577041778516;90.7760666484168;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6153;True;101;0.0111505910806127;90.1265849915146;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6667;True;105;1.0585524901089;95.1974970378236;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6450;True;104;0.601028633583816;97.9381068695413;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6435;True;101;0.880805547759312;88.4218651324287;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6365;True;108;-0.024553419102241;99.4572380922868;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7755;True;115;-0.394895623621948;102.497347290634;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7549;True;111;-1.38647229382138;89.1956110679359;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;7146;True;106;-1.15936014762118;95.3851001962108;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;7011;True;111;-0.841221928056898;97.3517798601743;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6921;True;113;1.68775739692513;97.8034577498822;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7936;True;115;0.541913690297824;99.8968978082806;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7453;True;114;-0.763050048967381;100.068020488625;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;8109;True;116;0.537000089202542;96.8898806533823;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7999;True;116;-0.240100492835092;96.282526656299;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;828;True;34;0.282995299567932;35.7540180769473;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;586;True;28;0.245444333295079;24.0758882898023;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;735;True;34;0.0896548787549394;36.3637304434485;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;692;True;34;0.0694562988679186;28.2926263995687;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;574;True;30;-0.587990763870995;33.4387215965893;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;685;True;32;0.73146481566665;31.5505933091178;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;864;True;40;-0.75235006900148;36.7265450211008;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;714;True;34;-1.09010295154997;36.9659995736131;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;871;True;32;-0.111961781099421;36.3474168601655;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;887;True;38;-0.86816017835781;35.530685775107;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;917;True;36;0.702647457226481;24.3795468245206;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;984;True;36;1.011041135998;42.8505137490443;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1505;True;42;1.58064984510683;44.8930347713343;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1127;True;38;0.311552559170664;36.6352372089712;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1263;True;40;1.25275202246977;35.0808652917911;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1179;True;40;0.539385156025824;32.7008938078592;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1410;True;42;0.792432448264413;42.454172018515;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1158;True;46;-1.17935708126955;38.9502380442944;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1302;True;42;0.82019699775623;41.4418171110977;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;889;True;36;-0.71174209132406;31.6482488408179;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;6683;True;62;-2.99535110313229;39.2923501410078;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);199;49266;True;73;-2.99984595179551;48.7434127758111;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);26;9079;True;60;-2.99776560533688;39.043229608949;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);26;9332;True;58;-2.99941744375947;31.5775720311731;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);69;1242;True;101;-2.97688427845802;3760978.3317257;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);109;1185;True;109;-2.99325218237622;39367303.9519361;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);595;17454;True;101;-2.9993574321267;497029.164674888;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;22015;False;-1;-2.99996724352239;98170.7086833688;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;45393;False;-1;-2.99995662365107;3.51707279527694;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;16759;False;-1;-2.99946522060757;258344.946120344;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;13232;False;-1;-2.99881114996914;13.7333756696679;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;20595;False;-1;-2.99974055495101;316520.645948034;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;9408;False;-1;-2.99981465935698;1156069.74843284;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;8442;False;-1;-2.99982047639779;39773120.8933352;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;5056;False;-1;-2.99359709210396;80625316.2789707;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;6960;False;-1;-2.99885485600627;31313579.7234823;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3733;False;-1;-2.99841209594086;9370009.2182213;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4567;False;-1;-2.99563351459598;62872373.9330531;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;6270;False;-1;-2.99996966868638;16395680.5017575;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;645114;False;-1;173.047728939935;207.981718946438;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);114;126514;True;33;0.259707719674198;134.453058122264;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;345022;False;-1;517.000048955902;523.482480714008;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;264435;False;-1;357.000056248158;430.324142382547;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;394914;False;-1;533.000010552816;538.97286643341;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;242312;False;-1;393.002917732113;479.22759335394;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;293155;False;-1;355.000042577274;379.672276715651;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;314440;False;-1;277.000022790395;314.322886078071;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;177516;False;-1;723.000168582425;751.037077064037;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;203169;False;-1;479.000125968829;559.93953562401;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;128868;False;-1;649.000048274174;678.237865387421;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;95122;False;-1;1091.12527490786;1154.40694411992;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;144329;False;-1;1047.03792466691;1184.36878285499;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;80804;False;-1;1091.00007538404;1287.49548362099;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;80608;False;-1;871.000611820259;1000.13471590389;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;68376;False;-1;1157.03731091322;1355.33078998099;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;94384;False;-1;1993.00038793404;2173.02445177093;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;53625;False;-1;1903.01084778924;2118.82966336794;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;14275;True;50;-2.35125402703474;69.678560401705;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;115515;True;32;-2.85417517733489;57.4201770131057;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);65;212277;True;62;1.1291213790556;65.4520313700518;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);126;188034;True;30;-2.54941045192509;49.3459023002567;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);11;27339;True;49;-2.71287438353192;109.33644728019;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);151;992148;True;34;0.771763371197397;28.9594719878761;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);162;462025;True;51;-2.50023760902706;79.0662998673814;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;4030;True;29;-2.8276430702897;21.5125698643813;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);19;156191;True;30;-0.0629377230363608;35.044497924122;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);139;258145;True;198;-0.945275017966179;1521.4404872639;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;12939;True;121;-2.60823560115333;180.210494521322;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;20812;True;99;-1.28922365526167;142.240924878056;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;23926;True;203;-1.79149168487242;138.359352533979;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);38;300924;True;76;-0.989091042424129;59.7150098860397;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;10012;True;108;-0.685878184477742;56.8841794887482;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;94715;True;88;-2.05428575680325;55.2279574286166;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);62;576520;True;93;-0.998417438007154;35.1780614482398;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);14;108826;True;97;-0.996905731035818;32.7406776997516;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);28;74867;True;210;-1.1476011919545;713.36538664945;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;22645;True;80;-0.882703937535502;78.8810132745403;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);58;343454;True;180;-0.863786515716364;58.5007233351138;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;157237;True;89;-1.08085146736393;48.5977188081729;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);44;344632;True;101;-0.821225329219003;59.1492176634579;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;13858;True;75;-0.660209145238721;82.8645657250359;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);41;405186;True;93;-0.997859236783282;32.5649163956462;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;4912;True;101;-1.57050803516549;64.1305701543079;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);86;255449;True;195;-1.60409638034371;1555.59290416742;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;14238;True;117;-0.0355123193168607;165.146650463731;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;17920;True;109;-0.838006248622204;128.194330564518;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;26767;True;201;-0.987080243410114;131.691134222833;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;110176;True;106;-2.83740905199079;33.4118204584668;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;31352;True;197;-0.947735299331944;1574.76785326805;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;11115;True;103;-2.97953845559598;88.3852256323377;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2177;True;43;-2.94678568558152;38123.1959516938;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2209;True;68;-0.606298896300745;118645.69420994;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);119;9581;True;81;-2.84684410777262;144798.503091592;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);51;3793;True;97;-2.98456913418349;209361.068644057;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);80;7113;True;96;-2.97920422441289;439563.479631732;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);123;5059;True;85;-2.8223512758605;1228884.62815321;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);173;3907;True;83;-2.99254659935485;2495372.31605978;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);276;3923;True;119;-2.93163297322189;2624026.23292244;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;2196;True;41;-0.24531233089292;95963.9604288184;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1370;True;41;-0.612393502896835;116123.971445852;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1034;True;48;-2.82240100289807;182761.937617254;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1240;True;42;-1.33605787173661;148246.07271332;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;10378;True;47;-0.721305299420518;55726.2908167826;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;896;True;42;1.66569412437533;173679.23921217;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;1591;True;52;-0.828592824669831;175676.531904028;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);21;5212;True;54;-2.54266951863778;91075.0573916617;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1614;True;55;-1.09213629182993;219957.766736192;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;1466;True;44;1.48538020182651;174918.441867792;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1201;True;50;0.410629100823137;294692.24027772;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);22;2378;True;63;0.817717551168854;356781.894953542;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);50;3466;True;87;-2.97805150597266;648021.714540322;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);45;11156;True;75;-1.82847876605973;93469.5964081782;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);25;1853;True;58;0.823534284636161;602305.012087011;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);59;2469;True;62;-2.30131468144307;1144336.92553931;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);41;2266;True;78;-1.66441693653558;838417.395039647;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);96;3352;True;97;-1.88789203431825;1368899.16512951;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);63;2429;True;75;-2.50425820402068;1191463.56616497;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);52;2242;True;69;-2.94684586485235;1170397.50567453;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);124;4191;True;90;-2.96413244491635;1453831.88555117;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;10306;True;123;-0.897598435123264;248.651163656946;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;11043;True;129;-2.18384168259047;261.195956900474;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;13194;True;139;-2.5983529293902;275.275933615841;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;17601;True;145;-2.3563152604533;300.006717857505;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;18046;True;157;-0.995653645133439;311.319103990416;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;19368;True;165;-2.27123981773445;330.934469881639;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;20728;True;183;-0.714910177381202;326.801112655065;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;6162;True;102;-1.77904209158339;108.56156814443;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;4990;True;80;-2.90170339024705;77.7362673603756;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;4026;True;72;-2.80302419411159;67.995480362032;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5224;True;93;-2.5975116098288;111.911622693049;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;4867;True;93;-2.1993663251397;95.2408066319337;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1178;True;42;-0.824071354150805;34.6467862533477;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1657;True;59;-1.09152718172014;36.7958440504365;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1307;True;43;-1.2040994941276;28.9310140894061;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1482;True;58;-1.4701318249433;41.8116938021114;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1004;True;49;-2.72989047678648;32.8531289099373;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1053;True;40;-0.967477561890836;25.9298766511658;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);387;90074;True;66;-2.04766602024793;31.497415941187;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6030;True;42;-2.29359732628502;199.027453716316;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);90;25594;True;66;-2.84266060210888;691.413145283076;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3742;False;-1;2567.15917068634;2702.93794749999;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;863;False;-1;4683.37194367888;4762.92859670219;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4591;False;-1;8638.94688245372;9459.19720262523;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;7557;False;-1;1269.3495049916;1448.25246316323;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;8707;True;45;-2.68205587737358;29.3692382456605;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1086;True;41;-1.50861398061207;40.3313000078702;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1558;True;50;-0.65785738530469;42.166432358036;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5332;True;89;-1.91755903182438;73.9794062220481;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4416;True;86;0.535658571652909;76.9588960462565;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5232;True;94;-1.90175463766873;81.0082626825412;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5238;True;94;-2.1101315920754;77.1133089816126;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5187;True;94;-2.34646143361296;80.1354355511058;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5167;True;94;-2.85529123333064;81.3873440506567;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6320;True;96;-0.18326137269999;74.7907123310654;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5651;True;100;-1.56297361504425;79.1394927559123;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5589;True;100;-2.654943971734;80.288941476772;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5826;True;100;-0.974949067446845;82.247791003807;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5770;True;102;-1.71353581674096;81.352068639202;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5695;True;97;-0.461969759064712;81.5299078069871;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5871;True;104;-0.319477822314704;92.1172592638278;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6211;True;100;-2.76513009321183;83.7811496713869;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6049;True;105;-2.89713633428194;84.8610062851366;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6913;True;109;0.80836868184077;89.1596161888301;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6714;True;102;-0.564148573933239;82.0502706288653;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;7113;True;108;-1.67024744705774;89.2729677683744;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;7132;True;109;-0.13309889525785;87.0043765917077;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6791;True;111;-0.694578250727885;93.7510192773127;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7039;True;115;-2.00923046237288;99.0678138078238;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6791;True;112;-0.926305780152933;96.001709752375;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7081;True;109;-0.252432799549975;94.4704361144346;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7870;True;120;-0.984093290746256;91.1561222264651;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;8030;True;116;-2.78151215137053;88.0177872742584;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7175;True;111;0.395001139210072;97.2385000276375;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7731;True;117;-1.97576524176438;90.7549962226489;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;8311;True;114;-1.88585573476081;85.7659324014711;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8457;True;119;-2.08234461354201;94.5466447682456;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8642;True;119;-0.75699566665897;92.575853539957;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8403;True;118;-0.671740566227464;96.9133622987882;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8448;True;118;-0.0582956704582536;95.1987301177108;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;719;True;36;1.17247366447583;36.3019232651617;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;688;True;28;0.591504728231349;30.8512477893033;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;927;True;38;-1.11490989202396;31.9479845383253;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;789;True;36;1.00770749524595;27.4481975606223;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;572;True;30;-1.84849476481252;33.1092461535802;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;756;True;34;1.28663100315567;28.6856870173123;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;863;True;38;0.410639297874011;37.0372795579828;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;776;True;36;0.113126709644276;35.359429032045;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;797;True;34;-2.51958172280322;34.0837715332773;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1103;True;38;-0.0553037985485529;38.5714472262739;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1012;True;40;-2.2851481667185;31.9855164507362;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;990;True;34;-2.81792021906838;43.7323311730067;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1214;True;40;1.08968831975464;38.9485712497739;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1147;True;38;-2.61339189932374;36.1947967392321;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1614;True;40;0.0470929290387281;32.2513750320156;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;986;True;38;-0.350909582036971;35.4364530213729;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1665;True;40;-0.87550556560769;44.6933231312526;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1649;True;45;-1.69125845594856;43.6304346785128;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1161;True;42;0.600209429673948;43.7110419002699;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1401;True;38;-1.04506535643948;30.4228936291266;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);16;6500;True;62;-3.98673552646615;39.1097198512049;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);128;33455;True;73;-3.99698365107038;45.011220721264;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;9414;True;60;-3.99530050530811;39.4324636225951;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);28;9494;True;58;-3.99715147167312;33.4538342867583;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);69;1233;True;101;-3.95379995552534;3800915.94898151;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);108;1179;True;109;-3.9714130796359;41602594.0982826;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);601;17372;True;101;-3.99992803484198;499050.698130044;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;20528;False;-1;-3.99945969879602;210558.08927377;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;44654;False;-1;-3.99990894272919;4.46758024614332;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;17129;False;-1;-3.9997441023587;252989.252217798;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;12755;False;-1;-3.99926413223113;14.3170733563384;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;17485;False;-1;-3.99841576814578;388641.437645795;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;9381;False;-1;-3.99616277217686;1160316.53796061;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);839;8602;True;111;-3.99903758615211;55906553.48658;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5115;False;-1;-3.99801531806496;75283168.3768681;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5375;False;-1;-3.99994353577492;66095399.9344215;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3482;False;-1;-3.99298123269946;9413650.16346715;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4481;False;-1;-3.99851128458907;56051802.2106512;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;6477;False;-1;-3.99711958691344;17560816.4218944;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;650912;False;-1;172.737292874948;208.069768827206;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);47;53524;True;31;-0.834695557521049;132.315814259654;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;363124;False;-1;516.000018987805;528.533778904649;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;327453;False;-1;354.000045020133;385.548949254685;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;406895;False;-1;532.000112082809;538.474258198999;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;244894;False;-1;346.000724367798;399.310525830015;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);354;150663;True;63;2.45116635712384;343.764045532763;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;349106;False;-1;274.000507302582;339.229516376979;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;146561;False;-1;746.000708326698;812.994195020758;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;200098;False;-1;574.0054515861;734.204516161728;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;137087;False;-1;648.000157471746;671.407086958626;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;104339;False;-1;1088.20334954197;1170.66296339604;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;149171;False;-1;1044.08416334544;1176.50708878371;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;83222;False;-1;1064.00015006959;1198.15203045979;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;81151;False;-1;902.002354353667;984.898830715553;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;71873;False;-1;1144.0087937899;1347.98935753389;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;95519;False;-1;1992.00070678443;2234.37132186523;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;50719;False;-1;1910.00037341937;2193.65445034756;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;13001;True;48;0.743588289592223;69.6226062225045;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);10;44854;True;36;-0.610021425695169;57.0881563100121;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);22;76926;True;42;2.26745633234617;64.5103602685858;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);100;204321;True;33;-2.01463122573431;39.1490186030815;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;46374;True;49;-0.839775535669073;96.1650585209972;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);86;460491;True;35;-1.97225300873269;33.8258260040583;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);104;318014;True;52;-2.08139526009625;79.8959842679467;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;11027;True;33;-3.63894626481409;16.2001009574779;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;126025;True;34;-1.86370017745704;36.2723647962601;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);82;240744;True;202;-2.12955076905412;1606.17160127862;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;14444;True;132;-1.37083404854445;171.21837439858;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;12508;True;107;-1.90670167277879;158.03417291833;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);22;120869;True;205;-1.56776509320725;167.605326965291;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);35;282455;True;82;-1.99113005399291;57.931560990953;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;3097;True;100;-2.75382471771623;101.542950133693;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;85331;True;88;-3.55564891898802;56.7087843065438;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);39;400430;True;93;-2.22475579670852;32.3356473248002;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);51;348558;True;131;-3.02046837239548;38.5178839567234;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);23;62044;True;192;-1.99668266251529;836.361692007213;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;23089;True;77;-1.9554227329583;85.9415147622218;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);47;284037;True;176;-1.73975450160902;56.6149056247902;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;106956;True;94;-1.95387603712914;60.835322749158;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);38;305883;True;80;-1.95121370998733;58.3748665431302;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;27990;True;75;-1.80740663772794;83.7599786261436;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);56;535566;True;88;-1.98529586940319;38.5006870466562;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;4295;True;100;-1.99116588010973;67.6733582648062;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);84;251552;True;197;-1.90151404957358;1602.90786281657;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;23457;True;130;-1.36432193935119;158.729088109;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;19961;True;107;-0.944558877006433;140.340454855367;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;21059;True;203;-1.16036279460432;143.295291511297;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);17;141284;True;98;-1.98888838290651;33.6639725051559;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;32063;True;183;-1.51638004161249;1538.53452893994;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;16480;True;102;-0.979934483291551;92.0698563974477;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;2164;True;45;-3.9838761165663;38257.5698579571;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;2190;True;76;-0.103234655271859;118724.74392168;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);111;9567;True;77;-3.70505885766123;144977.512367272;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);40;3146;True;97;-3.99913721904118;206948.875885927;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);91;12120;True;101;-3.88168316328976;284989.604909882;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);105;11470;True;78;-1.17145669794244;394994.801692646;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);174;3873;True;83;-3.95293287185623;2518977.81925831;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);263;3885;True;118;-3.84971566118752;2675206.38179776;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;2199;True;41;0.63598714053444;95865.178272746;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1370;True;41;-0.44329976590504;116123.974321073;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;1881;True;47;-1.22906087675554;108338.595938349;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1246;True;42;-1.87796412402669;147339.316532973;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;10434;True;47;2.00344654359084;55528.6510324819;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;886;True;42;-0.304425849721034;176206.635186336;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;1588;True;52;0.0392805459160734;175737.558860144;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);19;5212;True;56;-0.701356502576432;91067.309046267;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;1272;True;51;0.45894191435489;274381.625965696;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;1461;True;44;-3.453224524601;175600.825000459;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;1206;True;48;-0.157413201479899;292862.025645423;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;2409;True;66;-1.58128690979503;348260.156656548;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);47;2681;True;77;-3.57034806142112;824649.621983561;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);42;11162;True;75;-1.98544676135548;93281.6026054875;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);25;1894;True;60;0.283468917144215;586727.777946082;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);56;2476;True;62;0.124942039197749;1139209.21393272;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);46;3059;True;81;-1.52174925781868;724816.136262745;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);89;6958;True;93;-3.38867239253068;527356.346588951;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);76;6760;True;79;-3.95685035733359;426660.357179096;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);52;2251;True;68;-3.43678134653567;1168925.8099466;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);122;4192;True;88;-3.9872093982935;1448102.50403152;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;11314;True;127;-1.99989179521794;235.17491736122;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;13344;True;141;-1.37055490136638;257.040338971109;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;17952;True;149;-1.95421078799023;278.206081008944;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;21377;True;151;-1.97656770794493;260.31348514562;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;22748;True;157;-1.99407906084977;301.94475408059;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;22189;True;169;-1.87513355532434;324.715352938654;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;25110;True;189;-1.46345300947477;345.979116695811;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5654;True;98;-2.82284973879477;101.497652522157;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;5159;True;81;-1.86491646611361;86.1363027897272;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;4997;True;82;-1.84290526054935;67.7115629788186;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5803;True;92;-3.77929142852281;88.9821284865157;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;4704;True;85;-1.19319968912434;95.9607623425284;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1627;True;55;-3.96339687330806;32.2327878774652;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;2151;True;60;-2.36818220762917;39.2110693152192;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1518;True;45;-2.05149452297552;27.2912314254076;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1457;True;53;-2.08589320913232;43.2506244895049;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1700;True;51;-0.895121025338359;33.0475588599488;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1181;True;44;0.275921283418276;31.659767668271;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;51847;False;-1;66.0005109123888;104.316631801542;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7210;True;42;-2.74821757466915;159.93244168006;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);98;28203;True;66;-3.167255535334;571.620500456357;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3812;False;-1;2566.78163325823;2701.22871718952;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;847;False;-1;4684.38311436883;4762.99345046656;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4783;False;-1;8640.57246737395;9434.93794246384;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;7679;False;-1;1261.50830116566;1445.73647596602;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;15668;True;50;-2.84272936677687;23.7394709707568;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1392;True;44;-2.59259165012864;34.7195183911236;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1825;True;51;-0.918414077217883;36.9740767921774;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;4911;True;90;-2.55643773384226;70.5734299864974;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5121;True;99;-3.14767985751279;69.561885918078;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6164;True;98;-0.691308657029322;68.5688254207187;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5526;True;93;0.111500453255838;76.3829533427455;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5924;True;98;-1.7261331489897;75.4072078482875;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5827;True;97;-2.82977396567807;73.8970357192149;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6320;True;99;-1.95128781346199;74.7576197285396;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5783;True;103;-3.23943106049645;81.0756678000343;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5591;True;100;-1.89436602494417;79.8348145545701;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5860;True;103;-2.98583846492033;81.0461093058586;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5955;True;99;-1.93605420735481;80.0133869434456;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6643;True;106;-0.681888552700118;80.5828599665837;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7137;True;107;-0.125506713113518;82.2831780767478;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7302;True;108;-0.501739802072635;75.5777779267251;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7803;True;101;-2.48771130223186;72.8724288650434;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6562;True;106;-3.38015810743913;89.6565607758612;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6886;True;109;-2.13583910005905;79.4713652038097;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6581;True;110;-1.80133043127196;91.3241201524189;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6904;True;102;-1.1945069316749;84.241735185556;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6547;True;114;-3.97242237998751;95.7852276112144;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7157;True;106;-1.26909217483787;90.8883810482247;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8652;True;109;-1.89521227027067;78.5429303585314;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7838;True;112;-2.35744432283446;87.2804166566229;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;9171;True;118;0.0404756851682793;82.4992412138385;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8085;True;117;-2.61643001745289;92.9430154041403;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8453;True;118;-1.82255400336466;97.654457958078;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8383;True;123;-0.97517211221865;90.6253368294868;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7848;True;121;-1.45940886692116;93.7078041719749;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8969;True;113;-3.43680538955927;87.0871613566948;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8801;True;119;-0.108539925938723;104.175608821809;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;10330;True;117;-2.62400651286543;93.2765584025197;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8483;True;118;-0.76980663033659;97.6573523505041;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;745;True;36;-1.14024613757629;39.1126817087378;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;656;True;30;-1.69534050565927;25.9021708229124;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;908;True;36;0.300568703701984;30.9602745026584;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;612;True;34;-3.77282708127649;29.0536104102746;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;609;True;30;-1.14456534997773;32.6349853331217;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;705;True;32;0.362004092131743;33.8822097127988;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;845;True;40;-3.75347346428478;35.5793893635437;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;835;True;34;0.337222101323876;36.3482428507288;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;731;True;33;-1.52422895260352;31.0048374953382;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;826;True;36;-3.91285774480219;33.6161083722182;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1721;True;36;0.133482147070338;19.3552870766923;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;877;True;32;0.452458139719655;40.5995914481949;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1336;True;40;-0.490149419051665;34.2967248126133;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;965;True;38;2.55375613297976;30.0478290143021;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1281;True;38;-3.26682178641987;28.6654700273109;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;916;True;36;0.0214035436610707;35.2603124310817;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1190;True;40;0.316139668373456;39.9359110345839;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1752;True;48;-3.43763173717895;40.8472972455732;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1186;True;40;0.0412462055875205;39.4320129757886;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1032;True;40;-1.46620318175582;33.6952940275802;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);16;6234;True;62;-4.99732058495158;39.2116135131301;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);221;54783;True;73;-4.99895018059711;49.929986572134;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;9648;True;60;-4.98393202665445;40.1204838223345;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);24;8526;True;58;-4.98929632827141;32.1085560991314;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);75;1476;True;101;-4.98796095139718;17734532.8090723;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);107;1208;True;109;-4.97244345488606;34667948.0419965;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);614;16701;True;102;-4.99717045575249;520111.841325271;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;18182;False;-1;-4.99803523532955;13.9726306754989;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;43692;False;-1;-4.99975817743678;4.00277938657336;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;17185;False;-1;-4.99838186427876;252172.353416652;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;13490;False;-1;-4.99974642414588;13.896833485315;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;19354;False;-1;-4.99966791830941;343874.013642514;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;10097;False;-1;-4.99951679725177;1078826.74188042;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);818;8530;True;109;-4.9966522585585;55083789.6106847;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;5659;False;-1;-4.99995268881319;74161172.5880978;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7843;False;-1;-4.99831664375882;26043560.3443514;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3789;False;-1;-4.99568981583961;9231548.99879071;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4544;False;-1;-4.99952011276014;65779695.4484612;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);901;6419;False;-1;-4.99992070719596;16665627.5789729;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;655862;False;-1;173.146810663932;206.402687876765;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);75;95332;True;36;4.50818610354708;128.257948335619;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;375945;False;-1;515.00000230968;525.119959230136;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;284043;False;-1;355.000044242479;417.723523784356;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;418574;False;-1;531.00000144355;538.629333068503;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;247545;False;-1;345.003441562878;394.333893747634;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;383234;False;-1;275.00221299939;359.167831856268;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;298701;False;-1;293.000014957041;350.336363272618;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;180350;False;-1;857.000044973567;872.177476571476;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;210038;False;-1;477.000089271925;552.014977264477;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;137834;False;-1;647.00000551343;688.083090630935;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;97044;False;-1;1087.3389903113;1149.69266266462;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;154783;False;-1;1045.02351003234;1183.79647913234;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;84136;False;-1;1063.00006242655;1205.17132252878;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;83100;False;-1;847.000336011872;986.162645350028;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;73711;False;-1;911.002708034591;1033.86269219447;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;96096;False;-1;1991.01448439435;2230.56193444763;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;56098;False;-1;1877.00304725953;2135.53726101767;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);43;111059;True;52;-2.3276353568433;69.4746787196958;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);39;168287;True;42;-0.666092171178242;57.8651868498858;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);21;74591;True;46;-1.02641707566866;65.8501593073534;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);88;188000;True;32;-2.87230712262555;37.7773220512839;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;100367;True;44;1.59357959711625;122.638406472276;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);61;339341;True;35;-0.630436088717746;32.4951846380175;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);294;1167281;True;61;-2.93714877401346;54.1470225573265;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;26910;True;36;-4.09569375174851;18.2668672867211;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;31122;True;34;-4.47101642818703;38.1979478257193;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);85;251984;True;200;-2.89877440961952;1604.46016886481;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;14074;True;125;-2.47014573471162;179.09729274078;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;17640;True;95;-1.73593788069484;133.471556503266;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;185078;True;217;-4.00805932889136;183.438634232533;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;291191;True;104;-2.99780739657479;58.7252142737809;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;8344;True;106;-4.8901115683327;50.2948887235143;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;129389;True;91;-4.30866877050543;52.777860567626;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);43;428053;True;88;-3.07633472982623;37.160746901382;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;156822;True;111;-3.13954712736399;34.0975682394783;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;98015;True;206;-2.88623330829955;552.604166067439;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;18400;True;75;-1.77935046273253;79.5207233447421;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);38;223613;True;176;-2.94515083727667;59.074931128717;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;131096;True;88;-2.97286511583853;50.0311297666653;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);34;281178;True;76;-2.96388992292988;58.1352873648516;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;20896;True;68;-3.8177905179643;85.6202204889316;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;431240;True;93;-2.9861590377922;32.2453162846318;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;4151;True;102;-3.89609898854797;71.9325970598236;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);84;271045;True;193;-2.94158137121311;1436.43628883968;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;17240;True;127;-2.91459460925059;165.023767018576;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;32414;True;99;-4.14595313330458;146.381174401699;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);34;175409;True;204;-2.9854129087112;182.88445613944;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;65632;True;101;-4.55025674288639;31.1933855050354;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;32418;True;196;-2.61124127712624;1527.76472767524;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;8024;True;103;-4.31328777657509;78.3307603614636;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;2171;True;53;-4.9692761292538;38217.5723120787;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;2202;True;75;-2.66005056149329;117896.513346339;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);98;7324;True;73;-4.62777146586579;163656.250717144;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);40;3057;True;96;-4.96543896382928;211610.607447266;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);77;7139;True;97;-4.99661261215648;437939.80806174;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);114;3427;True;81;-2.8588577005355;1768140.67233335;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);178;3832;True;81;-4.99983240850262;2551337.4135312;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);247;3450;True;117;-4.98208571690232;2795922.48107969;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;2198;True;42;-0.193301081281761;95949.2938533875;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1370;True;41;-3.85297356119984;116124.037289421;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;1901;True;45;-4.53559148103725;106731.026738152;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1240;True;42;-2.49354494898279;148245.992955403;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);26;10428;True;48;-2.46487805781182;55619.8743433209;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;895;True;42;-1.71757989689595;174039.302827106;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;1725;True;51;-1.59366100867915;177103.328648143;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);20;5235;True;51;-2.75552331644833;90896.6114235964;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;2110;True;63;-0.972065645257041;172282.635278095;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;1461;True;44;-3.40615568608332;175600.780187716;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;1188;True;48;-2.43267021022396;298422.564365641;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);24;3073;True;68;-1.2454283480744;307891.012598925;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);47;2884;True;87;-4.96676257809939;776004.69694948;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;10991;True;75;-0.891763703847194;94661.5541382881;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);25;1920;True;60;-0.967083892769685;582264.939803883;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);56;2477;True;60;-0.554404599384593;1142564.47419187;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);45;2795;True;76;-0.399577376153123;788422.988484098;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);114;12278;True;101;-1.88147872075507;373348.131730315;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);61;2523;True;77;-4.6335527205996;1151174.90065482;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);51;2240;True;69;-4.8592109837845;1168443.66502872;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);121;4181;True;89;-4.99898642301512;1452659.29925897;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;14533;True;139;-1.36296823265169;254.093176954815;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;15524;True;153;-3.65767089587528;259.012878098526;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;15545;True;159;-2.91780059408294;251.34461595894;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;24290;True;163;-2.90685493680968;254.35967855622;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;21313;True;171;-2.60903340653006;310.254418953025;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;24312;True;179;-3.9234231221133;327.542242183598;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;31900;True;203;-4.34183023373682;350.885970027165;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;6663;True;104;-2.32705631448285;85.0443003390438;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;6764;True;96;-3.5217185963512;80.4850395840943;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;6768;True;77;-4.74909334897487;57.9300967883512;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;10552;True;102;-4.22105730940637;62.0080137977349;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;6485;True;92;-2.69575892188389;81.5666936041968;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1550;True;53;-4.17703056203994;25.3207377866683;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2118;True;64;-3.82984378786285;36.9608272664791;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1681;True;42;-3.11940974002677;29.3956765788617;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;3243;True;64;-2.68236769534758;41.0213900541906;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1578;True;44;-2.35317819162886;33.4085805183927;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1419;True;47;-2.82429428017898;25.0284076575427;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);201;28380;True;72;-3.13799218187946;89.8317448345756;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;11509;True;48;-4.11639547400009;131.172477803118;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);115;34204;True;75;-3.75325906963705;602.743656565034;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3708;False;-1;2565.34489792788;2704.00794824182;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);901;859;False;-1;4683.64943560709;4762.88049533581;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4701;False;-1;8635.17039783307;9443.94333354737;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7498;False;-1;1279.04954283128;1449.76949244859;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;9946;True;44;-3.239546408057;22.0274094153604;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1516;True;43;-0.992736787531868;32.9428018901005;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2006;True;53;-1.41337207165238;37.4749341958154;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5824;True;95;-0.950756691373305;73.0591479381314;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5602;True;100;-1.81532272455065;65.97188954587;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5614;True;94;-2.23507921827728;77.8575130010677;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5420;True;96;-3.22448589756362;81.2029567771896;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6212;True;104;-3.99642349639741;68.7015312066455;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5194;True;94;-1.17689971634042;81.3225016723559;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6241;True;94;-2.39583560423732;68.0761600061609;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7078;True;105;-2.41000813590829;70.9480970230798;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;7263;True;106;-0.956518141532558;68.9035080694371;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;7264;True;103;-0.962934427877392;69.7459451022869;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;5708;True;98;-2.30622623456001;88.5279758095742;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;10203;True;113;-2.46451306783804;64.1577496648989;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;8139;True;109;-0.945631515209391;71.3500539073744;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7885;True;105;-2.13801372942422;74.5378295651928;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7869;True;111;-3.14494505438253;84.3063289852141;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7147;True;107;-2.40103365080479;87.3947290339331;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;6813;True;104;-0.912835624959709;84.2494859684947;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;6895;True;107;-3.06924328583723;84.3431407640423;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7262;True;109;-1.03932558653845;78.9611490967164;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7503;True;116;-4.10875783260388;90.5553974660207;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7838;True;119;-3.0421137707504;87.3421332776855;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;11819;True;115;-3.8698833663342;73.9810143953377;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7878;True;109;-2.4077668448015;90.7091638836527;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8826;True;114;-4.12012602161622;85.2243976681758;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;8386;True;119;-2.29846988026913;89.5342260278436;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8669;True;112;-4.5910652212757;98.3303642762647;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8536;True;115;-1.84687697181798;85.1543563777777;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8667;True;117;-1.68226580726088;95.8583816876389;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;8922;True;120;-1.245978233519;91.494558388723;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;10160;True;127;-0.98991923871912;85.6265603031974;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;9398;True;117;-2.78983039212871;95.3880347044222;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8592;True;115;-1.97088375546545;92.0183013134153;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;720;True;32;-0.832724137153813;36.2014237900315;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;589;True;28;-1.54707969471211;29.3060428812304;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;634;True;32;-2.50961767207348;36.9100428431516;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;903;True;38;-2.59438161626197;27.0866172823003;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;634;True;32;1.26487810363289;31.734152048306;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;945;True;32;-1.86746889579458;33.6290767165506;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;957;True;40;-2.92428259454867;33.6707501765123;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;754;True;34;-4.62375212908897;38.2708847329298;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1329;True;38;1.07894032638471;41.5353813365633;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;965;True;36;-1.1269894159059;38.9812521620239;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1131;True;40;-0.674984058213878;34.3002415837525;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;819;True;34;-1.92314819755179;39.1661358127868;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1437;True;42;-1.61809705971652;42.020880802111;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1019;True;38;-3.84594262523853;33.6752602466581;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;903;True;38;-0.792294814154643;33.559156003015;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1198;True;40;-0.545189216521191;32.3808167630682;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1454;True;44;-0.853525827570597;32.2007714599207;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1520;True;48;-1.09330114074671;40.0061136635251;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1187;True;40;-2.7281796735377;37.2955009373448;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1268;True;45;-1.5604084900396;36.8663974085846;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);16;6363;True;62;-3.04271107332432;38.9333976772158;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);134;34647;True;71;-3.52030780163338;45.8450001757345;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;8945;True;60;-3.43431150844214;38.4137193929757;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);26;8957;True;58;-3.85064194301113;31.9500204272896;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);69;1198;True;101;-2.95785566072678;5856832.75369297;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);107;1136;True;109;-3.04840857599382;32661399.7230466;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);565;16961;True;102;-3.58598207686149;511409.514284506;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;22245;False;-1;-4.06133446550786;9.31604295298376;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;47648;False;-1;-4.28020969384894;1.56602432263608;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;16598;False;-1;-3.68250696805116;260759.96249217;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;12706;False;-1;-3.72977547349965;14.1377067786089;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;20115;False;-1;-4.1642357029697;323871.880810341;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;8321;False;-1;-4.32254840742073;1311057.70817638;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;8574;False;-1;-3.46410961285208;38597743.8574109;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4932;False;-1;-3.72959206261088;87849536.6539398;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;7051;False;-1;-4.28490089608203;32293010.8052682;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3593;False;-1;-3.20937397166112;9736418.61476383;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4256;False;-1;-3.58879753266144;54766652.4291185;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;7262;False;-1;-3.22610867988658;11105097.4756272;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;589827;False;-1;231.306465184643;248.205658103761;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);81;100467;True;33;0.362578591531998;131.834100533511;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;368300;False;-1;515.515110407431;526.939832015756;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;325506;False;-1;354.184964696429;426.81110975879;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;394757;False;-1;531.298858663722;539.397807331421;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;262483;False;-1;392.536153439525;481.950603140782;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;346306;False;-1;276.274599370185;337.543111820239;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;339723;False;-1;309.590483482315;339.435797615415;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;174865;False;-1;721.469592498937;783.050066426048;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;207367;False;-1;498.91184051376;592.021080534746;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;131569;False;-1;460.59996678403;723.131741687202;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;102586;False;-1;1089.83713073414;1155.01299345244;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;148905;False;-1;1047.66477351919;1184.24225305134;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;79339;False;-1;1065.10420642861;1312.26761691003;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;79039;False;-1;847.632769526357;994.901832479685;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;72127;False;-1;1116.49478420871;1283.73766115801;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;94943;False;-1;1993.60704771383;2235.45766279894;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;55414;False;-1;1694.28568194396;2084.05818677411;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;12133;True;48;0.887906099490372;68.7812589311642;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;34187;True;40;0.474684863085963;56.916373174256;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;12358;True;48;1.03559399330863;64.7310943927874;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);92;148742;True;30;-0.538968166575111;49.3103865883189;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);20;50657;True;44;-0.953896836416634;132.760607080235;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);156;805708;True;37;-0.0273223286417581;34.6278399550569;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);196;585516;True;55;-1.7249845106762;80.7257762196015;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2830;True;26;-0.0192443363568721;18.3654389986752;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;23009;True;27;0.787231465231423;42.4237876588327;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);86;250449;True;195;-0.184040178402104;1588.4875291599;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11337;True;113;-0.114503956466147;183.506485373817;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;18508;True;95;0.0754611812036345;140.52445511232;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);35;174268;True;200;0.00539009594872709;184.796072517109;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);40;312604;True;76;-0.571837746207999;59.1252787293118;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;4805;True;101;0.975314689036133;62.629029359063;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);15;153500;True;89;-1.81761140963044;48.8881410501328;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);39;373702;True;88;-0.761882990431858;38.4192297261463;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);79;506731;True;127;-0.865175413054154;42.8046144532101;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);13;32816;True;187;-0.477370617054381;1516.18242969918;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;9959;True;75;0.338521666714784;80.560029421255;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);27;161854;True;176;-0.699349464307104;61.9867031663958;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;108254;True;88;-0.413175692454225;53.4788254103323;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);39;303400;True;76;-0.544562196996233;58.6935260149723;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;8289;True;75;-1.61435759193164;80.1799095193554;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);54;516915;True;88;-0.603014810134023;39.4243271153049;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;5032;True;100;-0.102780416033585;65.7507600967292;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);86;256773;True;202;-0.126220063453971;1557.20387895877;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11262;True;113;-0.345629055759922;182.582500666037;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;15532;True;96;0.48327734486867;142.481338209781;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;20784;True;201;-1.12826298384396;143.618033043657;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);98;623463;True;129;-0.442682017154537;43.3522697162769;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);32;82174;True;199;0.324467096456425;655.584101464062;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;9674;True;98;0.474897256223029;88.9589564701253;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);14;2163;True;43;-2.98641578181541;38456.2009634862;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);14;2206;True;70;0.744570011506535;118623.310139316;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);97;7341;True;66;-2.96008106377437;163404.193421312;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);40;3149;True;96;-2.5774499322277;207926.051105593;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);77;7107;True;94;-2.54128795682239;441905.642893328;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);121;5059;True;85;-0.992809181146744;1228884.63025388;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);176;3908;True;81;-2.63362790780469;2506131.20656332;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);271;3116;True;109;-2.07084450314953;3431576.36221171;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;2166;True;41;-0.481575149934669;101396.781522271;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1370;True;41;-1.05571088892613;116123.922855054;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1028;True;42;-1.63243083554021;183716.699019531;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1240;True;42;0.483829149604241;148245.864766392;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;10263;True;47;0.263495486369017;55989.9520372923;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;886;True;42;0.28839640630303;176206.083245954;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;1589;True;52;0.977557339513341;175737.568681507;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);19;5208;True;52;0.544422033080522;91332.5223640136;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;1271;True;51;1.65516620586834;274788.868158205;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;1461;True;44;0.903224729250192;175600.726949022;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;1190;True;49;-1.20520688139506;297967.128546016;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);23;2435;True;68;-1.26864698538525;404342.753895183;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);48;2157;True;70;-3.56275086548252;1064474.73188259;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);42;11153;True;75;0.702744508504395;93543.0887180187;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;1853;True;58;0.429326104870182;602305.068691539;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);55;2505;True;61;0.188666493678654;1130331.28675258;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;2781;True;77;0.148093038208163;787488.107900257;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);73;2773;True;88;-1.79665534750329;1349915.99413568;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);74;6765;True;80;-1.87062087570412;426519.077850758;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);51;2276;True;67;-2.12138553667951;1159098.10056446;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);123;4147;True;88;-2.22668104505594;1464727.70629224;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;10327;True;119;0.74274548291911;243.153462767182;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;11479;True;129;0.393561591262514;256.065213725411;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;13585;True;137;0.60845029405521;270.023816189188;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;15995;True;149;-0.0224622055740691;289.978285770107;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;21119;True;159;0.304130015324292;317.908439739086;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;22885;True;161;0.812863755030681;338.391495368889;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;24064;True;167;0.862424519513045;342.383192521256;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4835;True;92;0.0835689804555073;108.955051224125;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;4971;True;79;-0.957175155866898;73.4815758705614;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;3465;True;67;-0.160460848308222;78.6816749921913;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;6012;True;96;-0.0221598747390067;83.8164771926639;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;5332;True;86;-0.631539915066548;98.5476691209718;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1626;True;49;-0.983082149206193;36.1940916954245;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1343;True;54;-0.120749510185714;39.8970960785538;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;847;True;34;-1.54215873155687;29.7358889329654;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1428;True;55;-0.371593201143901;39.1966952716843;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1189;True;43;-1.1842924033619;33.1023095351657;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;901;True;36;-0.309373838854542;29.6942492166265;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);201;42796;True;55;-2.02568149856518;47.2919569843454;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6382;True;42;-0.535064694968447;188.959708623193;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);114;36836;True;64;-2.96732878099878;530.94539525587;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3724;False;-1;2566.453130165;2703.18420490386;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;861;False;-1;4684.27297509727;4762.8966291639;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4665;False;-1;8638.31639208636;9448.66162423649;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;7739;False;-1;1259.63859163778;1444.33346691445;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;9429;True;48;-0.8340980876557;27.5126002760315;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1115;True;43;0.859528880451186;42.489253861677;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1501;True;48;-0.400155619482659;40.4472233298033;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4699;True;89;-1.14795035846725;76.8943621152014;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4305;True;80;-0.129384305255159;76.7851845898537;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4746;True;90;-0.03154320587007;77.2980742241553;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4969;True;88;-0.763384449743348;83.605907549332;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4766;True;91;0.509532730064972;77.9434512593882;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4942;True;93;-0.227032873723292;85.7411057957447;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4855;True;90;-3.47037177081;83.1368000751767;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5481;True;92;1.40416946417694;85.5684386994958;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5439;True;97;1.42526958157737;85.0267712107653;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5225;True;102;-0.547050935805845;87.2371556077413;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;5066;True;95;-1.24601001793366;84.1425088433452;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5388;True;93;-0.332897862021176;84.2548046101283;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5656;True;100;0.0588667107992489;88.2853978961389;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5877;True;102;0.632148033022606;88.8104030926547;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5778;True;95;-0.700675010597301;85.0658576077892;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6114;True;105;-0.45597138886119;93.9230434455456;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6240;True;100;-1.56784591545014;85.8314885117171;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6012;True;100;-0.220139983754878;94.7730768036356;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6428;True;102;-0.902556298109882;92.5851976134783;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6668;True;108;0.967365939260025;95.7467854374698;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6681;True;105;-0.411476040933711;97.0611526614503;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6511;True;99;-0.0440217727177224;93.7068365860286;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6568;True;109;-0.390766184467427;95.1636254433883;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;7069;True;112;0.19724084560133;96.9132183932077;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;7230;True;109;0.744778453100539;93.8126954137237;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7600;True;115;0.54415729115389;90.1973567361519;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7269;True;114;0.666109654273195;98.9019366692238;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6918;True;113;1.27417006564646;102.516232901409;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7538;True;106;0.809518927991188;98.4551271832225;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7426;True;112;0.0775025110128823;99.6376231117002;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7756;True;112;-0.803497397198382;105.808888713722;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7758;True;113;-0.94139562904222;96.7981276086837;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;755;True;34;-0.0848423565439037;36.4022191339798;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;488;True;28;1.33330834869793;26.0258522000345;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;694;True;34;-1.31001238620016;36.2622787605198;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;739;True;34;1.64199260015474;29.4030771444004;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;616;True;32;-0.991995875250207;33.5733612471516;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1095;True;34;0.635035568325178;33.1398963209711;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;899;True;38;1.0000458003005;37.0865333378272;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;713;True;34;-0.0858452696632301;37.0099733861679;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;696;True;34;-0.652070634037989;33.4961206059356;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;940;True;38;0.547842586812679;34.6582028968005;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;877;True;36;-0.178085354942944;28.1853107945687;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;799;True;36;-1.22326726180303;37.3710213617425;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;942;True;42;-1.87118652874587;38.3352030694893;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1033;True;38;-0.217004492801371;34.1065215139843;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1561;True;38;1.38696257017287;33.3863988404772;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1124;True;38;-0.0032405070103935;32.8653180994512;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2823;True;40;-0.985802789567262;48.7054526660413;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1316;True;45;-0.17814676349582;42.9485954937852;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1412;True;42;-1.11349753940863;43.0758041366733;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1086;True;40;0.649870316328105;31.6100315265409;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);16;6355;True;62;-6.21364450719702;38.8735235573867;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);248;58549;True;73;-9.13387486949363;51.0045586678531;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;9169;True;60;-6.03643536836814;39.1334151304619;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;8880;True;58;-6.95247903905958;32.3239347970479;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);77;1539;True;101;-6.20708875430882;18433391.8103549;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);107;1141;True;109;-6.3543361058423;32599423.952472;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);587;17278;True;101;-7.65820884940495;502113.508516521;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;22727;False;-1;-7.34289244302944;9.30983800100126;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;46646;False;-1;-8.74218938833105;2.75179314235278;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;17331;False;-1;-7.97189639980652;249724.382590647;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;14269;False;-1;-7.05759307142568;12.9433011910476;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;20392;False;-1;-8.95849620637928;321159.468566987;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;8788;False;-1;-6.97446718689034;1240476.46195752;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);872;8871;True;109;-7.21590944327689;51184354.0781602;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;5208;False;-1;-7.52446563952953;72396739.0869365;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;6997;False;-1;-6.87930880495107;31658260.3224295;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3626;False;-1;-7.01242277095453;9638098.52584118;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4256;False;-1;-6.75429531154301;61446735.4672809;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7036;False;-1;-8.05978369662246;12719865.0016667;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;637861;False;-1;173.32233290777;207.562627917799;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);226;160873;True;44;-1.01100200268277;100.229444335475;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;361648;False;-1;511.736378409184;525.282750316035;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;329455;False;-1;348.899215385073;386.922708245719;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;405815;False;-1;527.591915896915;538.727348544537;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;245205;False;-1;342.183103694873;392.338290093853;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;351172;False;-1;273.117008992356;349.389431443274;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;332845;False;-1;304.400031202793;348.461946785057;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;182729;False;-1;852.721348222683;869.495220721963;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;195147;False;-1;604.225235649474;777.087537353495;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;122456;False;-1;506.012129517932;714.854744432806;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;106699;False;-1;1085.72096280153;1163.87888998922;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;149633;False;-1;1043.60103354862;1183.99921536547;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;79234;False;-1;1250.65790929778;1318.56697416137;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;81213;False;-1;881.168705933425;986.666080283087;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;61997;False;-1;1645.8030443492;1733.86359252716;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;96113;False;-1;1990.30206160722;2234.2164871741;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;54240;False;-1;1698.11902981453;2074.88728285969;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;25023;True;48;-4.25946993038193;68.6944962573346;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;34286;True;44;0.0685982826295644;57.220468717396;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);269;833206;True;66;-0.0220890952782467;65.2688201605422;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);97;142232;True;28;-1.78221652350903;48.6185483576639;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;24456;True;52;-1.40493317911432;116.261789661763;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);182;933438;True;33;0.90621300474058;33.2967377531249;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);241;654403;True;56;-3.03884841379775;80.0799391179383;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;7007;True;32;-1.09849234145625;19.9190522512182;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;16969;True;29;-0.489500464993726;39.0412923465313;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);92;291700;True;218;-1.97216478960293;1371.24311059965;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;13380;True;115;-3.18161328328739;166.930769140845;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;14237;True;99;-2.47938782868349;153.435257384118;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);35;180163;True;202;-1.17137931765732;183.117204189497;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);32;256442;True;100;-2.47909055271127;57.9669685807323;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;5441;True;100;-2.48526628433737;71.8711972803278;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;115394;True;89;-3.10228346688186;53.1816784470994;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);37;367652;True;88;-3.50519646095079;35.0445223787616;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);102;630749;True;129;-3.58763346891056;43.7852334579477;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);34;89130;True;208;-3.50984485709599;605.248814794999;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;21904;True;77;-2.50500766732701;85.5333917371837;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);47;266092;True;178;-4.73318091001006;59.217438081071;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;108863;True;90;-3.17664306748317;56.7102588588435;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);43;338226;True;95;-4.26342171314275;59.1463410719919;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;17722;True;75;-2.66210341317189;80.1278256431275;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);71;658270;True;95;-4.08937217964202;35.8512831295751;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;4884;True;108;-2.31946912722855;72.345391063885;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);92;271649;True;206;-2.81967333595826;1564.26557971248;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;11202;True;117;-0.628149015290574;183.994319799023;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;15859;True;97;-0.964517067711042;134.197815259882;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;26545;True;196;-0.25803597833361;131.976570596836;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);73;483430;True;133;-3.60231371736169;45.5183606617184;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);13;33039;True;189;-2.53331100024437;1500.72211355369;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;7341;True;103;-1.18567171677772;76.6857407930145;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;2155;True;42;-5.38106298118679;38144.6635762453;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);14;2207;True;70;1.69664555828448;118773.531885352;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);112;9583;True;78;-3.20386802778471;145226.759936524;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);49;3885;True;101;-3.77310824126215;205314.098374702;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);76;7112;True;95;-5.83150291627575;441253.769183998;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);114;5075;True;85;-0.880980622296581;1224426.36435279;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);169;3910;True;83;-6.61777713162597;2497510.06908205;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);264;3884;True;119;-5.57818776917637;2770550.53000365;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;2175;True;40;-0.371160726656838;101120.870526157;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1369;True;41;-1.12505732227338;116123.995785786;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1028;True;42;-1.44577952324813;183380.235634445;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1240;True;42;-1.61393954415004;148246.258218355;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);26;10443;True;47;0.5399730453315;55585.2713888595;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;895;True;42;-3.07564881845227;174402.483656527;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;1726;True;51;-1.1714204885847;176909.151098362;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);19;5211;True;52;-1.51141609330366;91155.5109386539;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;1541;True;56;-2.15506914693494;227235.636951117;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;1461;True;44;-0.899304905364226;175600.765101822;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;1190;True;49;-3.68759393143845;297967.122613417;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);23;2985;True;66;1.03816438973199;318807.417877467;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);46;2883;True;85;-4.86316712706908;775836.961345121;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);41;11074;True;75;-3.33578851973926;93917.5709847742;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;1887;True;57;0.866249444961947;592769.466820085;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);55;2483;True;60;-2.72418984567846;1140006.58820928;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);39;2188;True;76;-2.47717318545909;867638.954976228;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);90;3375;True;102;-1.66861178823015;1367891.65518344;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);59;2518;True;80;-4.5699849164718;1156719.14813358;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);51;2287;True;69;-4.22793264839537;1157945.11698034;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);120;4136;True;88;-7.30242309804531;1469032.7452685;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;11972;True;139;1.09791255898682;245.480380494717;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;14472;True;143;-3.44703581986859;263.235362118456;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;15973;True;145;-3.67243165574124;281.379482952268;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;18445;True;153;-1.77673484962242;296.142470879928;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;26340;True;165;-2.73761988662111;315.050634023031;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;26705;True;179;-1.00090068496613;345.153413242773;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;27683;True;185;-2.1940066507147;353.43652095467;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;8867;True;108;-2.9893152264488;75.7160575631287;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;6239;True;98;-4.37035618553362;76.8970687359933;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;4085;True;75;-2.84283739090598;76.301659516382;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;8610;True;96;-1.61508025413353;69.3583552932736;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;8204;True;98;-2.30280550252834;91.3925401474798;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1730;True;46;-1.1023399410668;29.0139067133674;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1779;True;59;-3.36461667584317;43.1914037695248;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1577;True;42;-1.65313524590606;24.3582928191873;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1994;True;64;-0.266642700892161;43.8009028483488;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1159;True;45;-0.935490636145124;34.0742059863472;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;946;True;39;-0.788088631809194;30.6366477939282;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);590;116980;True;73;-4.84311878325635;33.9438382595574;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;14960;True;50;-4.04712207126851;147.963288529642;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);315;119532;True;79;-5.60293838442027;444.934506374041;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3582;False;-1;2565.78337193876;2708.10880855467;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;811;False;-1;4684.64926337412;4762.61206657664;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4633;False;-1;8637.35318537537;9452.65739417763;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7637;False;-1;1261.08658141966;1446.5688467025;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;20167;True;50;-3.66422445246679;22.8815534093387;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1029;True;44;-2.93347237679386;37.5015345553127;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2110;True;51;-1.1089690256614;33.596139581133;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5040;True;92;-0.227672142637996;77.4407326335227;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5002;True;88;-1.11494422676377;78.1145434287591;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5650;True;98;-1.16498659220398;74.6913515960882;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5530;True;91;-2.94182999468383;72.066730840955;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5138;True;93;-1.23941505796577;76.2288710436919;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5453;True;94;-0.575673627891321;82.0916287710494;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5944;True;94;-1.92869465921139;69.1770817556256;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6280;True;102;-2.71955855462302;82.3773911767505;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5770;True;96;-1.74089787993289;85.8583440943682;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5882;True;101;-2.62744447978894;80.761757925454;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5744;True;101;-0.257305018021508;81.5497133675016;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6626;True;103;-0.780031681096052;83.7507122818023;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6401;True;107;-2.37550298649553;84.127625614399;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5821;True;100;-0.546753817070583;94.7212421968722;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5911;True;103;-1.65041858698854;87.1646728329064;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;7073;True;104;-3.30425147252357;89.6852423406747;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6579;True;108;-1.16162392674448;88.5844227782541;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7561;True;109;-3.56158409641551;86.6596109574886;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;7080;True;107;-2.23450118587762;85.173953982723;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7270;True;109;-3.27633803635855;89.1673528846696;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7340;True;112;-3.35117031784601;90.5169057094273;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7979;True;109;-2.02096539237568;83.1680203529281;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;6910;True;111;-1.59636960690065;97.5177428688448;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7939;True;114;-2.26250323763795;89.8580081751689;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;9257;True;121;-2.93007449978855;82.5597704225461;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;9103;True;119;-0.595557661559469;89.0750227860386;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;6893;True;110;-0.914614014537504;97.2878001480232;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7701;True;113;-0.306089977953869;101.62769731423;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8394;True;112;-1.85507960447672;97.4070650551255;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8387;True;120;-1.00421272663418;99.3178751579998;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7930;True;120;-3.28338322036029;98.2655952692734;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;9383;True;121;-1.61083126508564;86.0721858122368;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;766;True;36;1.02850485348482;34.5747960695508;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;667;True;26;-1.53092008003229;27.5132036957473;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;900;True;34;-3.66473410710289;39.9687539141635;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;775;True;34;-1.08653890268778;32.2280365517785;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;523;True;26;-0.421207691544588;32.1577025573503;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;767;True;34;-1.00613942203165;32.283285995091;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;837;True;38;-1.30880519370544;34.8168719508374;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;748;True;34;-1.01910926481513;36.2654999863327;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;854;True;34;-2.15702326288425;32.7803403415605;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;803;True;34;2.72291427235562;37.9914528814761;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1004;True;38;-2.10019228617492;28.532674863713;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;889;True;36;0.648999532321896;39.9824818838469;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;975;True;42;-0.618097032265924;36.2316769621901;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1162;True;36;0.0786984381259865;33.7527075732966;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1327;True;40;-0.398531879335159;35.3136452086371;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1039;True;38;0.225509382192398;34.107055026438;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;3027;True;42;0.846776205107805;46.1298414812135;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1179;True;46;-1.12311243576316;39.7112934364616;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1453;True;40;-0.326148221394659;39.4463701772837;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;910;True;38;-3.75760831051032;33.5305874146096;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;6620;True;62;0;37.6211974195549;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);133;34001;True;75;0;43.9293788169828;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;9658;True;60;0;40.6978657717532;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);30;10324;True;60;0;34.8778615490624;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);74;1426;True;101;0;4742358.53381211;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);129;1427;True;109;0;89064169.7162952;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);729;17770;True;101;0;2676538.49398043;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;17672;False;-1;0;14.7209089755076;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;41985;False;-1;0;4.87861442306516;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;17977;False;-1;0;223543.965910055;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;10871;False;-1;0;16.9438285013748;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;19846;False;-1;0;301981.524403252;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3504;False;-1;0;9053305.54779768;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;8019;False;-1;0;80832978.8523885;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5340;False;-1;0;90035853.4150645;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5239;False;-1;0;72747147.9615332;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3777;False;-1;0;31064639.608108;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4719;False;-1;0;61857524.8361353;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5438;False;-1;0;14211235.4718849;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;686071;False;-1;109.051976097777;199.95888249373;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);39;40221;True;51;0;151.106860745417;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);176;88514;True;100;0;338.980552037596;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;345226;False;-1;221.825578898883;407.707934780233;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);193;113891;True;96;0;335.48106096855;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;264832;False;-1;181.096247138801;327.71527607103;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;413792;False;-1;152.759761063822;292.144615453194;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;373947;False;-1;142.484842405272;284.096121151475;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;167881;False;-1;484.326103619009;883.368972029078;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;217896;False;-1;273.286123795148;508.326018242613;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;142291;False;-1;299.412648350695;619.364608671041;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;120695;False;-1;471.313570006895;932.735857827475;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;141088;False;-1;622.505293858476;1101.90299065726;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;88586;False;-1;448.614543807301;1080.18635286685;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;71078;False;-1;458.314977806813;1053.93129152835;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;69918;False;-1;721.582629923817;1344.03971832561;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;91867;False;-1;1115.94812814591;2008.65272456064;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;58766;False;-1;1004.04154148956;2054.03084928677;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);40;99647;True;56;0;70.2802021526406;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);22;98244;True;36;0;58.9164057914495;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);221;701090;True;76;0;66.1739398240477;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;89674;True;37;0;32.9428868657213;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);77;151259;True;61;0;112.791602300664;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);37;195479;True;30;0;37.0861061402072;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);466;1695695;True;67;0;73.6410657876144;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2912;True;27;0;19.7132343936619;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;42926;True;34;0;38.3719803559904;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;69945;True;327;0;178.423534774852;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;15935;True;139;0;153.723874246589;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;12806;True;140;0;139.712233205593;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);45;214932;True;245;0;165.890442200249;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);37;281474;True;79;0;57.1805219144651;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;22256;True;144;0;65.1931025862898;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;110875;True;95;0;52.3584633121247;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);44;400499;True;124;0;42.8845956127459;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);68;432934;True;134;0;42.6907656097684;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;61834;True;243;0;409.796655261159;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;29269;True;72;0;91.4504039547664;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;120158;True;183;0;66.8762346753795;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;102907;True;100;0;53.5737284239358;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);39;312909;True;76;0;58.422509160276;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;7712;True;77;0;93.9481364781578;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);53;517769;True;120;0;35.8350689334579;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;7471;True;112;0;120.52720252155;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;21088;True;263;0;254.305816067457;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;12988;True;147;0;172.973076343109;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;29651;True;97;0;147.200802222393;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);32;162511;True;255;0;150.600926092988;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);251;1301670;True;141;0;55.895852544756;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);480;1631168;True;283;0;85.2543226212306;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;6166;True;105;0;88.5860494367852;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;2161;True;52;0;41552.3096520018;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;4284;True;73;0;81281.5212141196;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);43;3723;True;98;0;129182.450582597;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;28019;False;-1;0;318986.852524097;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);44;2004;True;89;0;1116048.8352975;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);56;2239;True;88;0;1423091.65680847;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);140;3811;True;100;0;1805091.92241601;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;6712;False;-1;0;4307345.43719517;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;950;True;36;0;100098.684302371;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1318;True;39;0;114814.70259919;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1316;True;48;0;210645.196575753;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1351;True;44;0;193862.18953137;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1481;True;45;0;154318.08072532;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1141;True;44;0;127388.212757459;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;1670;True;58;0;198190.834611022;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;1075;True;52;0;477414.302199415;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;1452;True;58;0;273011.363798682;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1519;True;47;0;162761.837466652;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;1822;True;62;0;278350.224726714;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;1588;True;62;0;524647.240865917;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;1908;True;67;0;950318.500893828;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;1025;True;53;0;527147.938281898;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;1537;True;61;0;502869.138876361;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;1600;True;68;0;845834.623332561;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);53;3249;True;108;0;820331.282701414;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);94;3682;True;99;0;1275013.82957476;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;1438;True;74;0;918153.295235124;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);30;1776;True;77;0;813969.552403985;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);61;2320;True;74;0;1393926.90872412;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;30610;True;213;0;244.925566492281;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;58160;True;231;0;269.757999659414;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;40407;True;213;0;270.453792118018;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;59807;True;245;0;294.342681814083;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;86002;True;257;0;337.665278018011;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;100065;True;273;0;333.74201672916;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);45;113157;True;269;0;335.390057528112;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;26714;True;136;0;110.675362245684;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;22344;True;114;0;119.50449175915;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;19881;True;104;0;103.972362585901;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);20;36872;True;127;0;117.91671688959;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;19098;True;137;0;121.556125846942;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2380;True;44;0;41.8986434898863;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;4845;True;55;0;52.6371715625078;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1082;True;38;0;34.9588609488035;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;5633;True;65;0;47.9077117747301;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2041;True;44;0;38.9532459043977;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1889;True;37;0;34.9730331311425;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;51079;False;-1;84.3440039801651;220.332500310724;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);133;133253;True;79;0;211.811287219263;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;127406;False;-1;657.716254346136;1351.83600114398;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3552;False;-1;1954.52417590862;2879.23470520703;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);901;825;False;-1;2519.30098603484;4719.89737503678;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4641;False;-1;7005.00471116942;10095.7387687156;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7635;False;-1;1025.32105395926;1571.35457372531;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;22954;True;44;0;29.1093074050286;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1190;True;42;0;41.5588145296058;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1800;True;48;0;46.862329561448;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;8625;True;88;0;78.8433564192216;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;5710;True;96;0;84.6898269190246;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7589;True;92;0;86.7254120325722;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;8544;True;94;0;91.6739841462613;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7570;True;98;0;80.8386023080978;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;10669;True;94;0;93.551224751608;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;6846;True;93;0;83.6609824531875;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7716;True;108;0;87.2760378322082;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7970;True;99;0;94.1636351574091;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;6964;True;99;0;96.6199747034605;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8926;True;105;0;93.6635387548778;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;11077;True;100;0;81.5051453076464;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9438;True;115;0;93.5731977484374;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9506;True;105;0;92.3976474117262;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;10277;True;111;0;95.5639263666122;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;8575;True;106;0;105.348557589257;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10985;True;120;0;94.8453728427975;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9042;True;105;0;100.982906067408;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9944;True;117;0;97.1335416434344;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;11219;True;116;0;106.700318701389;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9297;True;115;0;95.747238792869;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;12188;True;107;0;90.8658197746126;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10396;True;115;0;101.861424795652;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;11926;True;110;0;111.899654535376;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;13935;True;116;0;113.001701588066;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;11742;True;122;0;105.376642522671;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;14941;True;122;0;112.237005659667;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;12365;True;112;0;112.328164458277;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;12614;True;127;0;110.254723463864;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;12629;True;124;0;109.20713118744;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;13682;True;123;0;108.476036468329;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;11753;True;126;0;114.624511257933;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;936;True;35;0;42.536012503818;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;643;True;28;0;32.2251650624794;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;810;True;36;0;35.3012379556784;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;889;True;36;0;27.4611987626581;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;697;True;30;0;31.2262407588048;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1030;True;34;0;36.0574588976589;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1047;True;40;0;39.0978567766628;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;830;True;34;0;38.4712669140955;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1030;True;36;0;34.1256429084339;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1062;True;34;0;41.2746349729898;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1081;True;42;0;32.0421480917896;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;800;True;32;0;40.7973099300235;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1016;True;40;0;38.4847288089271;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1029;True;38;0;37.0919211360405;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1024;True;42;0;34.3738928305449;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1243;True;40;0;39.2854688717529;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1784;True;44;0;40.3011826642845;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1891;True;46;0;37.8804686219668;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1290;True;44;0;43.6143003695505;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1131;True;40;0;37.3510125138674;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);17;6467;True;62;-10.3843218314432;39.9795151952768;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);201;48979;True;71;-12.5540264784305;48.726578816088;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);27;9304;True;60;-8.80490117026705;39.5865608607421;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);27;9134;True;58;-11.2244189463982;33.6798086929283;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);68;1211;True;101;-7.3494796847121;1938221.93030468;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);109;1204;True;109;-7.91991145175006;26963970.8779018;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);615;17125;True;102;-13.1443748841852;506853.96842405;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;18865;False;-1;-12.1243581996345;12.4562173263078;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;43496;False;-1;-12.4552231037776;4.35713699071333;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;16932;False;-1;-11.4425357138594;255715.084041274;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;13314;False;-1;-11.3880025875975;13.7759842665918;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;20282;False;-1;-13.1416639365649;326862.956540759;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;9121;False;-1;-12.0340080225098;1197584.33018509;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;8370;False;-1;-10.0567434489472;38078791.2488286;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;5159;False;-1;-10.3251339660993;94974728.5830786;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;7475;False;-1;-9.8537999971684;30020492.3188055;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3674;False;-1;-10.871510486191;9528514.34026709;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4452;False;-1;-10.4057290276073;70517442.7971483;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;6463;False;-1;-10.6731874944409;17244803.5837;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;650986;False;-1;168.322606686422;205.65923884722;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);50;58519;True;31;-0.723974560692676;128.106758188022;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;366982;False;-1;506.765970310263;523.679191696078;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;266403;False;-1;348.042382832122;417.959366167149;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;408481;False;-1;521.442906488587;538.637491384891;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;236961;False;-1;337.797833616954;392.039481701114;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);776;312136;True;69;1.0147331660502;332.451525245288;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;318434;False;-1;300.569811166165;322.327465482494;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);647;105888;True;79;-0.143996549730914;811.964304684792;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;207315;False;-1;469.621852634946;540.432897339875;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;140550;False;-1;452.465094377785;488.951195205319;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;106755;False;-1;1074.43929107209;1204.06239743685;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;145692;False;-1;1039.88034365712;1175.86779959995;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;80103;False;-1;1038.90607589972;1182.45694031261;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;81537;False;-1;588.365069507785;860.498078853015;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;72003;False;-1;890.263901693909;1146.08496166974;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;93259;False;-1;1985.30083500136;2236.19252872383;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;53089;False;-1;1903.58514505842;2245.35526768356;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;13125;True;64;2.09279440279392;68.4266146647208;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;4530;True;34;-2.25118559448172;57.4063434918962;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;18063;True;50;-1.28346565126884;65.5650054372625;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;32519;True;35;-2.58744953159595;48.1349729228437;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;25773;True;51;-3.74440846862341;109.421801388433;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);70;359326;True;34;-3.78972114410892;33.9652281446434;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);220;619666;True;61;-3.10019921100333;88.0174122802964;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;7061;True;32;-1.59712313708227;21.2893516230913;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;39278;True;31;-5.76309731175387;33.6393854483681;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);91;267257;True;199;-7.2029800117929;1514.92930260379;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;11662;True;122;-3.7248235753331;184.275079040937;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;21542;True;113;-4.12041189791816;130.520592844122;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);34;167712;True;227;-2.21736914791371;178.802602523625;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);43;328754;True;76;-6.98727008211714;59.7415843825309;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2860;True;100;-4.63614189043944;82.3159278775466;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;105794;True;89;-5.86981291103743;52.5254776631411;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);73;652139;True;95;-8.51844695283014;39.1080026236551;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;111840;True;103;-7.81992497699356;32.8685407835304;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;65240;True;211;-3.20620401549067;792.332640882439;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;45613;True;71;-8.2197178997088;87.1227155067668;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;147288;True;177;-7.25734662764146;56.7850443184972;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;126885;True;82;-5.84490769270941;51.7400073799285;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;285586;True;87;-5.74283815436608;58.7831997100007;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;12652;True;77;-3.90861399982944;84.8154421278644;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);82;724399;True;94;-8.20270842951517;37.6833673932168;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3356;True;95;-4.34603899643341;95.9532492345734;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);89;266006;True;191;-7.39560254143008;1507.3552335399;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;10554;True;113;-4.33280458662802;180.189413414239;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;28543;True;107;-5.32756856779454;129.43101005595;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);27;139833;True;227;-5.79520954761487;173.595197685601;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);22;169126;True;110;-6.99574732936443;35.8038677025516;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;33016;True;185;-1.18795528476174;1498.59300787308;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;9755;True;98;-5.92628163039605;84.8435351655187;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;2131;True;44;-6.89064273610829;38162.8877040588;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;2198;True;71;0.824118275822883;118228.713998954;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);99;7344;True;67;-8.11227575524996;163243.101043918;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);41;3110;True;96;-7.38438763035962;208717.272370807;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);81;7115;True;98;-7.18851483154353;442540.314770978;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);110;11649;True;78;-1.24559330875737;388711.202661537;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);184;3881;True;83;-10.2764638051652;2512986.99470418;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);302;3809;True;117;-6.80937342845002;2715635.28119755;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;2177;True;41;0.668926206063482;101047.438282757;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;1369;True;41;-2.15087512513048;116123.773279862;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;1878;True;45;-1.00439833178642;108346.321911575;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;1246;True;42;-3.10671973797609;147114.179806761;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;10300;True;47;-1.97975655852444;55837.2611499568;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;882;True;41;-1.11570956331235;178599.95132848;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;1721;True;53;-4.16616152805726;155083.456175381;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);21;5233;True;51;-1.43355646019914;91253.7642561445;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;2027;True;63;-2.5280808491593;178794.91116657;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;1460;True;44;-1.12567908027663;175372.628875937;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;1197;True;49;-2.37751050276763;295616.120670937;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;3058;True;72;-1.08241093365358;323185.590552774;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);50;2672;True;78;-3.58731680092664;832327.354692344;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);44;11165;True;75;-0.875984225518353;93204.3547223926;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;1928;True;59;-2.34083481304196;576040.619603859;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);58;2488;True;62;-2.01494957138161;1137460.02941065;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);42;2184;True;75;-1.80492474413337;869867.54754998;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);101;11990;True;97;-6.96777289917117;316036.876606566;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);79;6768;True;83;-2.88617515016594;426926.909802104;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);57;2280;True;68;-6.68877657926409;1162974.08428172;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);129;4205;True;90;-8.57860507811204;1451609.43634511;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;11724;True;137;-3.97763724283386;234.305750475838;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;17206;True;151;-2.58965303472412;256.100823858621;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;19764;True;149;-2.30186479532901;286.44084529831;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;21553;True;179;-2.5779686971002;298.731655925;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;27845;True;191;-5.37542862199607;276.098847184868;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;34334;True;197;-5.9548097068339;327.481830185212;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;37238;True;199;-4.83439929639499;320.66296686254;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7919;True;112;-5.63750671538208;102.207234043541;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7564;True;92;-5.19872063366714;81.1576230785733;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7011;True;81;-5.42688109767292;55.1981602668404;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7757;True;105;-5.59058473272892;94.5173983477673;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;15623;True;92;-6.42447122019309;44.5640522769661;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1695;True;47;-4.73353114246548;30.8353072413717;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3656;True;59;-6.07747431017826;37.5624608768949;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1820;True;42;-6.54424482388295;27.0252916216321;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2208;True;63;-3.21418678665069;39.2071411346187;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1790;True;52;-2.22162542638328;28.4397754865393;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1994;True;42;-2.80900107459637;24.2355896025676;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);686;89191;True;72;-10.1170553472557;59.2862577307544;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);22;52380;True;54;-7.78020722351912;63.1658174154339;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);292;112396;True;70;-11.2756798422511;298.901402794089;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3464;False;-1;2572.33266228066;2712.90921992003;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);901;829;False;-1;4685.3014712352;4762.86539608926;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4601;False;-1;8634.13052132398;9458.16150599212;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;7492;False;-1;1283.89161305489;1449.4427921776;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;23027;True;49;-7.63897530035977;23.2551495549562;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1116;True;43;-4.74853103652608;39.6883631653889;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1497;True;53;-5.22663702638411;39.5653611022143;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5183;True;98;-3.95642906835582;73.5756664392091;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6939;True;94;-2.61507662511373;69.6494936735176;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5028;True;94;-5.482032080699;76.3890684124326;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;5768;True;96;-4.98358302553052;70.7018763594431;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5537;True;95;-1.14430075558783;77.4947618224284;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5077;True;97;-4.09297298009396;80.1709924887858;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6327;True;101;-4.72292638149831;73.6356481464681;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6915;True;105;-4.20867710106459;78.1124858604896;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6531;True;104;-7.25257590314123;78.0050761802073;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6314;True;102;-5.18570955705675;81.076216797706;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7052;True;104;-3.77337647324999;80.4650509211486;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7601;True;106;-4.71065722820408;69.784229090553;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6479;True;105;-3.24284743203347;91.7736379970901;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6535;True;111;-3.92389522890391;82.3121540339855;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7467;True;106;-5.19030087648437;77.0522468840493;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7533;True;112;-5.0460331885248;90.6497015796466;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7134;True;106;-3.45072433190104;86.6323910568327;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7637;True;106;-3.48479686428854;86.471325187855;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7772;True;105;-4.82389381618347;87.5157613609814;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;7934;True;113;-3.55916695702043;95.1850214521874;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;7660;True;114;-4.50425559787484;90.7063162865938;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7806;True;103;-4.44983606205997;89.2079388938162;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9712;True;119;-4.00841192782524;76.6060700938447;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8819;True;113;-2.29431209176343;102.130955548294;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9539;True;118;-2.99981978427254;82.2245788633712;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8692;True;120;-3.43293382609048;109.474062229503;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8607;True;120;-1.25251459435894;92.8176901547847;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9635;True;125;-5.785307501768;83.5507784634457;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8136;True;116;-4.45447229774503;93.277156445997;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8925;True;116;-5.19990176234216;96.2722626616798;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;10952;True;118;-5.88384682846793;98.5499308451125;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;9774;True;111;-6.70531732454096;87.2239773674014;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;722;True;35;-1.04078716696784;38.0485187605062;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;592;True;30;-1.11653431027211;31.8257898477048;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;764;True;36;-1.44300771018224;30.840369273656;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;660;True;34;-1.03609821104964;31.0883087241886;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;566;True;30;-4.87682409744042;30.4913163728929;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1129;True;34;-2.23060558849096;33.4211078392737;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1120;True;42;-4.14457042723081;34.2996307565623;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;883;True;36;-3.13712575157017;35.4566572796814;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;854;True;38;-4.9750301866808;35.4944644335698;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1169;True;34;-2.64916660122583;41.8514918422383;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;912;True;36;-1.75424686644476;28.3536548999069;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;894;True;32;-1.33368127599448;40.675396210236;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1040;True;40;-3.47027367373538;39.3128381639539;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;932;True;38;-1.33240012222038;31.9341804944153;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1411;True;38;-4.33475425228794;35.7738880013232;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1026;True;40;-0.00749480238703678;37.22940245968;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1603;True;44;-2.40349345706069;36.4036291197355;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1553;True;50;-3.38495709200264;37.9443103691363;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1543;True;42;-4.40381422622745;39.1440745142448;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1475;True;46;-3.26161936543513;34.2548149307991;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);39;6854;True;62;-13.1565404019646;39.6800231267153;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);351;39999;True;73;-16.9924537613563;46.8246922266729;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);58;9318;True;60;-15.1468321258349;39.349808512198;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);65;10013;True;58;-12.4956740204024;34.5173330342531;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);161;1380;True;101;-10.0517881843684;5158149.69569214;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);256;1361;True;109;-14.3300218237551;43087597.3416651;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8441;False;-1;-13.4149167499544;1026419.18493375;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8348;False;-1;-13.9912418709072;20.7562908507837;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;16245;False;-1;-15.8385056714884;6.69146443224589;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8809;False;-1;-13.2171766059525;492105.341810053;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;6877;False;-1;-14.4458114853417;11.8137499580475;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;7200;False;-1;-15.0729908127721;908669.194326539;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2601;False;-1;-12.3353513891685;4230679.75439295;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;4225;False;-1;-15.1118244359048;39826469.2659855;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2366;False;-1;-12.1183400089834;37461577.542174;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;3096;False;-1;-14.7365097760505;30546434.5236692;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;997;False;-1;-14.6005764511698;11713573.741462;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1610;False;-1;-11.9168693124414;18116371.4188681;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2106;False;-1;-13.9093576030517;11489470.8866507;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;292608;False;-1;177.531295299505;214.082044822305;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);121;69786;True;41;0.050556145038762;137.025996375802;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;174093;False;-1;503.712404641809;526.170133288219;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;163792;False;-1;342.480893781131;391.743180236501;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;206457;False;-1;517.847864083;539.751558666174;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;118035;False;-1;314.638480995937;389.452878687978;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;187908;False;-1;271.564790900452;320.993937655406;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;170411;False;-1;296.193153112226;351.34335046803;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;86622;False;-1;711.771364715646;784.552964751338;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;104672;False;-1;466.87785484002;556.876509521108;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;70331;False;-1;653.537623404105;696.154242931246;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;51676;False;-1;1066.99890303262;1160.65767988729;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;72491;False;-1;1038.97148217058;1176.90469595629;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;39488;False;-1;1307.56659855311;1356.77411828508;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;40139;False;-1;898.039575716778;1061.88338496596;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;35002;False;-1;916.177907468193;1371.00087149322;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;46089;False;-1;2155.05980992587;2328.34284962648;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;23562;False;-1;2184.70710688034;2353.80363247666;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);37;48375;True;48;-5.00002516561892;69.1172459324027;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;12123;True;34;-2.95162766973953;57.1413939036056;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;31681;True;50;-3.56740023666219;65.5456348054539;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);70;55620;True;36;-9.30645216622494;43.0454624063315;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;22661;True;53;-4.79378766648954;114.632689992576;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);112;296595;True;39;-7.09760166400352;31.6084734720765;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);252;438824;True;65;-14.6925433022658;80.6641550628067;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;14585;True;33;-8.1512330763902;18.9385582762494;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;81464;True;30;-5.0133568211617;36.6197318170306;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);184;285600;True;219;-9.94377280346075;1403.71224597599;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;18673;True;134;-10.1086057080101;163.568365139411;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;19693;True;104;-11.5526805125091;124.209027149906;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;15196;True;202;-7.03160637911314;146.549529700133;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);54;218464;True;76;-6.36543073970082;55.413140726011;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;6535;True;111;-9.6904769622641;50.3676654546977;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);31;152938;True;89;-12.9978853832498;46.7347307406133;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;475700;True;96;-12.198999069216;36.5718910557016;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);48;182411;True;112;-8.01171709066847;33.1534767502489;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);87;110866;True;238;-6.13979047259036;494.94638361713;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);51;90091;True;79;-8.57215017483085;90.9139363495309;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;163047;True;193;-11.6898287160529;46.6420040778314;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);21;100854;True;88;-8.35348415200182;51.7499626476286;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);79;307846;True;80;-7.70825120929388;58.5610454633699;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);29;52251;True;75;-5.93779566967885;87.7315928978578;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);133;599869;True;105;-12.4038075305318;33.0212465310366;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;5742;True;102;-6.77357686583323;51.2543741425017;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);159;231272;True;217;-8.41772945828483;1626.83496825975;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;11729;True;115;-8.34041291129932;175.766023671555;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);3;9180;True;112;-3.73298184313154;167.318112552354;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;26619;True;216;-1.25243915669065;141.592763080533;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);69;246767;True;128;-11.0163447241695;38.9828886506424;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);26;32122;True;183;-6.85095163489382;1509.22468073896;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);4;8949;True;103;-7.45313658561677;89.7619412493232;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);33;2163;True;45;-11.1272701293824;38204.3744485316;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);32;2195;True;74;-1.36971008693654;118365.28521386;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);267;9589;True;77;-11.0080274780147;145390.14369163;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);121;3780;True;103;-11.3510863684363;208502.931682168;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);149;11557;True;99;-9.69069912907162;187437.431914757;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);241;5083;True;85;-6.79743476010466;1222631.6530802;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);338;3830;True;83;-9.78134116045298;2558214.52344313;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);502;3969;True;121;-8.51978494182812;2716612.51933365;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;2176;True;41;-2.3963871937501;101032.380950873;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;1323;True;41;-3.26052603449623;109726.915306684;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;1891;True;47;-5.44146424883622;107687.975852258;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;1527;True;44;-1.19542796507927;121476.941634906;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);60;10079;True;48;-1.58538967967927;56470.7509876905;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;886;True;42;-3.20432333608845;176208.448996276;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;1609;True;52;-2.86000644618907;173965.717099195;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);46;5228;True;53;0.139472706007789;91120.0565220581;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);25;2042;True;63;-0.909798211270011;175980.078816525;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;1470;True;45;-6.15219605357897;174241.159968814;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;1205;True;49;-2.05958607290524;293333.168696391;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);49;2511;True;67;-2.44886070524068;352284.047900213;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);100;1914;True;67;-6.63759405304168;1163892.09429972;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);96;10921;True;75;-5.16463331039699;95157.1250784895;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;1885;True;57;-2.39560982663339;595142.835289954;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);124;2492;True;63;-5.66767277099773;1134924.85937793;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);87;2186;True;75;-3.91078502485532;869137.467328556;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);197;3389;True;100;-4.13622616563839;1364684.89742817;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);164;6799;True;76;-4.16949480872728;414823.907735419;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);109;2262;True;67;-10.0277505953388;1160311.37882977;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);251;4180;True;89;-10.4044173529194;1454258.99484717;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;16281;True;157;-12.930970442808;216.635386539259;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;20749;True;167;-3.75912225071304;265.478792079167;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;22279;True;179;-6.94542855334226;276.179143462072;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;22484;True;189;-6.12291375237144;291.798188802132;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;30061;True;203;-5.09283164625063;312.487482595253;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);26;36709;True;217;-8.53131761775884;296.38169013082;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);32;39302;True;213;-9.42841903003561;354.906933649252;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;12825;True;111;-9.73051543403885;67.8410664156988;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;20982;True;96;-8.60429673482211;40.4706667862188;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;15486;True;87;-10.2974645555228;46.9151845042704;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;15861;True;109;-7.22829087238494;74.1071322606503;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;9420;True;98;-7.67083686738186;80.6107555960113;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;4966;True;49;-4.82627853175871;24.2725715535156;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;3045;True;64;-7.98656147945043;32.4582930125564;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2037;True;42;-5.23178323026302;26.2592292954232;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;3476;True;60;-7.11796898654479;30.6926930810956;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2568;True;51;-8.03528334711584;32.9020366583798;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2690;True;43;-8.04623878644561;23.2507740067458;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;23919;False;-1;119.531959614989;175.472536996491;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);94;46371;True;60;-15.2237317680141;155.513656822289;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;81469;False;-1;886.904428807923;968.427963973695;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1420;False;-1;2590.43361503253;2827.34249247553;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);901;273;False;-1;4716.40848104276;4737.50997070626;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1693;False;-1;9311.48382603028;9844.2972242708;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2884;False;-1;1400.78554584693;1539.27782887716;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;32819;True;53;-12.1283587323024;19.9022551669342;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1987;True;48;-8.11716549969744;23.979508573543;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2060;True;53;-5.49029090177229;36.0510218122474;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7693;True;95;-7.83612340216746;74.6575045026776;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;6114;True;93;-5.96750918557193;62.7837231899718;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;8626;True;104;-9.26409258130502;61.7203410542502;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;5846;True;93;-4.3812748764111;78.1489527782117;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7739;True;93;-7.43000101639583;68.1834492547548;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;9636;True;96;-4.39415753566346;54.5710574340568;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7685;True;97;-8.62836037861145;70.4368715905235;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;9296;True;106;-9.75248237564553;60.3986171569633;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;6235;True;102;-7.60979531945291;81.2696389220496;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7240;True;114;-6.55866117700973;79.5091888926101;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;5929;True;101;-4.39031273515944;81.9836120928658;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;9246;True;105;-9.02399594942009;64.9588977190158;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;9050;True;111;-5.99056547188849;72.778253420153;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;7457;True;105;-7.52240539557378;87.6314213048506;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;6915;True;113;-6.82489728676685;84.4322818074396;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8364;True;110;-6.9344330322009;79.0045627757573;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;10617;True;109;-10.5366260554822;64.7738775733284;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8053;True;114;-8.08557738835279;82.7369793777906;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;9815;True;108;-7.86800258286589;77.3296958250269;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11056;True;113;-7.51022230223572;69.1550529043168;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11519;True;122;-7.3193167766274;74.7727416201415;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;9935;True;116;-7.46943009845692;83.5362490963433;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);12;7914;True;110;-8.97880443596432;101.110672515231;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;11285;True;117;-10.4632577015183;79.4405377623348;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);27;16212;True;114;-6.95180147431839;71.5239386180095;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;11414;True;122;-7.80610142301337;85.377130421863;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11704;True;126;-10.7826443369719;69.2604962484559;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;8367;True;117;-5.46221635900707;90.4760875057093;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);23;12537;True;127;-8.17335351826442;73.4451972326658;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;9221;True;122;-6.20062893380793;96.9289616171292;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;10184;True;118;-9.09998837319302;95.3642276633106;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);23;12749;True;125;-7.12092646778287;77.0220962613416;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;801;True;34;-4.60685987439833;37.7772077954776;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;871;True;30;-4.93278761588628;23.3011937131617;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;760;True;36;-4.20305488531021;35.8991643196705;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1205;True;38;-6.70903804847445;23.8054968461627;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;624;True;30;-5.04349665236933;31.9059905347001;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1259;True;36;-3.69075341344906;29.4843834940874;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1023;True;36;-4.90754082250112;36.0184758644232;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;868;True;36;-3.90355380360316;36.0721943749204;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;665;True;32;-3.62594611625565;36.4502800831719;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1064;True;34;-3.97088018964152;38.889302881796;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1167;True;40;-6.24967127439231;33.5509108225202;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1104;True;34;-6.79225972741855;44.2680586128386;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1014;True;42;-6.04705285294783;36.615109236248;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1034;True;38;-4.69399552647455;31.267129232504;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1114;True;40;-5.16897528592557;31.8430146761683;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1226;True;40;-7.32798337426156;33.6149669814714;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;989;True;40;-7.83015407198988;38.1587177365934;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1444;True;44;-7.01428393790557;42.3173582438805;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1225;True;37;-3.40034278101738;41.7052456062431;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1211;True;41;-6.43664958188216;30.7363163300561;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);38;6801;True;62;-15.8137865800032;38.8882064258638;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);303;32938;True;73;-19.6081742704568;44.8925457173791;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);61;9586;True;60;-16.1299550444761;40.6042648829608;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);58;9243;True;58;-15.3515449918337;33.133223914072;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);148;1300;True;101;-14.1442989496084;7206383.04655293;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);222;1176;True;109;-16.3609963133132;37849951.1116165;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8949;False;-1;-18.030427403258;483797.056246959;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8222;False;-1;-23.9652269014396;18.3901820457836;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;14896;False;-1;-21.7204984177111;8.10874303376766;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;7962;False;-1;-17.6656587859712;547632.886765143;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;6584;False;-1;-17.2588141133381;12.3199629897194;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;7254;False;-1;-18.683939739023;928843.496140782;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2581;False;-1;-14.5915536310696;4313967.73789813;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;4232;False;-1;-17.945581994127;45000901.7672;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2364;False;-1;-18.5636137730994;35418588.8594749;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2654;False;-1;-16.7727153231101;41297790.537228;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1091;False;-1;-16.2615382247477;14154815.6607535;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1552;False;-1;-17.4511090035464;55063707.5731575;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2025;False;-1;-14.5823335068229;9678208.73387433;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;299284;False;-1;161.633930843746;213.600541833026;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);80;47464;True;42;-5.53170623145671;130.601286071433;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;187780;False;-1;497.021369408547;525.025569511395;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;131495;False;-1;340.081932518544;415.41569852529;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;223668;False;-1;514.515934382726;538.572503985037;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;119834;False;-1;333.123751890586;388.528307229053;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;181138;False;-1;258.543157335392;361.698194262619;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;167348;False;-1;261.754131746863;301.596968477398;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;82661;False;-1;911.008334202234;971.497037855922;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;99039;False;-1;558.367168535294;637.244527939122;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;81233;False;-1;447.37666771718;601.397864630575;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;47859;False;-1;1077.5026860363;1166.25506023147;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;74498;False;-1;1034.76008509425;1177.1863524531;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;41443;False;-1;1255.95161583591;1330.21575565149;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;40797;False;-1;887.250269568497;983.785927401421;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;36386;False;-1;910.430800299458;1299.19094398732;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;47134;False;-1;2153.56877602441;2328.48056678178;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;24059;False;-1;2288.51659170029;2376.85749790558;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);67;88641;True;58;-1.73746286936345;69.4112409091064;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);49;109713;True;46;1.39195611065968;57.9404784906549;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);117;202843;True;62;-2.07243224555225;65.4841482228326;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);180;152382;True;40;-12.2066768889359;40.3614500703885;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);28;34892;True;47;-2.89125830098519;137.291666017152;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);152;392061;True;37;-9.93295786773695;34.8429416635505;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);244;374498;True;73;-13.8497516045747;68.2802693383005;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;9049;True;34;-6.25394581854403;24.2902070228712;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;36075;True;32;-11.0195952654825;36.9416311107075;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);180;289171;True;199;-11.5632211735896;1395.18491573327;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10155;True;123;-11.8941690342901;182.542536700716;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);79;230690;True;145;-12.7656154063945;87.8445819146137;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;22991;True;233;-7.4173842887831;144.613615060265;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);66;265801;True;103;-9.50716294328791;56.2496934394667;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;9711;True;108;-11.5129562779662;87.3579807935068;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;79785;True;88;-13.1062509270002;51.5948334605449;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);146;683141;True;108;-17.1617345454837;30.4174250794553;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);37;123307;True;130;-13.9365265925086;42.9882552633042;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);48;85482;True;200;-16.2405425771201;595.561974545282;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;9733;True;85;-9.37241359775682;77.6847822451003;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);120;357559;True;185;-11.3628184940649;54.6462950692636;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);29;145512;True;88;-13.6324572294524;45.9160352278136;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);78;303073;True;104;-19.5439680203354;56.9576712511177;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;37768;True;77;-9.64826813946742;89.5638458203501;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);209;897987;True;90;-16.8181967531297;37.4928974020269;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;23414;True;124;-9.49682751580938;64.5961262682357;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);170;247381;True;197;-11.1898979952747;1623.05300593937;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10436;True;119;-15.8057662290218;189.696378282484;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;36735;True;97;-11.0926887966438;117.158083284485;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;37902;True;218;-3.54906576210236;121.13162311264;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);63;238560;True;103;-17.9162317032847;36.6302310174333;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);52;68034;True;235;-7.21973040633071;756.640229484804;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;17071;True;119;-16.5448969226069;79.4158543513635;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;2177;True;45;-12.1344576996357;38281.5707004747;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;2216;True;79;-7.10955810541577;118145.039206145;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);272;9591;True;78;-10.7228134424091;145059.062608083;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);118;3771;True;101;-11.8601862594566;208716.073307697;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);147;11783;True;98;-8.52666841139003;183185.566022141;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);242;5085;True;86;-7.25512236095028;1222183.94101854;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);333;3758;True;84;-17.3693014907141;2607197.54548023;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);503;3901;True;119;-10.8938619123944;2751920.96512233;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;2197;True;43;-2.3632788970783;96031.0955415841;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;1370;True;41;-3.56994548865991;116123.556999092;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;1072;True;46;-9.20590614727876;175106.894782892;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;1250;True;43;-5.3314636668778;146443.551422902;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);61;10348;True;47;-1.58565486617772;55822.1834160027;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;889;True;43;-6.32504409119927;175104.092569546;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;1633;True;52;-7.86019101517912;170857.111091642;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);46;5236;True;51;-5.03319460763993;90873.6478023511;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;1304;True;51;-6.7801054597339;268412.465680435;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;1461;True;44;-5.11125205828345;175600.788069462;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;1221;True;53;-3.74213650051288;297389.185041488;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);44;2294;True;63;-4.59660563482282;345730.734816496;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);102;2164;True;72;-8.76799240868458;1054042.38801593;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);97;11072;True;75;-3.20848717143597;94076.9465381749;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;1893;True;60;-7.74067383613396;586727.823567727;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);123;2496;True;60;-6.92527802798746;1130724.47575322;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);85;2266;True;80;-3.67681060159992;838417.093242488;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);242;12343;True;106;-5.1999399416258;374557.730517205;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);162;6781;True;77;-12.253868667969;418365.706857534;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);110;2341;True;71;-9.72887835932552;1147376.30763607;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);249;4136;True;88;-11.5717323010159;1468646.97186777;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;19853;True;153;-11.8067290856601;184.390583916418;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;22678;True;169;-9.27063350463885;257.972973339533;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;20733;True;181;-4.05168148241855;273.604243505335;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;28290;True;177;-9.25055353836246;284.341925378505;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;32413;True;205;-8.64958340426239;313.831300985456;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);34;50294;True;211;-12.6523460635788;249.375633682552;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);29;37064;True;215;-9.70942149451376;344.462520222117;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;17275;True;107;-9.51550957216238;57.1952779944416;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;12141;True;111;-13.3276929730596;81.3616700112211;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10963;True;89;-10.5068684008267;53.1409041347403;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;13958;True;108;-8.12722584787932;79.0662032639111;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;15858;True;104;-10.2990756233811;65.2206653898198;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3960;True;48;-6.84224758963916;34.6304848652197;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3066;True;64;-3.2699978129127;38.7881522386489;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3656;True;47;-8.22239623455983;26.4616085491286;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;4039;True;62;-14.8789510494402;41.032606635155;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3867;True;53;-10.175370671654;32.4897449645105;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3925;True;47;-8.57443755169462;22.4734934668447;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;27635;False;-1;119.649264916419;175.392105220915;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);41;46240;True;54;-10.9291279255374;83.2098204618377;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;80509;False;-1;660.397460767724;983.939353494744;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);901;1462;False;-1;2592.02714581404;2822.68799446119;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;271;False;-1;4711.66558957257;4737.81843497349;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1777;False;-1;9300.61612514483;9830.33360382832;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2952;False;-1;1392.10536353388;1537.64484712617;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;148491;True;54;-14.7872239603492;19.4609076311863;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1119;True;44;-5.09818763478306;36.588457164298;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;2252;True;53;-14.2261336391492;31.8112968505542;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;7396;True;92;-9.27124333725906;63.7504818885367;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;11645;True;101;-12.4188689892852;42.4004622709297;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8407;True;105;-11.9486811143474;61.8088092383569;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7428;True;99;-7.94032195717369;68.6499287951878;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;9378;True;113;-9.22610973292755;57.7190444789994;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;6592;True;99;-8.2984749668301;69.2751249591753;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8409;True;98;-13.6974859433956;62.3581564604603;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8234;True;99;-10.2180215301883;77.607242259714;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8006;True;107;-9.57165900998054;77.955985865525;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8972;True;110;-10.0483278486477;75.6369789148722;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;6498;True;99;-11.5491484101292;72.7806903021177;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8599;True;105;-12.466678915678;77.4929521130789;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;8310;True;115;-8.1245584899017;83.7680504926928;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;6950;True;107;-6.14303424295032;83.7777724666232;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8099;True;111;-11.4807523746333;75.6832104470528;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;7933;True;118;-8.92448667960608;81.3150443834558;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;9986;True;115;-10.1222632582063;76.1540334265435;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;10281;True;123;-10.4568101945099;74.0888571073447;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;10632;True;114;-11.4161518826677;76.0746572289202;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);15;9916;True;126;-9.86460857099153;78.7701747808806;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;15390;True;132;-11.4114512492116;59.4745061182541;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;13480;True;127;-10.4659438079329;80.7996540203778;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;12676;True;110;-9.77093374629849;75.0368419097893;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;10668;True;124;-14.3262007212398;78.0107618139673;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;12003;True;124;-11.1574405964002;80.3472965554908;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;14143;True;116;-10.3250542724869;72.693383257196;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;11467;True;126;-12.3327363592648;73.3496644051856;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;12929;True;133;-14.1954184894625;66.71022818075;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;13412;True;128;-11.5835591865104;78.9315759725095;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;11970;True;127;-9.91183156685148;74.611852419372;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;11475;True;120;-14.0453353484982;80.1754509726774;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;12175;True;135;-13.7253802871313;89.1671434898636;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;721;True;33;-4.56291064788384;37.4579336427826;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;877;True;34;-4.09879157278221;31.6684725510137;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;864;True;36;-5.58434949097421;37.9775295579632;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;823;True;36;-4.53133483451879;28.2555451626268;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;684;True;30;-5.18362107539244;30.6743206007646;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;851;True;32;-8.22344734804879;35.2293257419609;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;989;True;40;-13.1733651227167;36.5052052545017;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1024;True;38;-5.97833465858752;35.4344037175863;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;883;True;32;-6.57209011504648;38.6190734511607;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1087;True;36;-6.41507946065109;38.7938461326027;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1081;True;36;-7.08136647436089;26.8008779847338;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1030;True;38;-7.61135798507832;42.8196796014716;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1333;True;42;-5.62949263163385;35.2501514495349;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;972;True;38;-6.49018455641379;34.495957988072;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1041;True;38;-5.50798496483926;30.2044451167601;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1068;True;39;-3.87134898647261;36.7707590031255;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1245;True;40;-6.05091788923338;38.5510030207661;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1945;True;46;-6.01696433496163;34.7159406148624;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1075;True;40;-6.8929821250028;41.5293078591105;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1529;True;44;-10.8788660010275;27.8744976160438;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;6459;True;64;0;38.918625506995;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);141;33214;True;73;0;43.8250849978906;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;10102;True;62;0;37.4343127309486;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);29;9972;True;60;0;33.5318320355055;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);80;1433;True;101;0;1354421.15500212;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);114;1032;True;109;0;322927059.979691;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);643;14325;True;101;0;4121597.81608267;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;23765;False;-1;0;13.6651813710061;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;36196;False;-1;0;5.80911367089466;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9016;False;-1;0;8280002.86158792;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;10962;False;-1;0;16.1576171591001;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;18008;False;-1;0;2108333.31177591;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9597;False;-1;0;12904173.7857435;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);679;6890;True;110;0;98894516.2453297;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;5089;False;-1;0;84508994.8165837;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6652;False;-1;0;60224412.9509739;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3793;False;-1;0;21433333.7746807;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4768;False;-1;0;75875367.180458;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9626;False;-1;0;5115004.39142811;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);165;153944;True;74;0;218.133404888459;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;36161;True;48;0;115.749469253902;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);377;182649;True;110;0;368.612240486315;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;347147;False;-1;136.275630116305;408.722751813019;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);75;40161;True;99;0;547.554019550112;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;296477;False;-1;70.6681291006572;265.607827955389;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;393941;False;-1;71.8343523226645;246.753393153966;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;334215;False;-1;91.5066494116109;327.743356935227;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;164921;False;-1;266.847339784659;903.505585205082;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;248467;False;-1;153.609701039661;487.882667118706;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;125097;False;-1;217.015842678411;789.320002431484;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;118794;False;-1;333.057890474776;921.832252488413;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;131760;False;-1;342.57111803232;1057.74989972343;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;78839;False;-1;278.740316786101;1058.0993211978;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;73824;False;-1;403.697576747166;1247.54316353792;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;69351;False;-1;454.061077413295;1477.60665491794;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;91764;False;-1;602.321759835838;1936.48979052811;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;57511;False;-1;830.449612872786;2159.71057717741;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);64;163002;True;56;0;72.2201242560458;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;25518;True;58;0;60.2696130802885;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);37;124113;True;64;0;68.3369931522096;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11365;True;39;0;43.4680495652238;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;10787;True;57;0;125.425062432356;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;226461;True;33;0;29.552110777892;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;212105;True;68;0;68.6704391190307;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;5780;True;30;0;22.8691124470608;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;131160;True;26;0;36.2580259791727;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);35;220107;True;188;0;73.2070588478878;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;15555;True;142;0;149.010818073845;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;35587;True;95;0;136.345415289492;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;6757;True;198;0;201.081072226176;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);41;297483;True;90;0;59.0332342173779;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;28067;True;131;0;73.4335121872558;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;49049;True;88;0;39.3425845305907;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);85;712321;True;200;0;40.880843889179;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);141;757210;True;149;0;52.3371247299558;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);164;568537;True;318;0;115.764312812753;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;45056;True;80;0;103.232419034215;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;124340;True;190;0;83.4997429987959;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;72081;True;95;0;46.3335509534122;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);48;361385;True;89;0;60.137229981786;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;41584;True;64;0;94.304692610853;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);74;656592;True;102;0;38.8315123442086;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;21176;True;133;0;89.0590483360656;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;32666;True;334;0;260.797521523476;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;10605;True;155;0;95.1918238453506;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;11655;True;100;0;97.4660658000663;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);34;182504;True;270;0;157.318731627731;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;121635;True;101;0;31.6382470861901;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);553;1838994;True;346;0;78.2640271365776;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;7128;True;116;0;76.1174627006516;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;2429;True;52;0;39919.3720256612;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;2175;True;71;0;153113.981934403;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;4809;True;99;0;116095.937546062;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;26871;False;-1;0;345770.238608754;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);51;1890;True;95;0;1259309.2395149;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);111;3756;True;111;0;1635899.03162279;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;10430;False;-1;0;1993208.53739601;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3151;False;-1;0;3299683.8176871;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;1347;True;39;0;118933.436999198;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;766;True;33;0;134044.804687121;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1653;True;51;0;190381.241583465;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;1323;True;48;0;184389.383478064;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;1353;True;48;0;129900.289008489;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;1163;True;43;0;101571.571845456;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1559;True;51;0;220097.021430275;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;1842;True;71;0;473037.708298654;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;1356;True;57;0;321581.962724229;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;1985;True;54;0;234906.239944671;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;1805;True;58;0;346514.419972345;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);31;2827;True;78;0;482349.208126399;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);66;3227;True;89;0;897995.034379311;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;2225;True;69;0;510307.352768624;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;1976;True;68;0;404844.600848217;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);36;2112;True;77;0;757534.609440442;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);64;2922;True;90;0;991047.190407542;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);128;4148;True;114;0;1522618.61123428;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);39;1660;True;79;0;1091569.10382119;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;1546;True;73;0;784575.48334903;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);156;4688;True;112;0;1620435.37797601;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;44019;True;201;0;249.354504852664;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;61229;True;201;0;255.300059682066;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;74384;True;237;0;278.364174218783;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;158874;True;263;0;297.538926605844;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);109;288836;True;257;0;317.217829534032;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);110;262823;True;289;0;361.871154635353;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);121;268059;True;283;0;354.636140902077;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);31;53940;True;142;0;122.137619043082;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;30613;True;114;0;125.813767464883;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;33821;True;105;0;104.522313303598;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;48127;True;132;0;113.519883125246;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);31;63316;True;135;0;136.997531923203;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3453;True;49;0;45.6085668531182;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;6526;True;53;0;51.5432692865873;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3161;True;40;0;31.8371835025414;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;8432;True;59;0;54.1105185779612;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3471;True;43;0;48.0877690176447;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3002;True;45;0;39.9050890252047;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;54017;False;-1;69.4351207881753;239.198818982501;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);44;57153;True;89;0;189.726410417215;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;115147;False;-1;539.689012747414;1436.59220513745;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3282;False;-1;1549.96078851389;2874.0792596897;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);901;797;False;-1;2944.95985948;4748.2879220209;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4214;False;-1;5002.42050850886;10066.7761914317;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6764;False;-1;805.180385269514;1557.9742719172;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;111355;True;45;0;39.6259538907652;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1187;True;42;0;40.6334447170325;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;2004;True;46;0;37.0893371946945;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;12994;True;96;0;90.183315060444;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;7136;True;95;0;71.6508254836262;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9794;True;102;0;82.6380448032294;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;11467;True;103;0;90.0098022896983;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;10140;True;101;0;85.4566174981619;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9982;True;102;0;82.5383229297014;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;7967;True;93;0;92.5502674421946;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;8403;True;101;0;81.639066289514;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;15752;True;114;0;97.4315274584149;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;13033;True;111;0;107.182886283032;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;12684;True;108;0;88.0782760244176;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;7679;True;109;0;87.8005837553825;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11047;True;111;0;93.905603571372;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11623;True;112;0;100.719793918497;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11267;True;110;0;87.3557982971764;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;10128;True;115;0;93.0972906641242;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;13140;True;110;0;86.0779673209898;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;9756;True;113;0;95.6873103288213;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;17810;True;115;0;102.405536888039;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;10453;True;120;0;106.339291993349;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;10361;True;112;0;98.7670338416059;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;14233;True;112;0;88.1495846334484;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;14815;True;121;0;92.3216866471026;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;16040;True;129;0;89.9449434906651;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;19490;True;127;0;98.5464267875447;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;11895;True;119;0;95.0006177327547;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;13497;True;122;0;94.5803449390719;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;17597;True;128;0;117.653247081395;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;15647;True;122;0;99.1817516415008;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;19064;True;122;0;108.961295609413;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;23167;True;132;0;93.0146948343934;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;22608;True;121;0;115.206513094687;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1137;True;34;0;42.6322821625174;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;627;True;32;0;29.1781147569019;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1173;True;36;0;40.2464312074734;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;749;True;36;0;32.741431613896;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;737;True;32;0;36.365281659166;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1302;True;32;0;30.9324586980839;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;956;True;38;0;41.3194688807627;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;729;True;32;0;36.6270644704891;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;844;True;36;0;38.6197221248273;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1157;True;38;0;37.863433723738;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1246;True;38;0;35.2217766207865;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1070;True;34;0;40.0640083781772;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1140;True;42;0;41.7890008811276;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;902;True;38;0;37.3749734706185;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1149;True;42;0;31.9640105770771;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1220;True;39;0;41.9661264198992;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1432;True;40;0;41.8744491909659;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;2221;True;50;0;41.4462881724387;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1106;True;33;0;47.9401992035643;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1388;True;42;0;41.1373850161653;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;7346;True;64;0;37.9317098941417;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);201;48321;True;73;0;46.6043933042064;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;10795;True;62;0;40.854671473155;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;10450;True;58;0;34.6452191253675;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);92;1641;True;101;0;3546891.10497715;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);124;1421;True;111;0;109070226.875417;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);744;19405;True;101;0;1091310.53108616;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;17266;False;-1;0;18.7772616511399;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;38254;False;-1;0;5.00235560334947;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;12930;False;-1;0;5608273.4057859;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;12212;False;-1;0;14.1976214141262;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;10729;False;-1;0;8086876.80634773;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;6720;False;-1;0;7182890.80444474;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7917;False;-1;0;80018654.8293636;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5762;False;-1;0;158295752.653426;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7702;False;-1;0;32660316.2582212;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3453;False;-1;0;36966440.5190254;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4961;False;-1;0;62216046.2328558;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5140;False;-1;0;23609997.880943;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);91;81569;True;57;0;222.92307017438;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);34;42854;True;52;0;110.11063834891;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);185;89118;True;128;0;304.017010779685;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;364590;False;-1;31.9310224774096;398.152835711714;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);32;17012;True;117;0;504.105858592827;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;280760;False;-1;8.79059248501861;300.693182478932;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;389599;False;-1;22.9120744570745;299.700106162307;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;296687;False;-1;49.8730019853473;325.846407811403;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;170837;False;-1;148.48118227579;869.425112000106;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;199905;False;-1;40.1021845852925;593.940896532702;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;140099;False;-1;107.835903744072;732.096961487784;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;126950;False;-1;204.95148476008;985.123017916645;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;137020;False;-1;208.042155683265;1126.24499137276;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;82046;False;-1;248.694228214027;1226.82492722428;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;83700;False;-1;150.186707521319;1081.60716292568;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;64403;False;-1;260.88639242729;1815.01251828361;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;96014;False;-1;354.091144557731;2004.9974086672;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;58385;False;-1;538.097255994932;2190.09120968718;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);61;168479;True;72;0;77.1663316353227;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;51083;True;54;0;61.5974575259993;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);89;321435;True;62;0;71.4959256555619;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;6488;True;44;0;42.0714614823156;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;44718;True;53;0;92.6318956362159;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);22;152000;True;45;0;35.4651321996675;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);169;502502;True;70;0;73.6931472907403;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4717;True;29;0;26.0241849298296;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;42798;True;36;0;38.5337842893444;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;55720;True;214;0;65.6475415866136;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;32346;True;136;0;98.1029835263586;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;37187;True;105;0;135.813932456718;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;13460;True;234;0;179.312275325114;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;137055;True;90;0;54.0910728476256;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;8359;True;102;0;93.5690593840026;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;145122;True;110;0;45.526751975089;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);56;533608;True;155;0;30.7872196845719;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);43;299085;True;166;0;38.856717544504;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);247;1009455;True;277;-2.47814850172644;72.4503081299836;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);67;170643;True;83;0;110.878412563039;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);129;620306;True;146;0;68.5639683334671;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;70339;True;95;0;50.3754809933532;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;228274;True;83;0;56.6014464888507;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;61920;True;73;0;86.4986033404566;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);65;601992;True;185;0;40.6091503569732;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;10934;True;122;0;103.710767220787;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;26331;True;233;0;122.000881248199;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;9300;True;129;0;127.079818503925;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;15549;True;93;0;159.766603534784;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;46283;True;292;0;163.718125750827;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);222;1245378;True;152;0;54.3131225828685;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);33;109618;True;206;0;169.666216895975;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;15141;True;113;0;85.3444978457296;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);22;3844;True;57;0;43145.9343275768;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;1782;True;70;0;167645.76318777;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);47;4242;True;98;0;128847.912244034;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;31259;False;-1;0;353783.622476989;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);116;3696;True;107;0;1643282.37396461;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);79;3528;True;96;0;1186991.18621558;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);82;2140;True;90;0;2055215.01945077;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5482;False;-1;0;4590554.81192095;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;1864;True;58;0;66806.260489541;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;2308;True;51;0;132178.329066038;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;1260;True;50;0;223459.726546773;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;1706;True;48;0;217602.534060801;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;1548;True;47;0;224587.631049513;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;2075;True;48;0;214664.241081166;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;1301;True;51;0;296050.23428407;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;1725;True;66;0;528098.387712263;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;1711;True;62;0;343045.684377703;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;2468;True;60;0;310725.251079259;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;1768;True;66;0;277513.880188886;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;2419;True;77;0;582085.39978833;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);163;5870;True;101;0;1439311.85765634;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;1995;True;80;0;542624.808824341;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;1913;True;60;0;488599.375565907;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);57;2948;True;91;0;993327.889009663;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);119;5413;True;101;0;1133087.79456799;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);68;2117;True;75;0;1812593.54319757;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);54;2621;True;81;0;987597.857981426;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);50;2125;True;72;0;1176047.6719143;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);83;3517;True;93;0;1223595.01657718;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;104293;True;203;0;220.28939434807;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);49;184104;True;223;0;279.056177789884;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);39;135785;True;197;0;273.576327219853;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);91;285254;True;231;0;278.774981651494;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);123;348367;True;255;0;288.349671439504;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);185;465706;True;271;0;326.609379821463;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);237;535947;True;283;0;345.134685353952;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);53;115432;True;133;0;103.456347202959;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);82;152812;True;112;0;145.350009549534;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);48;101057;True;104;0;113.046487348792;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);42;92809;True;138;0;106.847020680567;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;48180;True;119;0;121.160171471537;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;18351;True;47;0;44.6799963316293;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;19580;True;54;0;51.734670450178;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;15671;True;44;0;35.4884080470099;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;28757;True;57;0;47.461343242138;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;16642;True;49;0;49.3719425224878;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4660;True;39;0;43.1919708532797;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;50786;False;-1;46.6262112384517;250.9827327035;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);77;103448;True;92;0;196.46055297543;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;131929;False;-1;202.655258177682;1451.91575489384;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3572;False;-1;746.351803130519;2901.05872055836;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);901;845;False;-1;2038.56823508948;4769.9279668337;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4625;False;-1;3828.25453384869;10159.1857966152;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7579;False;-1;289.145595418108;1572.07577088006;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);258;1075108;True;44;0;48.0912965505195;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1404;True;43;0;44.3070913784373;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2580;True;51;0;49.8297915042911;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;9189;True;94;0;74.1969013204452;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;12268;True;93;0;81.2577762816679;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;10389;True;108;0;77.6116920086941;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;12684;True;100;0;79.306275452241;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;20820;True;104;0;69.1006599991968;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;16529;True;107;0;72.1841989432671;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;15870;True;108;0;92.0937656323681;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;15079;True;108;0;87.7626838773296;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;9718;True;106;0;90.2226984498349;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;17791;True;106;0;94.7739390066052;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;21624;True;112;0;88.6865059201143;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;13079;True;111;0;87.5118697817447;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;12540;True;112;0;91.0297161070969;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;16474;True;115;0;86.4448506286352;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;17038;True;106;0;75.0470219200123;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;15719;True;117;0;101.158010868813;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;21175;True;115;0;79.4383861788395;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;15983;True;122;0;86.9383227481974;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;16572;True;121;0;91.082503815792;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;18523;True;121;0;78.6140208203515;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;17819;True;120;0;94.014791187872;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;19205;True;110;0;104.233137041814;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;19564;True;117;0;99.4002337191744;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;28732;True;117;0;107.67988663621;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);23;27109;True;119;0;93.7068951209056;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;21176;True;134;0;96.7626549441553;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;20252;True;122;0;96.1241359075154;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;17833;True;123;0;100.794063053943;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;21900;True;131;0;108.283080417063;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;32715;True;132;0;120.027344609482;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;23096;True;121;0;106.223793641866;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;18889;True;130;0;90.7444872895916;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;966;True;36;0;41.4251206389914;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;519;True;28;0;29.68693952693;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;737;True;32;0;39.8362611502847;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;765;True;36;0;29.6598155742194;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;580;True;28;0;33.9022428404065;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1097;True;32;0;36.7270612018633;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1688;True;38;0;38.0549049680754;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;866;True;34;0;37.3508119431161;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1151;True;39;0;36.6037023654865;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1103;True;36;0;40.7715479342758;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1129;True;38;0;35.3126472421162;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;802;True;34;0;38.1778492278536;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1457;True;42;0;43.3852031672416;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1071;True;40;0;35.1007097089767;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1117;True;36;0;38.7817699907731;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1311;True;42;0;40.2225245404243;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2239;True;40;0;44.4701354025555;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1801;True;46;0;46.1839284990551;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;963;True;34;0;44.0636848089728;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1577;True;44;0;38.2521026955903;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;7481;True;64;-8.67669628465124;39.6406257669366;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);111;28973;True;75;-7.30856802818745;41.1872696625369;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;10381;True;62;-6.97988613850875;37.2256160204235;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;10146;True;58;-4.75848231508231;33.4959972942091;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);90;1594;True;103;-6.53145235347847;13165343.9558157;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);116;1258;True;109;0;200838198.763723;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);638;16488;True;102;-8.31511970253602;15.3057466653119;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;22680;False;-1;-10.9305586038968;14.5499910787088;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;33751;False;-1;-6.46428576154239;8.25266053198138;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;17916;False;-1;-3.94016270941927;1242974.9617566;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;11879;False;-1;-9.09917762981237;13.7544823996362;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7356;False;-1;0;6859007.99676475;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5387;False;-1;0;55438029.3689475;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7988;False;-1;0;76826728.0376302;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5037;False;-1;-9.10315498323526;69807418.6537448;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;6074;False;-1;0;56254446.3132354;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3721;False;-1;-266750682.158695;63494592.0049299;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4394;False;-1;0;97970445.9367452;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5752;False;-1;-1.17915367392781;26488831.1031214;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);492;418705;True;71;-93.1487007161285;216.030808740532;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;9438;True;54;-2.05666630090704;154.915619772338;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);331;156535;True;149;-87.5206773005756;287.889889915304;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;370964;False;-1;-122.051804012308;396.183594656328;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;16393;True;118;-56.0475767763752;553.302827573805;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;307392;False;-1;-87.5202063582769;266.307626177801;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);802;368461;True;142;-93.2676381522012;239.980155667173;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;304355;False;-1;-105.464167334421;354.536767268823;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;169052;False;-1;-460.663198682599;903.82468963646;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;194281;False;-1;-171.351005221898;625.857497288386;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;137538;False;-1;-219.87537985419;752.806170123123;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;136156;False;-1;-285.872842314158;904.801029913228;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;137814;False;-1;-352.895221128458;1160.09081100138;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;84736;False;-1;-453.305107945439;1200.91854091336;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;80124;False;-1;-233.153785989817;1349.91837662775;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;70077;False;-1;-717.562059774037;1935.56187646213;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;95602;False;-1;-484.503118495645;2022.11371848167;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;60713;False;-1;-518.433787687342;2283.91682688;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);249;737486;True;58;-50.3306229779047;85.7376801840343;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;143195;True;50;-22.6268317966463;66.9629542797835;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);68;264165;True;62;-44.3506195707456;77.1899740820698;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;6935;True;32;0;25.4776173814659;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;55176;True;77;-17.8397723485036;84.7066389878529;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;50602;True;29;-7.70438560415908;40.5591911815658;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);281;1167763;True;69;-90.02473083042;63.9053302591341;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;13025;True;28;-1.83220096125619;35.6429786661209;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;41104;True;29;-3.44110446019787;34.6147403955474;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;145688;True;304;-35.5633767915998;88.4624729748036;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;19470;True;117;-15.8280032109924;115.114600903665;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;21677;True;131;-32.5991968940955;124.73549382445;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;71364;True;221;-333.574686274428;163.480681075746;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;119514;True;86;-16.2220453866607;55.1406351614037;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;16610;True;109;-11.4414587695772;84.0401025618052;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;55150;True;94;-11.8866017230136;51.8572912583019;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);131;1033151;True;159;-48.8243950609094;50.1755207137798;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);25;180046;True;103;-24.1933165974961;34.6534533788041;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);430;1434822;True;287;-61.4606710077082;83.0144985242538;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);62;136402;True;83;-63.2762995279699;113.920690441951;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;124891;True;183;-21.2328965017331;57.5209839510459;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;183238;True;106;-72.5388961236249;49.6087689270395;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;160578;True;87;-24.5067004019309;56.3860626634559;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);139;374297;True;80;-33.5920606575584;106.353827122232;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);99;794301;True;176;-33.7193386681062;41.132278361793;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;20321;True;110;-48.8462852597602;108.773125443584;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;119396;True;198;-38.5876952742715;100.29264309183;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;22258;True;136;-10.5272516029634;136.912681853945;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;81588;True;97;-48.9802190195349;128.060709583539;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;41083;True;322;-15.7490723219636;233.489333748042;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);139;819436;True;112;-115.901534732243;50.6995816979287;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);329;978286;True;237;-54.135471331914;85.2931507974679;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;85462;True;133;-77.085613568412;103.162512738259;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;4976;True;68;0;41108.2565138;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;1993;True;76;0;153000.106011997;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);41;3795;True;109;-3768.20818645139;140703.842808475;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);89;7055;True;148;0;238526.765511563;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);134;4022;True;111;-1361416.15435224;1817748.5866983;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);132;3586;True;92;0;2266062.27516337;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;11209;False;-1;-61824.1450963775;3498849.42804093;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4604;False;-1;-168779.873376504;6179535.13805383;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;2310;True;43;0;81483.3186899206;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;2387;True;48;-1921.57155089761;105906.596780217;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;2010;True;56;-4786.75164345959;262241.598642031;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;1741;True;47;0;218954.499633666;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;1552;True;45;0;170822.948877862;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;2459;True;55;-10072.9495555647;185769.770687814;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;1974;True;51;-23.9917166262748;271482.728074424;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);33;3685;True;79;0;378228.735562642;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;2115;True;65;-3973.58454815694;483087.956429888;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;2256;True;63;-7.34221067738116;317767.550308116;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;2707;True;71;-33.6594427946964;493214.878497725;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);38;3204;True;77;-37545.8203858148;544263.67778444;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);44;3938;True;91;-273.3444254182;516371.364408024;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);46;4132;True;94;0;494964.546993928;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;3402;True;73;-24524.6515430193;385394.801781018;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);32;2509;True;84;0;614056.236631403;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);159;8934;True;128;-113934.127375174;924674.218770183;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);133;4267;True;105;-394516.487120287;1733192.50108767;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);60;3725;True;93;0;798679.206254318;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);39;2371;True;75;0;821949.005761454;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);273;7600;True;122;-36055.616669469;2094799.07636256;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);92;368223;True;195;-76.4153263564713;227.766649985572;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);172;601325;True;197;-81.2708031745735;272.050649966623;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);338;1006061;True;193;-144.398042827358;262.436986838649;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);432;1101456;True;229;-153.073344880021;307.057529547116;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);458;1058438;True;233;-156.335797566217;322.141955520556;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1730609;False;-1;-156.302090293105;373.209834580056;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1448839;False;-1;-208.466807373256;414.736424310148;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);579;1025384;True;120;-67.0696220104601;70.9662470924086;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);256;522427;True;107;-50.2540400800329;85.3374055493138;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);482;1211350;True;91;-34.542504528528;53.8319167827315;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);288;578186;True;111;-76.7749827206188;97.4134807376364;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);107;229807;True;107;-57.9608549267369;120.633361112008;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;97700;True;48;-9.96368454757876;45.3433295480908;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;98659;True;55;-9.19623867115938;56.3696350374781;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;54477;True;43;-13.6080604112359;40.5464040064088;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);26;196927;True;54;-20.9806036133797;52.5070064240084;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;30500;True;47;-7.54225137821102;48.9141446572594;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;37725;True;41;-1.26883034719024;41.8404831420448;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;54035;False;-1;-65.8944196116691;320.025994963676;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);161;310852;True;88;-35.5959342924942;75.5500389625002;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;124920;False;-1;-471.121969792167;1611.66178116526;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3548;False;-1;317.200040020243;2864.08863129158;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;779;False;-1;630.905870354486;4803.03185224074;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4535;False;-1;-822.355382149492;10020.0422527296;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7673;False;-1;-135.868633746441;1570.02796725543;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3596849;False;-1;-23.6020366574372;48.9018650064357;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1229;True;44;-4.79779218772593;43.0604446964642;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2139;True;48;0;42.9879547923618;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;18784;True;95;-18.9761798466199;81.5218193459463;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;23417;True;104;-18.8222329767601;73.8335184709794;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;17200;True;109;-11.2364933647074;74.1373547363453;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;16616;True;102;-15.1725381786661;69.8277446705668;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;32336;True;107;-11.7493188425709;84.9538918772564;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;17611;True;106;-2.30652682106184;83.6494244857032;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;19569;True;97;-8.26440265881394;82.6147241481943;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);15;25020;True;110;-35.8650678043801;86.7226719655368;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);25;39145;True;107;-8.51826684577152;63.6146858943128;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);20;32877;True;113;-30.4740545314318;81.9701829460687;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;20499;True;106;-7.54705400941128;78.4600521238576;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;32187;True;112;-15.0084849428561;80.4900520616028;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;27635;True;109;-4.89058118652622;96.9475044068169;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;19645;True;118;-8.86636146916514;86.799941801036;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);27;41046;True;116;-15.6858938295489;78.79930174505;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;36900;True;116;-38.7819285792873;85.0447532875445;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);53;70758;True;112;-23.0116171575566;78.3938687838155;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);25;33950;True;110;-14.0639026714175;93.2340856998808;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);37;49915;True;114;-19.6783931118334;72.7309977603871;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;34505;True;120;-5.67181941685658;88.4426629041738;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;23830;True;120;-13.5424952908968;87.1880091258406;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);30;32140;True;115;-45.1039770660972;87.399375411182;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);38;46746;True;123;-22.1737373708241;100.8087009343;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);80;90176;True;113;-34.4965862307971;77.9598286469401;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);95;107119;True;125;-11.7484836476886;71.9353445300047;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);45;49811;True;121;-18.9380376685617;90.5258474014558;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);44;50673;True;121;-25.7993705047475;97.477000017378;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;23072;True;123;-6.82446922756202;94.3277551969061;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);40;44074;True;125;-25.5647094177839;94.8475209496538;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);45;48107;True;133;-10.3481455340005;88.1152616809421;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);52;55387;True;131;-73.232971082505;104.043441645817;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);49;51959;True;132;-31.0247594085502;112.043019742585;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;906;True;32;0;41.4835409173654;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;900;True;32;0;28.6877819680652;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;705;True;34;0;36.4937178052958;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1057;True;32;0;30.412264281362;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;621;True;28;-0.1107089934107;33.3752326016083;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;882;True;32;0;35.137115611081;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1554;True;40;0;40.0918967576256;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1281;True;37;0;37.7691471039567;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1076;True;38;0;39.2744082414887;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;867;True;36;0;36.8732371125004;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2641;True;42;0;22.2814333949954;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;747;True;32;0;40.9470161468714;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1026;True;40;0;35.9632722975228;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1344;True;36;0;37.0101872257608;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1208;True;36;0;32.9460735993102;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1005;True;36;0;40.5347083235065;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1760;True;48;0;41.643098716749;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1893;True;49;-3.93209712489232;46.3170561111975;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1731;True;38;-5.79615723647846;43.0389848348177;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2087;True;39;-5.31342218106509;50.9725197086374;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);17;6770;True;62;0;39.4209710518768;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);157;41267;True;71;0;47.0311543020381;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;9087;True;62;0;39.5801277500774;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;9970;True;58;0;33.5768934597488;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);67;1234;True;101;0;1876381.06288756;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);118;1401;True;111;0;56352827.3655336;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);635;17495;True;102;0;987308.379306793;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;17515;False;-1;0;15.138222299608;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;46175;False;-1;0;3.0925132266628;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;16678;False;-1;0;9269320.81408537;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;13152;False;-1;0;14.05508246409;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;18862;False;-1;0;2299215.61283681;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4350;False;-1;0;15020087.2113542;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6786;False;-1;0;173650513.142184;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5420;False;-1;0;83492178.1090687;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7467;False;-1;0;45441933.2448433;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3637;False;-1;0;31444499.573683;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4769;False;-1;0;90275674.2599627;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6674;False;-1;0;21870266.2910803;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;651381;False;-1;167.238264412451;203.902761210179;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);81;97965;True;34;0;130.254388306959;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;381117;False;-1;494.000075742602;525.381275253416;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;343920;False;-1;340.100043143705;382.37520996886;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;440962;False;-1;509.200339148939;538.733896134453;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;256415;False;-1;376.211614754615;478.378033123176;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;384510;False;-1;212.800291822851;266.927883453671;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;305632;False;-1;349.601658094675;376.102781131038;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;161186;False;-1;712.502220401076;819.123249070447;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;208777;False;-1;457.9067418566;550.042101510281;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;128165;False;-1;477.693819007182;588.872615426994;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;92828;False;-1;1022.40187712489;1134.57925969435;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;152487;False;-1;995.878453646357;1179.34903533057;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;86694;False;-1;1005.14853332986;1214.90865281945;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;87730;False;-1;615.607604545358;814.847672431783;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;71809;False;-1;1091.05701958055;1287.8857015325;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;95970;False;-1;1895.25755014036;2102.45056406969;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;54005;False;-1;1620.72909723326;1963.57155886599;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;22584;True;50;0;69.8348463180612;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);22;94183;True;40;0;57.5779372641643;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);223;706482;True;50;0;65.0377672827345;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);104;155631;True;30;0;50.3936497366054;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;45591;True;54;0;94.1789057510126;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);53;300679;True;31;0;33.0586809603148;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);581;2621737;True;54;0;61.019089764014;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2939;True;27;0;22.7700521446196;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;26799;True;24;0;39.9175555468702;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);37;119289;True;243;0;1338.91675370269;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;21418;True;137;0;153.266331358741;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;13246;True;106;0;124.761262299286;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;100899;True;259;0;131.972254553955;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;250582;True;76;0;58.5034252184875;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2688;True;95;0;93.8103802671904;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;96726;True;93;0;57.5456175602447;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);47;468444;True;93;0;39.2442733169037;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);13;111246;True;103;0;33.2691024443111;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;94896;True;235;0;505.745437166197;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;28541;True;77;0;88.3386437294286;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);124;651086;True;194;0;58.0584886709791;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);17;113445;True;93;0;57.9168486729137;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);33;275304;True;76;0;58.3889594153474;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;28569;True;72;0;89.4917681946722;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);80;754715;True;109;0;39.5096679462957;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;7265;True;102;0;70.3035021393567;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);55;176649;True;243;0;1485.53897993639;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;12767;True;115;0;175.271630187538;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;11909;True;97;0;135.848847845336;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;92031;True;239;0;131.057419870114;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);22;161689;True;118;0;43.1387808526625;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;48755;True;251;0;851.311034058726;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;15955;True;103;0;83.7328691961415;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);30;5064;True;40;0;40089.8860829753;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);42;4511;True;76;0;123349.018527027;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);41;3437;True;87;0;151997.174533756;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);314;18384;True;66;0;296677.869691706;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);33;1372;True;74;0;1217053.40369522;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);53;3112;True;78;0;925721.031998829;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);52;1482;True;74;0;2038179.74266461;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);389;4316;True;166;0;3447506.79805775;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;893;True;38;0;90353.4887010081;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1474;True;55;0;135578.874649343;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;1029;True;47;0;185160.65058477;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1110;True;39;0;200180.56039707;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;1194;True;38;0;164138.77763629;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;836;True;45;0;139252.24420353;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;2370;True;72;0;157054.022071896;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;1872;True;53;0;182053.58943751;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;1801;True;59;0;269915.559210714;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;1210;True;51;0;202918.58692498;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;1957;True;66;0;368169.038820333;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);20;1780;True;56;0;536944.883687329;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);48;2218;True;70;0;1118490.01422539;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;1500;True;56;0;373964.788441242;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);15;2198;True;61;0;274684.673716564;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);27;1908;True;60;0;668810.55943052;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);38;2370;True;73;0;782790.297203099;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);74;2404;True;93;0;1505005.31489559;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);41;2037;True;96;0;928170.251606148;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);54;2135;True;59;0;1369418.08269518;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);129;4150;True;82;0;1795393.3146567;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;15333;True;151;0;254.676159496122;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;19357;True;159;0;273.264508678335;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;22302;True;167;0;281.809683930565;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;28317;True;191;0;302.496903173642;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;29330;True;197;0;316.230658124414;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;35620;True;225;0;329.764034368994;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;44646;True;231;0;364.788813993749;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;7125;True;102;0;122.731008545994;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5900;True;85;0;100.662585741148;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;3075;True;67;0;86.6053171958102;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5204;True;93;0;115.108649756708;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5184;True;84;0;101.651739301575;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;946;True;41;0;33.2344740504191;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1249;True;51;0;45.3895476979605;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1048;True;38;0;31.506625619443;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1421;True;55;0;41.0224197479305;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;976;True;40;0;37.4950003416011;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;814;True;38;0;28.6008422924067;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);266;26106;True;65;0;127.049896936167;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);13;14750;True;54;0;250.395843806722;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);435;101895;True;82;0;973.120293287817;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3706;False;-1;2462.91293698871;2709.95251147087;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;865;False;-1;4497.47993943094;4760.78526805059;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4555;False;-1;8422.05929491066;9501.31356542598;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7512;False;-1;1244.45934945837;1459.12468283043;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;7687;True;41;0;25.4792961408663;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;950;True;42;0;38.4516022910159;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1721;True;45;0;45.1978282531619;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4995;True;89;0;83.5072465104314;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4668;True;86;0;78.3160592656795;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4883;True;90;0;84.4530636045694;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4935;True;91;0;80.0523973765075;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4711;True;89;0;83.064714700938;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5600;True;92;0;88.6581170594686;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4999;True;91;0;86.9087679855943;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5695;True;100;0;94.0371590433083;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5782;True;97;0;93.2773513643538;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5279;True;100;0;90.8727773179511;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5800;True;96;0;92.9063901158374;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5638;True;99;0;90.305524515099;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6000;True;106;0;99.4189734093198;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6010;True;103;0;93.7062672600477;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6134;True;102;0;94.1128812099342;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6576;True;111;0;101.538391357206;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7023;True;104;0;92.0750143864111;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;7267;True;109;0;95.3978532913525;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6191;True;100;0;96.6963335849628;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7137;True;107;0;102.343764130779;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;6807;True;109;0;102.275200734015;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;6721;True;103;0;92.7542399072419;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7185;True;107;0;101.173083793446;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7318;True;109;0;103.948541128125;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;8402;True;114;0;103.399945258544;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7313;True;112;0;102.634204821936;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7987;True;112;0;108.486912110418;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7150;True;114;0;102.352457457956;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8186;True;114;0;98.8249515629891;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8394;True;117;0;107.822543686931;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8597;True;119;0;107.692386887905;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;8054;True;115;0;105.867072907995;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;869;True;36;0;38.2592586640948;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;534;True;30;0;28.6661924968188;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;705;True;34;0;35.107062806221;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;791;True;38;0;28.9857031681983;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;557;True;28;0;33.457521267283;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;808;True;34;0;32.1686842592628;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;881;True;38;0;37.1245020169184;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;787;True;36;0;36.1595351193511;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;798;True;36;0;35.6060741386047;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;903;True;36;0;36.728540588317;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1182;True;38;0;25.5622232528234;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;899;True;36;0;40.5853551938838;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1010;True;42;0;39.247163514798;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1009;True;38;0;35.5601695531158;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1085;True;42;0;34.9920786572196;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1208;True;38;0;32.7715074632211;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1566;True;44;0;38.4439232484068;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1189;True;43;0;40.0078807502342;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1579;True;42;0;40.8551041959112;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1170;True;40;0;31.0509359653916;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;7238;True;62;0;39.8360227659935;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);157;39943;True;73;0;46.0304765661206;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);27;9587;True;60;0;40.4554555690752;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;9090;True;58;0;32.2429573103511;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);73;1365;True;101;0;1560374.04885474;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);259;3726;True;109;0;40101902.4977553;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);656;18083;True;101;0;1969542.5825702;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;24372;False;-1;0;13.1037133613162;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;43740;False;-1;0;3.37337544920105;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;9976;False;-1;0;2384372.70855271;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;13607;False;-1;0;13.4293411033962;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;19608;False;-1;0;1061119.25840678;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;11365;False;-1;0;4668049.03695373;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;6805;False;-1;0;162636682.244274;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5236;False;-1;0;76338555.9940238;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;7671;False;-1;0;34127611.8138709;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3846;False;-1;0;23384278.6315216;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4593;False;-1;0;62161805.5770295;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5857;False;-1;0;13743689.4431907;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);663;550273;True;69;0;204.478767002373;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;61843;True;38;0;128.841478392204;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;384995;False;-1;468.000070028007;524.237485248226;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;271691;False;-1;331.200803214312;421.126152689003;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;458475;False;-1;482.400457157195;539.364836839271;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;237358;False;-1;286.20041868221;331.822499286727;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);534;209436;True;98;0;314.608348447868;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);64;25941;True;95;0;357.131701347226;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;179400;False;-1;671.415851031437;813.404701471717;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;248263;False;-1;415.805564824308;506.269009495952;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;142944;False;-1;415.806818806197;505.210881184572;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;110129;False;-1;961.305124823798;1134.43075886417;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;151441;False;-1;933.075475889386;1176.86366563354;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;87422;False;-1;1033.21764645801;1285.24639803087;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;85689;False;-1;513.126159279666;906.139267819081;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;66337;False;-1;1107.02450258845;1479.99064933155;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;93263;False;-1;1726.42882579632;1980.57794695534;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;60128;False;-1;1674.47541165188;2120.72473199098;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);40;106680;True;64;0;69.1896942795065;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;25875;True;40;0;57.6282031503173;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;32469;True;50;0;66.1127442327579;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);86;169518;True;32;0;42.6278623615901;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;32950;True;50;0;137.482158478809;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);78;431156;True;34;0;33.7930415867169;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);445;1649075;True;55;0;59.3503015664388;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2216;True;26;0;33.2211604132061;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;124687;True;26;0;37.907691216821;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);26;80440;True;289;0;1351.90710002724;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;10924;True;113;0;174.395138806511;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;95284;True;142;0;102.017850794214;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;69592;True;225;0;121.368065655257;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;338969;True;81;0;59.7529630187345;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2462;True;105;0;100.804090203181;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;113291;True;88;0;50.2461654974395;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);71;620088;True;96;0;30.9771059553891;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);89;535161;True;133;0;48.8820019646154;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);26;58533;True;238;0;619.616800234634;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;16538;True;75;0;83.3266326343432;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);161;762965;True;191;0;58.2399024888471;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;124207;True;88;0;45.0494091072644;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);37;274290;True;90;0;59.1070059495796;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;12231;True;75;0;85.2364588840104;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);69;581537;True;93;0;42.7514963092571;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;12725;True;107;0;56.2836675562962;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;58516;True;224;0;1777.80493431027;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;16423;True;125;0;156.237281890354;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;13351;True;99;0;176.10366135994;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);33;153888;True;235;0;156.279496221224;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;92398;True;118;0;32.860273940109;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);29;69661;True;272;0;602.392804138765;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;23526;True;110;0;89.9008651800716;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);35;5068;True;44;0;39912.5159774749;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;1779;True;62;0;137134.092442205;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);68;5747;True;126;0;145535.923269302;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);107;6157;True;81;0;261561.698855717;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);41;1694;True;82;0;1002349.71828136;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);91;2411;True;75;0;1718870.80513204;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);115;1954;True;96;0;2639210.77046627;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);296;3796;True;130;0;3000041.55688721;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;1614;True;40;0;60604.2013009845;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1249;True;42;0;106611.016764892;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;1077;True;43;0;159958.439652562;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;1704;True;44;0;199602.877703353;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;1036;True;38;0;119546.876668523;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;1209;True;45;0;138783.627987909;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;2185;True;64;0;144759.580545009;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;1066;True;53;0;280804.818622396;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);15;2235;True;62;0;213059.811502947;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;1466;True;48;0;161648.546147049;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;1111;True;49;0;336410.390719434;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);36;2834;True;73;0;476020.63919562;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);29;2603;True;80;0;417733.820806623;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;1116;True;58;0;514350.153934367;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;2778;True;61;0;171855.817134023;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);27;2144;True;71;0;467921.522306991;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);37;2755;True;77;0;566119.460170273;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);99;2752;True;86;0;1726046.55364404;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);37;1966;True;83;0;759210.587391174;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);39;1583;True;66;0;1023996.78236777;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);187;5191;True;99;0;1724282.88396756;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;17950;True;163;0;248.728451173283;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;22540;True;185;0;265.86514453714;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;25862;True;211;0;279.673902621608;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;36269;True;205;0;308.464301290103;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;39397;True;245;0;307.271880255052;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);16;41060;True;257;0;333.29774726857;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);20;49660;True;263;0;344.617366427609;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6845;True;98;0;125.838508084103;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;8917;True;105;0;102.217988566869;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;5343;True;78;0;101.526515394193;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6305;True;97;0;109.404316532283;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6439;True;96;0;99.2417490941165;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1938;True;44;0;37.1277901226307;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2068;True;52;0;47.4550881851383;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;827;True;33;0;31.5332215820522;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1892;True;59;0;48.8395314176451;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1175;True;43;0;36.4979316833781;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1486;True;45;0;32.279076659596;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);446;31732;True;72;0;139.352660888616;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);20;18018;True;48;0;190.252724570178;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;151356;False;-1;994.081291629598;1181.85173673513;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1620;False;-1;2403.77836905177;2800.60249047826;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;641;False;-1;4246.04204723381;4780.15158823101;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3838;False;-1;8177.73229647192;9609.12239082185;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;6172;False;-1;1247.52793480872;1511.50311757486;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;11262;True;43;0;27.6011791093868;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1120;True;43;0;42.2490187130488;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2100;True;47;0;48.8954702924609;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6158;True;89;0;85.0830188606304;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;5748;True;88;0;84.8147590664922;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;4906;True;88;0;84.2181325351335;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;5283;True;92;0;83.21814958405;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6406;True;97;0;89.9805354818561;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6119;True;92;0;93.9302092482896;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;5834;True;98;0;82.9752646479272;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6718;True;98;0;92.8490033444547;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6466;True;103;0;91.2851386543677;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6006;True;96;0;91.0367441295707;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6252;True;96;0;87.5761107617575;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;7993;True;105;0;96.7352477117838;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;8108;True;109;0;102.347550182784;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;7026;True;105;0;95.5162918231613;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6898;True;100;0;88.1873921429389;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;6892;True;111;0;93.749011302314;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;7631;True;104;0;95.1878141537373;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8006;True;105;0;96.467153080139;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;6679;True;104;0;93.1252512395731;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8829;True;110;0;112.851156229535;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8715;True;117;0;109.30157752119;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8097;True;111;0;100.392696824373;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9840;True;116;0;101.385343805497;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8075;True;114;0;110.660586861908;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9550;True;115;0;107.239572138335;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8566;True;109;0;94.7010459609187;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9479;True;121;0;98.9311966469213;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9182;True;116;0;110.5334164568;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;10507;True;117;0;96.8908323038538;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;10270;True;117;0;103.037343809358;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;11259;True;122;0;115.382800655395;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;10322;True;115;0;120.799586662302;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;705;True;32;0;36.5613145481114;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;574;True;30;0;28.981174280276;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;744;True;40;0;33.8433837093525;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;733;True;34;0;27.8583899144149;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;565;True;28;0;33.6220575672143;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;989;True;34;0;34.0349422357884;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;890;True;36;0;35.2364188356572;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;799;True;34;0;37.5723742487521;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;948;True;34;0;38.9627925888084;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;783;True;34;0;38.9550477081039;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1018;True;42;0;35.7360193776244;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1003;True;32;0;46.9489959928803;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1024;True;42;0;38.5083830337416;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1172;True;36;0;35.5527432982028;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1111;True;40;0;35.9298410133722;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1347;True;40;0;34.380427174461;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1988;True;40;0;44.4082138455646;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1714;True;50;0;34.8974526615953;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1187;True;46;0;41.1508984854309;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1012;True;42;0;35.3656896580906;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);19;7419;True;64;0;39.4434904709546;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);227;54590;True;73;0;49.2780293918671;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;9722;True;60;0;40.0161834720414;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);26;9096;True;58;0;34.7737517752388;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);77;1396;True;103;0;8102897.39708489;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);73;555;True;109;0;315992166.945664;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);693;19043;True;101;0;568070.382423213;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;16929;False;-1;0;864562.233834765;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;37126;False;-1;0;4.9637553377073;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;11661;False;-1;0;19489083.1218433;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;14256;False;-1;0;13.0325011033017;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;19170;False;-1;0;322729.03437476;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;11130;False;-1;0;2863178.02608819;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;8144;False;-1;0;76813472.0835822;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5478;False;-1;0;83741441.3853459;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5576;False;-1;0;62840898.2007061;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3791;False;-1;0;36833633.850894;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4729;False;-1;0;77663276.7568148;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;6108;False;-1;0;14640904.7761553;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;701124;False;-1;149.836914211622;201.570312073319;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);41;48442;True;51;0;148.467435437283;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;385371;False;-1;440.465805428273;526.705520000307;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;279887;False;-1;306.000079762191;411.949512145215;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;462866;False;-1;265.200269448012;438.438396240547;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;240833;False;-1;314.513985072735;462.212078319789;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);388;127806;True;112;0;503.05637088416;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;349559;False;-1;236.302887972725;307.078007813505;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;162468;False;-1;642.664069930121;833.529200110154;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;236595;False;-1;242.133305023393;469.624046865948;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;130419;False;-1;403.050730764005;709.417021940036;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;96688;False;-1;910.125331296877;1142.27471009309;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;148486;False;-1;893.16778046152;1181.60081716721;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;87514;False;-1;623.909088715263;1051.43138703575;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;81112;False;-1;713.230360161388;1032.07139658581;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;69297;False;-1;1154.53671894038;1507.44506507256;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;95441;False;-1;1664.02251230554;2051.12232483594;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;62438;False;-1;1315.88918688804;1803.95138772375;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);93;236424;True;66;0;71.0615433978488;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);34;142525;True;54;0;58.3678941167855;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);174;567602;True;60;0;66.1958635898444;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);79;164105;True;31;0;38.5480917048408;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;39467;True;47;0;116.042037972888;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);44;241378;True;33;0;33.7178571098422;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);397;1640726;True;57;0;51.7015901413497;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2335;True;29;0;21.5464644959134;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;24490;True;34;0;38.1402551473456;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;40034;True;259;0;569.20334537518;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;16772;True;154;0;163.203417915792;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;10672;True;103;0;132.524611486773;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;32727;True;295;0;123.0299452012;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);42;333095;True;103;0;59.7164890428034;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;3690;True;95;0;110.977602454959;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;61273;True;98;0;45.1921378897985;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);32;215542;True;201;0;74.8656676928798;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);44;294381;True;129;0;46.752948191717;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;47380;True;274;0;593.677185202819;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;16046;True;72;0;98.5020718369114;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;79494;True;183;0;39.8700560833895;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;59555;True;88;0;49.3990487304744;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);48;377776;True;101;0;60.5706767676283;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;13480;True;72;0;103.301272980513;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);58;557122;True;107;0;38.2638126554665;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;7938;True;112;0;71.821249516308;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;11054;True;222;0;708.226673194151;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;11711;True;128;0;163.632649213201;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;11152;True;94;0;156.408563770595;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);65;323706;True;231;0;153.987660952361;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);14;114933;True;96;0;33.2144591797718;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);42;89452;True;251;0;356.917126533178;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;9724;True;103;0;78.2857123462431;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;5234;True;46;0;39762.709623016;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);47;3722;True;75;0;162810.651459978;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;2556;True;72;0;110056.581477424;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);389;18672;True;75;0;304699.671871858;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);110;3254;True;107;0;1675365.35810049;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);80;2326;True;83;0;1846096.90124051;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);75;2156;True;97;0;1870688.71222541;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4660;False;-1;0;5201454.44536976;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;1101;True;43;0;81850.4579052852;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;1090;True;39;0;131789.886304741;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;1096;True;47;0;206392.010430201;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;1237;True;44;0;219929.354362525;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;878;True;37;0;175895.955421608;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;1299;True;43;0;118634.613648778;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;1084;True;50;0;220609.142393449;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1008;True;51;0;325327.780710364;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;1859;True;69;0;260373.651113716;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;1707;True;52;0;139890.518966018;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;1907;True;61;0;183119.379849624;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;2283;True;66;0;423477.305863847;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);34;1866;True;67;0;868765.372377609;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;1692;True;70;0;518780.754060167;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);17;1851;True;61;0;381798.498692835;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);43;2082;True;68;0;1053782.91947824;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);60;3403;True;88;0;860900.841413916;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);67;4201;True;108;0;780525.192697987;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);44;1918;True;84;0;1124903.73604177;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);47;2460;True;82;0;937310.196718581;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);92;2764;True;83;0;1689780.22168696;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;24436;True;185;0;248.194944216906;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;28794;True;195;0;267.746494675719;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;37071;True;227;0;274.038945321074;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;45560;True;211;0;281.486887275734;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);15;45592;True;225;0;309.472573744526;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);22;61259;True;255;0;332.686876457998;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;60221;True;275;0;352.160325245809;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;10743;True;125;0;118.79539161989;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;9935;True;104;0;106.271960559981;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;9902;True;92;0;96.9071347451954;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;10839;True;108;0;131.587533445051;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7989;True;106;0;107.751392252957;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2334;True;51;0;40.6060365331958;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;4533;True;56;0;53.1750916779624;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1415;True;37;0;34.6878144716057;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2714;True;54;0;48.2024535388104;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;990;True;40;0;36.7391114652857;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1047;True;39;0;31.3155340272346;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;50723;False;-1;64.6339030778193;135.261543481754;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;16978;True;49;0;226.80654929507;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;192117;False;-1;934.47754317847;1183.82807927403;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3532;False;-1;2206.66790847302;2726.73435300251;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);901;851;False;-1;4053.6983769278;4796.22713471618;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4479;False;-1;7672.35072368777;9536.7133999985;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7583;False;-1;1099.82843539353;1449.15812234114;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;13839;True;46;0;20.5075863156728;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1042;True;45;0;36.894166809932;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1710;True;47;0;45.3344671459586;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;5874;True;91;0;82.6924601203638;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6600;True;97;0;82.8946284346932;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6546;True;96;0;90.9780243859144;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;5939;True;93;0;81.3166215827785;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7897;True;93;0;86.0954267349018;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7449;True;98;0;95.1681926799204;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;8385;True;93;0;88.3375054432509;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;6572;True;100;0;87.9496853032346;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;6718;True;101;0;86.343067480754;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7335;True;101;0;98.6714603748791;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6506;True;97;0;97.8411696470382;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8124;True;105;0;86.6728034970827;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8479;True;111;0;96.4356886942029;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8224;True;109;0;93.0678054512528;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8146;True;103;0;96.3152164936101;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9034;True;110;0;101.579417047345;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;8700;True;107;0;93.4944843895792;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9617;True;109;0;101.577466746689;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;8822;True;108;0;109.344859738549;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9065;True;111;0;100.294577670207;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10506;True;119;0;104.543962669159;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10520;True;109;0;102.138926890465;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10178;True;113;0;106.414809362307;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10616;True;122;0;109.784777880213;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;11736;True;117;0;98.7550875445753;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;9983;True;118;0;101.406844259017;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10766;True;110;0;104.847482413773;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10223;True;116;0;109.230348884025;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;12507;True;119;0;115.630328646835;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;13598;True;127;0;113.393788881118;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;12136;True;125;0;106.059021261154;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10192;True;116;0;116.22448358916;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;862;True;34;0;41.9777407755697;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;693;True;30;0;27.7029808573958;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;797;True;36;0;31.945171344354;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;744;True;34;0;33.1041962455678;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;564;True;28;0;32.5492293633113;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1258;True;32;0;33.5716606199545;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;973;True;42;0;38.4930475048868;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1038;True;34;0;41.0173430838094;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;910;True;35;0;37.0294045722014;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;942;True;38;0;38.7539486307859;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1050;True;36;0;28.4925472885824;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;907;True;32;0;43.6289145970232;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1051;True;40;0;40.5274268265454;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1012;True;34;0;37.3598747026692;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1108;True;40;0;26.8119224135728;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1327;True;40;0;36.9092858494758;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1581;True;46;0;41.6146466489363;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1902;True;50;0;42.0365862603392;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1201;True;37;0;47.045242538503;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1257;True;41;0;44.1255736392588;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);46;91902;TRUE;56;0;300.0510327
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3549395;FALSE;-1;0;0.473388741
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;5122;TRUE;35;0;167.7475707
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;2960;TRUE;5;0;228.6991646
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);142;376211;TRUE;30;0;119.4652893
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);130;345780;TRUE;17;0;249.3110578
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);599;3547853;TRUE;11;0;63.40667291
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;1411;TRUE;13;0;720.7197754
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3109665;FALSE;-1;0;0.448685819
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);67;57826;TRUE;38;0;109.4306703
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);31;4790;TRUE;5;0;171.0995031
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);96;262829;TRUE;7;0;0.267146203
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);392;2479962;TRUE;11;0;63.89871569
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;144094;TRUE;22;0;7.608735964
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);24;560533;TRUE;24;0;8.138937091
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;314897;TRUE;21;0;7.126134256
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);136;2736463;TRUE;25;0;6.488849728
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);25;488266;TRUE;20;0;7.633914296
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);131;2402735;TRUE;23;0;8.126088112
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);25;471006;TRUE;22;0;7.89357442
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);293;5008453;FALSE;-1;0;8.466007866
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);68;100615;TRUE;177;0;1475.944181
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);35;121695;TRUE;50;0;143.160564
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;3422;TRUE;50;0;232.1300269
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;531;TRUE;38;0;369.9006474
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;623;TRUE;42;0;394.2913168
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1272;TRUE;47;0;415.3122064
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;935;TRUE;46;0;469.110264
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;14379;TRUE;142;0;2062.472638
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;10241;TRUE;138;0;1993.934232
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;18385;TRUE;136;0;2065.520979
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);55;78318;TRUE;176;0;1535.6669
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);24;22358;TRUE;178;0;2560.27479
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);475;568922;TRUE;216;0;1580.799039
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);34;26596;TRUE;174;0;2939.952002
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);18;106876;TRUE;50;0;196.6695276
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1716266;FALSE;-1;0;94.00131933
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1957560;FALSE;-1;0;174.5042698
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);206;537065;TRUE;100;0;174.2068249
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);710;1581756;TRUE;125;0;184.1650873
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1440265;FALSE;-1;0;145.2106589
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1434;TRUE;18;0;3.718773164
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4572823;FALSE;-1;0;5.516428343
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);19;42326;TRUE;27;0;61.63284624
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;21021;TRUE;33;0;49.29296163
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);39;93126;TRUE;37;0;64.54080541
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;21943;TRUE;25;0;56.94368494
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;24416;TRUE;33;0;50.87752861
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);27;101966;TRUE;39;0;67.03342553
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;37208;TRUE;25;0;58.92990175
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;11375;TRUE;33;0;47.87855059
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;82753;TRUE;37;0;65.28029014
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;21013;TRUE;27;0;58.68484864
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);31;41182;TRUE;21;0;333.7612947
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;547;TRUE;22;0;843.8653814
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);19;7296;TRUE;44;0;243.0670551
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);53;11067;TRUE;86;0;650.2172784
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);29;5146;TRUE;94;0;891.3780747
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);189;14497;TRUE;54;0;1223.134924
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;278090;FALSE;-1;3.147445369;110.0732774
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);484;35571;TRUE;77;0;998.0956943
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;41178;FALSE;-1;165.2967222;1362.401375
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);391;988;TRUE;62;0;6397795.644
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);484;1015;TRUE;62;0;6113850.907
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;169291;TRUE;19;0;4.834140087
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);36;333742;TRUE;33;0;14.49532113
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);324;2950301;TRUE;24;0;8.658581246
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;298616;FALSE;-1;6.081172984;524306.0697
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1105452;FALSE;-1;24611.84449;32801.89242
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);49;468596;TRUE;24;0;7.571609346
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;390295;FALSE;-1;8.193063683;524298.6411
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);25;210534;TRUE;21;0;6.488777106
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;122044;TRUE;21;0;6.06957294
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;71230;TRUE;36;0;45.99249714
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);54;563740;TRUE;27;0;8.636868754
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);18;133040;TRUE;18;0;51.83663071
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);64;78102;TRUE;45;0;79.92350342
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;8944;TRUE;49;0;101.2988199
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;5749;TRUE;68;0;299.9918006
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;4192;TRUE;25;0;17.19895304
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;101467;FALSE;-1;60.33349264;201.7053007
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;149474;FALSE;-1;108.7315998;214.1443222
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;1627;TRUE;36;0;237069.4339
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;12632;TRUE;66;0;3674.462997
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);41;2584;TRUE;42;0;644254.4642
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);41;350;TRUE;26;0;5008.997097
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;10;TRUE;1;0;3.157576849
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2082;TRUE;33;0;81.44486574
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1004;TRUE;21;0;53.02203385
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6663;TRUE;39;0;84.15808874
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);39;72692;TRUE;49;0;80.57593036
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;607371;FALSE;-1;22.0872336;97.82061545
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;232288;FALSE;-1;39.63606194;397.8056854
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;181298;FALSE;-1;59.0589717;545.1670126
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;113585;FALSE;-1;101.9267237;719.3454295
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;96464;FALSE;-1;83.47394098;775.1170184
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;65054;FALSE;-1;104.8491062;1057.827422
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;59;TRUE;6;0;7.155763879
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;57826;FALSE;-1;115.0359242;1145.638395
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;179;TRUE;10;0;23.66282934
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;529;TRUE;13;0;12.43660264
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;318;TRUE;16;0;32.72989245
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;340;TRUE;15;0;29.97834466
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;671;TRUE;17;0;26.39279354
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1759;TRUE;24;0;48.82303375
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;6536;TRUE;36;0;61.95210473
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);48;96839;TRUE;52;0;305.5208302
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3435937;FALSE;-1;0;9.849678747
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;3780;TRUE;39;0;187.8616217
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;1727;TRUE;4;0;378.8050545
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);123;297066;TRUE;45;0;116.3535087
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);126;330337;TRUE;17;0;240.0960053
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1688;TRUE;6;0;67.35433886
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;13969;TRUE;10;0;90.25247226
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);230;455021;TRUE;28;0;44.96605978
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;14883;TRUE;43;0;187.963768
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);46;8016;TRUE;6;0;111.6811175
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);130;87098;TRUE;10;0;2.490043461
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;109640;TRUE;6;0;65.32450732
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);83;1520077;TRUE;21;0;11.58927768
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);19;416737;TRUE;19;0;8.748619208
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);22;508634;TRUE;20;0;6.68372017
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);71;1665858;TRUE;24;0;6.888636733
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);24;511338;TRUE;20;0;7.889605298
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);248;4043125;TRUE;21;0;9.844885964
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;243078;TRUE;21;0;5.927921003
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);162;3097461;TRUE;28;0;8.056249297
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;25005;TRUE;169;0;2799.85849
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3033;TRUE;50;0;229.9058721
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;22430;TRUE;50;0;100.4165018
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;589;TRUE;39;0;370.4043295
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;517;TRUE;41;0;346.0949067
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1389;TRUE;46;0;445.8253728
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;720;TRUE;49;0;444.2724241
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;8838;TRUE;141;0;2000.859221
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;8591;TRUE;138;0;1991.721934
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;10434;TRUE;136;0;2085.693513
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);20;23182;TRUE;178;0;2188.919338
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;14382;TRUE;178;0;2265.520257
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);43;32275;TRUE;200;0;3112.841785
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);20;18699;TRUE;189;0;2460.719662
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;8858;TRUE;50;0;147.1195469
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;2175164;FALSE;-1;0;4.867699196
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1820502;FALSE;-1;0;84.71825898
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);506;1336628;TRUE;100;0;143.366412
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);125;433317;TRUE;125;0;138.8142342
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1529248;FALSE;-1;0;121.5370119
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);652;3479859;TRUE;22;0;5.679118718
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;531;TRUE;21;0;11.0240357
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;31707;TRUE;27;0;56.128425
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;36563;TRUE;32;0;55.80295228
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);59;147271;TRUE;38;0;68.69082737
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;7211;TRUE;29;0;66.05673607
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;7043;TRUE;33;0;47.25499823
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);26;138234;TRUE;41;0;69.97866184
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;49470;TRUE;25;0;62.57108407
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;27781;TRUE;34;0;56.23765076
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);24;124500;TRUE;37;0;69.91077808
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;46168;TRUE;25;0;61.20888175
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);19;43393;TRUE;38;0;331.487606
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);22;55967;TRUE;41;0;85.62307327
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;3007;TRUE;44;0;236.6923436
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;2279;TRUE;49;0;335.5900664
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;4499;TRUE;110;0;982.9328007
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);37;4864;TRUE;52;0;1206.448336
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);479;337859;TRUE;59;0;61.37953707
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);99;10921;TRUE;58;0;954.2424245
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);688;82189;TRUE;131;0;811.8306579
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);272;660;TRUE;45;0;9313175.183
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);316;1011;TRUE;64;0;6155882.001
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;176657;TRUE;18;0;4.813593332
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);25;354828;TRUE;33;0;14.49513323
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);102;1705386;TRUE;23;0;7.816592104
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);745;563167;TRUE;210;0;524300.349
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1664277;FALSE;-1;26225.69272;32804.69521
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;394224;TRUE;24;0;7.448541309
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;742301;FALSE;-1;7.552672346;524222.1436
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;212414;TRUE;21;0;6.484815609
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;111405;TRUE;22;0;5.964821901
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;104849;TRUE;37;0;46.35550906
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);34;567312;TRUE;28;0;8.607573204
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;74523;TRUE;20;0;53.85064535
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;16882;TRUE;57;0;127.4697533
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;12822;TRUE;50;0;112.3804206
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1388588;FALSE;-1;8.000217438;182.9708003
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;9442;TRUE;35;0;26.60760944
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);305;68214;TRUE;74;0;150.0667148
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);795;225794;TRUE;111;0;117.008713
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);296;41837;TRUE;38;0;45750.81226
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7125;TRUE;70;0;6406.983491
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;2584;TRUE;42;0;647851.6558
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);85;3513;TRUE;52;0;592.6359135
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;10;TRUE;1;0;3.15798272
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;10943;TRUE;37;0;85.97487877
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1235;TRUE;23;0;54.68942751
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;12088;TRUE;37;0;62.63005691
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;9348;TRUE;41;0;88.12582
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);124;189703;TRUE;65;0;97.64377269
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);276;173360;TRUE;72;0;220.4276714
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;361529;FALSE;-1;48.38647139;426.0974446
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;200309;FALSE;-1;102.2341968;719.7867453
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;160936;FALSE;-1;76.95131793;730.9814543
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;108271;FALSE;-1;85.27115961;979.9145853
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;50;TRUE;6;0;6.963840098
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;96042;FALSE;-1;123.6072027;1058.582897
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;195;TRUE;10;0;23.7337666
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;291;TRUE;13;0;17.72310842
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;302;TRUE;18;0;27.368468
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;368;TRUE;17;0;35.89501715
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;667;TRUE;17;0;25.7287045
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1459;TRUE;20;0;45.77067181
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1966;TRUE;31;0;70.93336512
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);35;79209;TRUE;47;0;315.4482992
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);339;1421730;TRUE;24;0;10.39102636
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;9347;TRUE;35;0;124.7802509
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;5671;TRUE;5;0;127.5036059
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);170;441462;TRUE;32;0;107.779816
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);280;745484;TRUE;19;0;198.0022048
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;16302;TRUE;8;0;67.1952439
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;2614;TRUE;16;0;385.5324706
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;2250079;FALSE;-1;0;11.52015527
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);112;116611;TRUE;37;0;100.0138063
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;2709;TRUE;5;0;286.4288426
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);249;660920;TRUE;10;0;0.160982329
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;8737;TRUE;8;0;87.60368371
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;346610;TRUE;30;0;9.682954164
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);21;493770;TRUE;19;0;8.854021915
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;163342;TRUE;25;0;5.114815697
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);292;5006916;FALSE;-1;0;10.18347957
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);31;548389;TRUE;18;0;6.648289841
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);159;3147004;TRUE;26;0;8.337326456
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;352771;TRUE;23;0;5.582290066
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);284;5007078;FALSE;-1;0;8.652742905
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;15634;TRUE;176;0;2874.365485
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;22071;TRUE;50;0;77.67645197
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;64999;TRUE;50;0;81.14265029
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;521;TRUE;41;0;303.5539989
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1304;TRUE;45;0;390.5954221
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;855;TRUE;46;0;415.3338884
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;901;TRUE;51;0;398.4283371
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;8549;TRUE;142;0;1818.465759
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;10054;TRUE;145;0;2029.209373
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;11483;TRUE;142;0;2279.956293
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;16066;TRUE;174;0;2529.61597
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;15600;TRUE;174;0;2583.641122
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);63;63371;TRUE;211;0;2261.665537
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;18787;TRUE;177;0;2699.045779
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;11397;TRUE;50;0;144.0444517
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1897829;FALSE;-1;0;56.24316278
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1994015;FALSE;-1;0;75.75623923
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1853910;FALSE;-1;0;78.72917877
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1682271;FALSE;-1;0;80.12761473
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1515761;FALSE;-1;0;80.69672277
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);634;3455623;TRUE;21;0;5.664860869
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);211;1568595;TRUE;22;0;5.624364067
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;4172;TRUE;25;0;62.45391316
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;3959;TRUE;34;0;51.29802702
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);23;118473;TRUE;39;0;70.06616245
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;27440;TRUE;27;0;55.94473779
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;6253;TRUE;34;0;48.84087465
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);24;125642;TRUE;40;0;66.15435762
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;45195;TRUE;28;0;58.39946562
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2727;TRUE;33;0;47.88826213
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;3691;TRUE;37;0;58.67644032
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;10857;TRUE;26;0;54.38459267
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;523;TRUE;20;0;241.3792211
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;8534;TRUE;27;0;374.9722141
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;3669;TRUE;28;0;241.6870984
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;2380;TRUE;72;0;335.7145746
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;603354;FALSE;-1;11.20166744;130.3985069
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);30;4556;TRUE;65;0;614.2700766
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);523;371062;TRUE;83;0;65.29166685
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);32;4592;TRUE;56;0;722.8630313
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);226;33828;TRUE;97;0;622.8645513
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);176;868;TRUE;50;0;5206381.688
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);192;838;TRUE;46;0;4862988.751
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;155786;TRUE;19;0;4.779793594
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);24;319749;TRUE;33;0;14.35015791
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);146;2285985;TRUE;24;0;8.20307839
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;664528;FALSE;-1;5.79526512;524449.3463
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1724796;FALSE;-1;22948.91807;32802.71127
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);26;366673;TRUE;24;0;7.572004961
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;800857;FALSE;-1;6.202504164;524301.963
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;210385;TRUE;22;0;6.516621758
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;96985;TRUE;21;0;5.974605337
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;126969;TRUE;37;0;46.8597699
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);30;546608;TRUE;28;0;8.488701463
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;607;TRUE;27;0;60.25494809
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;7100;TRUE;46;0;87.44980603
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;10518;TRUE;63;0;198.7670752
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11452;TRUE;61;0;119.2133608
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;14302;TRUE;32;0;34.20073768
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;225847;FALSE;-1;36.38514401;163.4683484
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;249739;FALSE;-1;88.43221691;292.1063045
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);268;41471;TRUE;38;0;45684.86431
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;6564;TRUE;82;0;4394.115801
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);24;2584;TRUE;42;0;644795.8122
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);29;465;TRUE;34;0;2967.248737
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;10;TRUE;1;0;3.28244122
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2841;TRUE;31;0;88.18114759
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1306;TRUE;21;0;48.16721052
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;6765;TRUE;38;0;76.91197216
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;13183;TRUE;49;0;63.08866611
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);41;67747;TRUE;51;0;102.3496539
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);613;593417;TRUE;71;0;147.7175365
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;387389;FALSE;-1;41.50150274;412.1978823
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;234239;FALSE;-1;79.31066776;717.6240509
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;189217;FALSE;-1;80.50416546;721.842472
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;128216;FALSE;-1;82.49649388;901.3768639
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;59;TRUE;6;0;7.361448087
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;111668;FALSE;-1;91.22988379;1109.678206
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;180;TRUE;7;0;23.1432724
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;176;TRUE;11;0;16.8282082
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;307;TRUE;18;0;27.16967209
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;305;TRUE;16;0;35.55838922
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;638;TRUE;18;0;22.29496322
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1956;TRUE;23;0;52.1004587
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;4285;TRUE;37;0;68.10058746
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);57;97423;TRUE;51;0;307.5785758
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);114;434470;TRUE;27;0;16.48593243
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);62;103689;TRUE;44;0;153.9496067
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;2616;TRUE;5;0;241.6185007
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);49;119069;TRUE;27;0;104.7956328
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);237;590464;TRUE;22;0;214.73347
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;359;TRUE;7;0;78.48530538
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;7123;TRUE;15;0;186.9654609
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2510894;FALSE;-1;0;9.691851519
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;703226;FALSE;-1;0;186.1866373
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);113;17070;TRUE;5;0;64.39012056
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;3135;TRUE;12;0;103.1687707
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;251;TRUE;5;0;115.6948812
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;241166;TRUE;36;0;8.708468247
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);32;640274;TRUE;19;0;9.730520921
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);53;994158;TRUE;21;0;8.32435131
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);80;1563834;TRUE;26;0;8.476210858
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);38;695740;TRUE;19;0;7.946401728
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);281;4587915;TRUE;21;0;9.783744085
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);26;516015;TRUE;22;0;6.275487183
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);305;5017271;FALSE;-1;0;8.600009036
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;16592;TRUE;183;0;2798.501941
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;7320;TRUE;50;0;150.2678527
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;4280;TRUE;50;0;211.8824689
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;752;TRUE;42;0;258.6465518
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;711;TRUE;45;0;298.7281914
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;908;TRUE;47;0;390.5234331
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;834;TRUE;50;0;369.367965
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;8976;TRUE;146;0;1889.66575
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;9142;TRUE;141;0;1946.732857
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;9489;TRUE;138;0;2021.90829
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;16162;TRUE;181;0;2494.151147
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;13265;TRUE;180;0;2609.367668
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;22981;TRUE;206;0;3816.500938
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;19314;TRUE;177;0;2910.243532
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;30794;TRUE;50;0;145.568758
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;1906560;FALSE;-1;0;162.5358842
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);516;1440509;TRUE;100;0;169.3276307
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2039623;FALSE;-1;0;183.142835
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;1958597;FALSE;-1;0;158.0183383
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;1575003;FALSE;-1;0;194.5434756
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);550;3140921;TRUE;19;0;5.580451076
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4290241;FALSE;-1;0;5.634911133
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;2637;TRUE;28;0;50.1447877
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;2801;TRUE;32;0;59.45169163
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;18535;TRUE;38;0;58.117222
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;10985;TRUE;27;0;50.30330906
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1414;TRUE;34;0;45.88513703
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;8439;TRUE;39;0;54.71655889
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;43484;TRUE;27;0;59.78203988
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;3032;TRUE;33;0;52.83729034
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);40;93817;TRUE;37;0;62.74123005
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;17834;TRUE;26;0;55.57391259
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;2779;TRUE;32;0;329.7060933
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;4260;TRUE;41;0;351.8921767
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;2698;TRUE;37;0;250.2258354
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;2464;TRUE;68;0;267.9860873
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;3330;TRUE;98;0;727.2253264
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;1732;TRUE;52;0;515.479431
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;262102;FALSE;-1;12.00066103;250.5202515
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);19;2337;TRUE;68;0;919.9878537
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;66044;FALSE;-1;103.7934669;979.6454507
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);277;1014;TRUE;58;0;5963409.557
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);311;982;TRUE;68;0;6407025.833
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;117032;TRUE;17;0;4.768599207
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;343605;TRUE;34;0;14.33498982
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);100;1636493;TRUE;23;0;7.820414701
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);641;452507;TRUE;146;0;524368.7548
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;1493878;FALSE;-1;19670.64728;32791.82181
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;176995;TRUE;23;0;7.54370199
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;649829;FALSE;-1;4.925235143;524267.067
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;218327;TRUE;23;0;6.473749801
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;97942;TRUE;21;0;6.032146611
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;145098;TRUE;36;0;46.62834484
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);39;568188;TRUE;28;0;8.571957102
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;471;TRUE;19;0;65.26029949
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;5852;TRUE;47;0;79.74989515
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;11877;TRUE;61;0;121.642237
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;17056;TRUE;95;0;146.3962925
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;42176;TRUE;28;0;22.73774628
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;168741;FALSE;-1;43.26453966;212.2331135
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;192353;FALSE;-1;79.31467918;365.3731707
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;2082;TRUE;40;0;190951.5945
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;13402;TRUE;54;0;3807.815122
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;60585;FALSE;-1;81.78865156;78108.46975
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);40;802;TRUE;54;0;2270.601348
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;10;TRUE;1;0;3.462607321
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;17612;TRUE;38;0;58.25024364
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;3063;TRUE;25;0;42.97755076
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;50119;TRUE;38;0;52.7479217
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;61124;TRUE;51;0;64.92236532
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);193;320631;TRUE;67;0;63.80998459
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;395061;FALSE;-1;24.12262857;308.8038863
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;303907;FALSE;-1;31.38148044;336.7623265
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;183498;FALSE;-1;65.28339146;707.6736798
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;151280;FALSE;-1;60.66603716;740.7630301
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;104912;FALSE;-1;80.26430263;882.7245624
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;50;TRUE;6;0;6.941915754
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;90580;FALSE;-1;78.42539101;1077.16867
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;308;TRUE;13;0;21.21200211
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;852;TRUE;13;0;13.05007158
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;759;TRUE;18;0;29.13581417
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;631;TRUE;17;0;29.99832081
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;627;TRUE;20;0;28.29936867
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;972;TRUE;18;0;47.05000106
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1551;TRUE;33;0;58.06043667
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);28;69972;TRUE;42;-0.999886114;330.3352869
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3896740;FALSE;-1;-0.999999763;0.383510804
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;28057;TRUE;33;-0.999989304;11.88257848
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;3506;TRUE;5;-0.592017367;188.7904437
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);130;349417;TRUE;48;-0.988979944;125.2296934
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);154;412188;TRUE;17;-0.999766147;239.6352886
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4827777;FALSE;-1;-0.99999814;65.85011461
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;4718;TRUE;10;-0.463513314;225.8994624
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;2433730;FALSE;-1;-0.999995558;0.282689097
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);72;62101;TRUE;39;-0.999814746;54.63164465
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);25;2228;TRUE;5;-0.392299152;340.8077743
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);226;506750;TRUE;6;-0.999991004;0.154310724
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4235234;FALSE;-1;-0.999992915;65.18563502
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;245659;TRUE;22;-0.999990705;10.34192266
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;375016;TRUE;19;-0.999976155;7.973637793
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;378303;TRUE;20;-0.999994473;6.962965475
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);139;2603318;TRUE;24;-0.999998881;6.563149404
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;359549;TRUE;20;-0.999998949;6.940316279
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);40;853527;TRUE;24;-0.999997527;6.093552633
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);12;238834;TRUE;23;-0.999995898;5.734910351
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);378;5005114;FALSE;-1;-0.999999282;11.0425336
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;13278;TRUE;167;0.226865667;1659.823889
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;7266;TRUE;50;-0.998830725;185.5099485
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;3741;TRUE;49;-0.996211304;292.5645619
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;496;TRUE;39;-0.576096848;320.7421478
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1115;TRUE;41;-0.906877908;312.1391017
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1305;TRUE;42;0.096542256;368.3308427
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;644;TRUE;45;0.106958148;440.4671155
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;5837;TRUE;133;0.45460745;1639.690777
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;5877;TRUE;134;0.528888928;1619.595545
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;5537;TRUE;129;0.274939565;1742.735775
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;10514;TRUE;165;-0.28090615;1775.399428
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;25042;TRUE;165;0.688966282;1238.58132
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);51;48071;TRUE;200;-0.484964417;1669.138643
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);12;8913;TRUE;164;-0.768261606;2396.590466
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2595;TRUE;49;-0.998224681;545.4931553
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);218;381193;TRUE;95;-0.999984287;178.6924262
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);31;61491;TRUE;94;-0.999959692;289.6530992
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;88762;TRUE;97;-0.999862075;240.9903784
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);28;16485;TRUE;113;-0.99997011;2204.756046
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);372;553169;TRUE;137;-0.999994224;195.0028654
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);112;698828;TRUE;21;-0.999976853;5.688317216
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4883062;FALSE;-1;-0.999999495;5.198340347
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);21;43627;TRUE;27;-0.999912154;61.95161559
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;19486;TRUE;33;-0.998214848;49.11543661
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);21;98352;TRUE;37;-0.999736258;65.27190434
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;42444;TRUE;27;-0.999659887;61.32666143
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;18433;TRUE;33;-0.999451361;48.92663067
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;94061;TRUE;37;-0.999843742;65.01680562
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;43064;TRUE;27;-0.999805693;61.82047895
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;18170;TRUE;33;-0.998097812;48.74579777
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;88974;TRUE;37;-0.99941152;64.60617976
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;45843;TRUE;27;-0.999041687;60.99228037
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);37;58790;TRUE;27;0.733716307;342.3501897
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);27;15274;TRUE;29;0.786380698;1906.434691
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;4253;TRUE;45;-0.77028901;241.2864193
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);45;17851;TRUE;60;0.351263181;325.3953286
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;8485;TRUE;86;-0.613014339;964.6564356
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);212;22380;TRUE;58;0.382633784;997.9278221
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);234;68396;TRUE;51;0.840273997;138.4818631
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);177;18122;TRUE;44;0.688471293;953.2202277
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);516;59680;TRUE;83;-0.547258374;470.5303968
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);327;1003;TRUE;62;-0.984101673;6355432.436
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);368;1009;TRUE;62;-0.806665637;6297835.131
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);12;146032;TRUE;18;-0.898488255;4.740361827
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);32;360821;TRUE;33;0.964510125;14.61685396
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);123;1596461;TRUE;23;-0.906655591;7.681959861
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;6850;TRUE;23;-0.546021805;517383.3588
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);59;108347;TRUE;23;0.628361543;32765.2279
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;283271;TRUE;24;-0.265813721;7.496487376
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);14;11238;TRUE;21;-0.869342791;522443.949
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);12;212501;TRUE;22;-0.22207013;6.479807257
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;131689;TRUE;23;-0.211042302;6.124285255
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;60830;TRUE;35;0.326589627;46.87428792
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;524164;TRUE;28;0.164968296;8.557527326
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);101;851574;TRUE;18;-0.390811369;58.69621318
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);22;32908;TRUE;40;-0.648595271;84.73377979
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;1616;TRUE;38;-0.810325301;237.1564839
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;864543;FALSE;-1;133.0004383;316.2177931
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2230;TRUE;25;-0.067376433;33.70422229
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);702;115343;TRUE;62;-0.567892211;79.35771744
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);155;35246;TRUE;84;-0.231545321;223.6547144
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;1627;TRUE;36;0.78956776;236548.5919
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);53;72739;TRUE;50;-0.89452163;7005.2195
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);33;2584;TRUE;42;0.039954095;646636.0359
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);36;286;TRUE;32;-0.67881492;10964.1645
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;10;TRUE;1;-0.921962704;3.190879461
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;3092;TRUE;33;0.10685962;63.08710923
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;889;TRUE;20;0.003021711;56.27506203
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;6725;TRUE;31;-0.297317773;84.9322679
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;18165;TRUE;42;0.072180832;97.73396621
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;776889;FALSE;-1;23.00054837;103.2010029
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;336578;FALSE;-1;39.05951331;363.5467705
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);666;201932;TRUE;68;-0.312447313;326.1706759
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;162148;FALSE;-1;93.50899207;778.6253871
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;135437;FALSE;-1;88.46358801;791.8695408
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;93324;FALSE;-1;101.2528545;989.8989505
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;53;TRUE;6;-0.305647473;6.893650145
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;83572;FALSE;-1;113.5490243;1113.246215
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;185;TRUE;10;-0.581840355;23.45573434
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;179;TRUE;11;0.410278666;15.1711471
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;203;TRUE;12;-0.642779594;23.1501882
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;347;TRUE;15;0.739943152;32.43148489
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;598;TRUE;16;0.240988394;27.10704506
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1751;TRUE;21;-0.20583223;51.35445881
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1914;TRUE;34;0.111701651;67.84905821
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);31;74552;TRUE;46;-1.978691477;317.426103
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4092772;FALSE;-1;-1.999999808;1.153048704
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;8574;TRUE;39;-1.934821891;180.3854457
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;1727;TRUE;4;-1.673431165;381.0065365
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);159;434635;TRUE;38;-1.992151052;119.0278437
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);301;395723;TRUE;19;-1.999683801;236.4895348
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4990194;FALSE;-1;-1.999989508;62.41257563
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;2986;TRUE;16;-1.11345829;367.9010395
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3430656;FALSE;-1;-1.999998143;0.721692207
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;7985;TRUE;37;-1.966727201;176.0900238
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);38;7276;TRUE;7;-1.196168726;116.9563888
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);125;105333;TRUE;8;-1.999959653;2.570803992
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4981320;FALSE;-1;-1.999997996;63.57464208
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);22;346632;TRUE;22;-1.999999685;8.99232129
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;333105;TRUE;19;-1.999999363;8.072294202
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;232586;TRUE;23;-1.999995958;5.729845375
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);48;1036694;TRUE;24;-1.999994712;6.781775035
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);12;315300;TRUE;20;-1.999994962;6.811820137
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);120;2404390;TRUE;21;-1.999998122;7.598394145
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);11;274156;TRUE;20;-1.999989305;5.776853026
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);45;981879;TRUE;24;-1.999987375;8.812191748
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);11;15285;TRUE;169;-0.114307598;1714.460623
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;6309;TRUE;50;-1.99608966;157.8522303
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;3851;TRUE;50;-1.991861431;294.0529065
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;593;TRUE;38;-1.259772839;300.1803899
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;825;TRUE;44;-1.6206163;287.9742851
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1156;TRUE;42;-1.495964227;382.4058796
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1074;TRUE;50;-0.07375431;397.9801277
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5248;TRUE;136;-1.210502324;1763.40252
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5826;TRUE;134;-1.732089825;1579.710594
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;4912;TRUE;130;1.100698487;1761.474723
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);12;19493;TRUE;168;-1.265173006;1386.640627
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;8073;TRUE;164;1.109079092;2336.718495
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;33496;TRUE;197;-1.244164919;1593.937554
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;9087;TRUE;161;-0.040093376;2228.14922
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3155;TRUE;50;-1.999749819;458.1414811
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);181;397404;TRUE;95;-1.999997741;181.6457996
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);59;178819;TRUE;98;-1.999961799;159.2077554
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);62;185197;TRUE;100;-1.999967778;156.145246
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);21;16200;TRUE;114;-1.986164503;2190.295052
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);221;377876;TRUE;142;-1.999992341;249.3868157
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5787378;FALSE;-1;-1.999992002;5.001850023
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;511;TRUE;19;-1.997694287;9.936808854
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);22;47485;TRUE;27;-1.999830578;61.64141936
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;17858;TRUE;33;-1.997946853;48.41182605
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);28;67521;TRUE;37;-1.999950565;64.60258043
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);10;44014;TRUE;27;-1.998710524;60.52480715
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;18796;TRUE;33;-1.998098919;49.42807863
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;72164;TRUE;37;-1.999090124;65.05018024
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;40296;TRUE;27;-1.997676337;59.60982927
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;19085;TRUE;33;-1.997502226;48.69220718
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);12;66041;TRUE;37;-1.999821322;64.80129128
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;20852;TRUE;27;-1.998034531;59.4473009
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);29;59133;TRUE;27;-1.809461439;343.2920783
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);21;15528;TRUE;35;-0.302927894;1885.252281
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;4269;TRUE;44;-1.096924232;241.4421127
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);34;17726;TRUE;60;0.796691529;321.0662468
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);32;8478;TRUE;86;-1.621017536;966.2737825
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);160;22219;TRUE;56;0.913359444;990.1705871
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);138;50092;TRUE;51;-1.480868257;166.3188948
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);190;23547;TRUE;47;-0.796539992;1064.610852
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);348;50844;TRUE;85;0.865128638;494.1385581
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);259;1014;TRUE;64;-1.967837807;6236479.087
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);303;1012;TRUE;62;-1.949851623;6297831.4
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;157301;TRUE;19;-1.123266987;4.571426118
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);30;407990;TRUE;34;0.009382708;14.74038501
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);78;1298521;TRUE;23;0.000161353;7.362644079
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);12;11326;TRUE;23;-1.301798485;519238.4468
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);89;208412;TRUE;23;-0.879565473;32771.70505
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);20;343263;TRUE;25;0.002870584;7.504840129
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;7213;TRUE;20;0.057392011;521356.2414
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;201772;TRUE;22;-1.402826322;6.52990967
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;96702;TRUE;20;-0.355278001;5.950258353
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;57435;TRUE;36;-0.894403591;46.7883154
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);28;465660;TRUE;28;0.00032654;8.464743333
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);47;513304;TRUE;19;-1.679768691;61.12386083
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);31;61882;TRUE;42;-0.308144421;82.68201232
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;8780;TRUE;42;-0.04682668;89.80001096
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;1059817;FALSE;-1;132.0001648;292.9273547
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;2761;TRUE;32;-1.974363647;30.87713222
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;188747;FALSE;-1;24.00010118;63.4628483
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);199;44906;TRUE;90;0.056887643;199.632599
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;1627;TRUE;36;-0.982088891;236548.6164
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);39;67766;TRUE;46;-0.788321582;7115.994807
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;2584;TRUE;42;-1.454641364;646636.1031
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);34;359;TRUE;32;0.474167536;8998.343196
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;10;TRUE;1;1.769795373;3.7937774
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1836;TRUE;35;-0.639735348;86.4877974
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;989;TRUE;22;-1.595807442;52.2585403
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4559;TRUE;33;-1.674508815;81.04569512
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;21603;TRUE;48;-0.741555387;88.455518
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;1018131;FALSE;-1;24.00157231;101.9764043
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;430433;FALSE;-1;38.36591688;336.5735167
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;360300;FALSE;-1;60.56247845;466.2903816
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;205356;FALSE;-1;98.36299838;759.7495666
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;173244;FALSE;-1;84.13779558;765.5939154
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;115909;FALSE;-1;102.2828711;996.3672077
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;94;TRUE;6;-0.263782052;7.386315338
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;101167;FALSE;-1;114.3710461;1159.226405
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;507;TRUE;12;-1.000778639;16.57373692
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;221;TRUE;11;0.384918526;17.76186864
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;259;TRUE;14;0.031791383;26.90956135
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;487;TRUE;17;0.232402669;33.86656588
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;679;TRUE;17;-1.848780464;25.89623804
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3464;TRUE;23;-0.756690047;36.74553323
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3362;TRUE;28;-1.363867456;61.29498442
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);34;75850;TRUE;46;-2.800239636;311.6802286
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3822013;FALSE;-1;-2.999997156;0.747419024
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;29189;TRUE;41;-2.999500112;34.0334976
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;7487;TRUE;7;-2.830806054;93.96857698
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);154;398802;TRUE;46;-2.999638855;118.7787192
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);148;390944;TRUE;18;-2.999605517;232.5715432
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4841672;FALSE;-1;-2.999995759;61.65190316
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;5203;TRUE;10;-1.32455445;203.4250842
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3359206;FALSE;-1;-2.999998712;0.572590462
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;8670;TRUE;42;-2.99996954;112.2357188
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);35;7547;TRUE;7;-2.536961892;110.9798235
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;2487560;FALSE;-1;-2.999999539;0.101356722
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3931216;FALSE;-1;-2.999993275;60.65806611
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);21;245230;TRUE;22;-2.999970549;10.34892828
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);31;395246;TRUE;19;-2.999988922;8.102958633
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);11;232397;TRUE;20;-2.999965732;5.851300785
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);151;2974996;TRUE;24;-2.999993568;7.098122508
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);18;376916;TRUE;20;-2.999954774;7.045436703
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);100;1895610;TRUE;21;-2.999998217;7.699342969
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;238995;TRUE;26;-2.999930422;5.670951136
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);83;1730736;TRUE;24;-2.999994454;5.754505155
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;9832;TRUE;166;-0.460754124;2327.216893
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;7103;TRUE;49;-2.998234053;187.493314
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;6983;TRUE;50;-2.996993328;210.6943227
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;530;TRUE;39;-2.841715336;329.2572592
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;2184;TRUE;47;-2.994307506;119.2019115
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1023;TRUE;44;0.108880214;410.383997
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;707;TRUE;48;-1.558532835;427.0133692
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6289;TRUE;136;-2.298278496;1536.174382
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;5159;TRUE;134;-0.414151387;1719.023986
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5021;TRUE;131;-1.381284484;1697.01838
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;9575;TRUE;169;-0.621909375;1896.8563
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;32578;TRUE;169;-1.034572309;1167.994832
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);29;34063;TRUE;200;-0.805276663;1666.489521
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;9454;TRUE;165;-0.600986404;2290.997132
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;27116;TRUE;50;-2.999976167;124.5218327
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);42;93754;TRUE;95;-2.998889644;225.4473461
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);45;123150;TRUE;99;-2.999414365;186.3425106
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;35307;TRUE;96;-2.999396307;470.2491887
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);23;15033;TRUE;115;-2.994214235;2418.424874
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);118;148964;TRUE;138;-2.999899923;484.5332364
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;5998168;FALSE;-1;-2.999990716;4.702435486
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);365;1041625;TRUE;22;-2.999993591;5.683415911
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;45217;TRUE;27;-2.999427181;62.55948237
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;17753;TRUE;33;-2.987843329;48.87162192
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);19;97443;TRUE;37;-2.999595582;65.21587919
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;42214;TRUE;27;-2.99920893;61.34255985
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;17295;TRUE;33;-2.995879711;48.30945707
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;99495;TRUE;37;-2.999938678;65.67698093
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;46520;TRUE;27;-2.999562087;61.74435789
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;19774;TRUE;33;-2.999223682;49.88664789
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);22;105711;TRUE;38;-2.999813304;66.20487809
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;46925;TRUE;27;-2.99773317;62.83026232
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);34;62223;TRUE;30;-1.974108265;344.4473182
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);23;15470;TRUE;31;-0.560925877;1901.509008
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;4324;TRUE;44;-2.470599239;236.6939529
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);38;17997;TRUE;64;-2.65936385;328.1884668
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);33;8041;TRUE;87;-2.156818921;990.3701233
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);178;22593;TRUE;57;-1.810399152;994.5828648
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);209;72147;TRUE;59;-2.15934022;135.7759986
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);214;23863;TRUE;50;-2.413587461;1055.014131
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);86;7335;TRUE;84;-0.626496019;1426.429209
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);272;1010;TRUE;62;-2.88230411;6175242.12
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);322;1001;TRUE;62;-2.651567395;6247466.572
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;120094;TRUE;18;-0.998165956;4.515104976
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);32;390278;TRUE;33;-2.292707515;14.51902958
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);126;1886160;TRUE;25;-2.412342109;7.806075092
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;7386;TRUE;20;-0.986423581;518713.0118
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);80;173745;TRUE;22;-2.381805067;32775.38917
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;321318;TRUE;25;-0.999101887;7.437664629
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;8671;TRUE;21;-0.470535646;521809.7916
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;200865;TRUE;22;-0.999310837;6.488223839
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;53548;TRUE;20;-1.958823859;5.640220037
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;41414;TRUE;35;-1.761415586;46.38275271
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);25;416399;TRUE;28;-0.998301972;8.387184546
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);18;193149;TRUE;19;-2.097382513;55.10809139
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);62;116169;TRUE;43;-2.478300984;81.43720697
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5019;TRUE;44;-1.862883771;146.7059539
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;1022840;FALSE;-1;131.0002032;293.6235861
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;2065;TRUE;27;-1.130488106;21.32159237
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);592;115322;TRUE;71;-2.915450902;82.78457978
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);245;66215;TRUE;105;-1.807622959;176.0506699
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;1627;TRUE;36;-0.247919612;236548.5017
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);39;61609;TRUE;52;2.991933217;7095.930772
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;2584;TRUE;42;-2.539247542;646636.0022
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);35;354;TRUE;32;-2.911051009;9062.379269
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;10;TRUE;1;-1.026120476;2.822398098
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;2264;TRUE;29;-0.946529435;91.45695208
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1895;TRUE;21;-1.798122198;37.9317407
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;6681;TRUE;37;-1.709511224;81.65177405
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;24849;TRUE;48;-1.664599637;88.08104128
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);276;271024;TRUE;52;-2.520462912;73.08431442
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;435462;FALSE;-1;33.30781492;319.9884709
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;330100;FALSE;-1;51.1467026;405.1757117
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;198647;FALSE;-1;111.5599895;722.9198805
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;161848;FALSE;-1;85.44812296;776.738226
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;109824;FALSE;-1;101.6701425;982.9331821
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;88;TRUE;10;-1.330070824;7.75804911
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;96192;FALSE;-1;115.0866282;1144.111313
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;320;TRUE;15;-1.780431353;21.12181519
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;353;TRUE;14;-2.297462767;14.54202055
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;193;TRUE;15;-1.481726422;25.56165996
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;514;TRUE;15;-0.936244342;26.59730217
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;289;TRUE;17;-0.623284742;27.47555158
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;2822;TRUE;25;-1.433070407;42.37244219
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5598;TRUE;35;-2.581983609;72.89097573
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);33;76790;TRUE;43;-3.752430547;306.6088503
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;13489;TRUE;15;-3.974314652;181.0621111
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;7757;TRUE;41;-3.994585417;137.2153494
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;2525;TRUE;5;-2.96433587;266.5920937
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);115;309381;TRUE;32;-1.994276498;112.5176438
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);121;335233;TRUE;17;-3.999549888;244.5045726
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5107731;FALSE;-1;-3.999998897;60.27736467
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;6216;TRUE;17;-3.674802206;194.4299216
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3043740;FALSE;-1;-3.9999853;1.23048325
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;7362;TRUE;39;-3.99891473;133.2405879
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);27;10115;TRUE;6;-2.930337082;77.32061912
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;2546104;FALSE;-1;-3.999978282;0.035625289
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3919595;FALSE;-1;-3.999963939;59.46818069
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);14;166111;TRUE;22;-3.999832816;10.01761305
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);48;715466;TRUE;22;-3.999992847;9.273658511
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);22;435095;TRUE;23;-3.999995958;6.749358256
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);117;2167851;TRUE;24;-3.999985218;8.91123174
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);19;391585;TRUE;20;-3.99999883;7.255787043
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);202;3533499;TRUE;21;-3.999999069;8.241710106
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);14;295637;TRUE;24;-3.999868572;6.481658467
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);94;1769339;TRUE;24;-3.999996644;7.69759115
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);10;13427;TRUE;168;-3.785244297;1743.874517
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;6571;TRUE;49;-3.99969947;165.371021
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;2572;TRUE;50;-3.935611643;459.9158347
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;579;TRUE;38;-1.882652949;287.7671303
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;636;TRUE;44;-2.060245561;370.3696245
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;2333;TRUE;46;-2.251936435;407.2131381
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;647;TRUE;46;-2.709163695;436.2976962
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;4966;TRUE;138;-0.295150194;1780.67478
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6070;TRUE;131;-3.604410745;1548.992596
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;5893;TRUE;131;-0.85367481;1645.188908
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;20716;TRUE;168;-0.411630353;1345.497331
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);10;13874;TRUE;165;0.809247474;1652.200215
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);31;36891;TRUE;201;-1.979836103;1683.205575
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;9524;TRUE;166;-0.051201395;2219.5433
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;5776;TRUE;50;-3.998287126;254.4963956
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);172;360068;TRUE;95;-3.999955673;180.8653405
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);98;278029;TRUE;99;-3.999971673;140.4540201
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);48;132831;TRUE;93;-3.999825984;181.6821651
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);23;17840;TRUE;117;-3.998335734;1931.19976
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);114;144788;TRUE;140;-3.99997779;505.9210443
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;6112840;FALSE;-1;-3.999999918;4.782560755
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);389;1054650;TRUE;23;-3.999880381;5.649329459
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;21023;TRUE;27;-3.999789447;59.00681307
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;14442;TRUE;33;-3.99786574;48.61050702
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);42;90769;TRUE;37;-3.999018319;63.90551456
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);24;47056;TRUE;25;-3.996728595;61.66840073
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;7847;TRUE;33;-3.99875702;47.7484501
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);56;117519;TRUE;37;-3.99984704;65.53734883
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;38938;TRUE;25;-3.998044368;60.46719424
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;18992;TRUE;33;-3.999477629;49.20786406
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);28;76956;TRUE;37;-3.997524582;63.54493023
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);18;47006;TRUE;25;-3.997965496;62.46577976
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);63;58558;TRUE;27;-1.905885983;342.3383837
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);46;15563;TRUE;31;0.518936126;1899.457474
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;4246;TRUE;45;-1.117906529;237.2005334
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);74;17740;TRUE;64;-3.484905381;322.3610187
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);70;8767;TRUE;110;-0.426634019;891.1243436
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);376;22675;TRUE;57;-0.552278056;992.9960901
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);332;53138;TRUE;55;-1.629644773;161.6042003
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);235;12824;TRUE;45;-1.897038396;1077.839621
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);232;11780;TRUE;89;0.141205829;986.7032784
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);515;1010;TRUE;62;-3.615392592;6277285.762
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);600;988;TRUE;62;-3.877878487;6396377.819
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;133579;TRUE;18;-1.999286819;4.324581565
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);49;294815;TRUE;33;-1.82218444;14.20145072
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);233;1446306;TRUE;24;-1.999530274;7.457526929
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);38;13326;TRUE;21;-3.905782003;520881.6773
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);276;253968;TRUE;28;-2.544458478;32770.19164
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);43;360182;TRUE;23;-1.999278311;7.435741973
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);14;6451;TRUE;21;-3.475684065;521709.5793
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);28;196717;TRUE;22;-1.999847163;6.308104767
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;86048;TRUE;22;-1.99961574;5.781038248
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;71268;TRUE;35;-3.089521821;46.17270023
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);46;400809;TRUE;29;-2.043946016;8.348735773
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);29;148947;TRUE;27;-2.396618101;53.61623802
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);185;166407;TRUE;50;-3.003183081;81.65205617
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;16424;TRUE;43;-3.711662147;75.78628617
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;490964;FALSE;-1;130.0007005;289.0960126
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6500;TRUE;30;-2.694720446;15.62933047
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;76787;FALSE;-1;22.00111336;125.4074721
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);700;90874;TRUE;108;-2.382895342;136.2853981
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);18;1627;TRUE;36;0.130965838;236548.5772
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);83;61797;TRUE;52;0.927704255;7104.88405
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);64;2584;TRUE;42;-3.470017876;646636.0728
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);62;289;TRUE;33;-2.230840429;11803.95545
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;10;TRUE;1;-1.065385217;2.130631154
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;4439;TRUE;40;-3.402041666;57.2345977
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1371;TRUE;24;-2.257919612;46.41713037
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;11267;TRUE;39;-2.419009327;83.09805736
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);40;60073;TRUE;52;-3.823801868;91.85115429
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;366312;FALSE;-1;22.00057949;106.3078326
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;165236;FALSE;-1;34.01565662;359.224247
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;127373;FALSE;-1;50.36995581;449.1222908
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;77667;FALSE;-1;92.46747105;789.9902178
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;65100;FALSE;-1;81.48446098;774.9257953
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;44073;FALSE;-1;106.0082429;1007.585166
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;145;TRUE;6;-0.923219334;7.45245493
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;40646;FALSE;-1;116.1527136;1113.533304
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;323;TRUE;12;-3.027220446;21.79119478
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;719;TRUE;15;-0.413911584;14.16841652
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;329;TRUE;16;-1.935091194;25.52910685
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;911;TRUE;25;-1.870989762;28.0178701
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;938;TRUE;17;-1.866819676;23.13225792
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1611;TRUE;23;-2.126264512;42.76469149
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;4477;TRUE;35;-3.712061666;55.49966814
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);31;74797;TRUE;42;-4.867882593;299.579654
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;2987454;FALSE;-1;-4.999996028;7.242437084
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;44223;TRUE;39;-4.99980147;44.31546199
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;3415;TRUE;7;-4.05289724;199.5379212
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);63;171408;TRUE;48;-4.975216966;114.9560441
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);112;311351;TRUE;17;-4.998922315;249.0461
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4976804;FALSE;-1;-4.99998576;59.67633803
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;6742;TRUE;13;-3.34364694;162.4478161
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;2704963;FALSE;-1;-4.999998189;4.503755793
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);47;26967;TRUE;42;-4.986593598;156.5152041
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);18;4203;TRUE;5;-3.103546984;181.6673103
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;2350337;FALSE;-1;-4.999997108;0.116366681
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4064263;FALSE;-1;-4.999998766;58.80498331
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);40;498025;TRUE;22;-4.999996871;9.540796415
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);10;220495;TRUE;19;-4.999996321;7.278882679
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);39;736431;TRUE;24;-4.999912712;8.192479867
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);296;5011849;FALSE;-1;-4.999997132;8.83090116
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);48;704636;TRUE;18;-4.999994505;7.605213579
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);136;2494807;TRUE;21;-4.999992107;7.667241246
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;252713;TRUE;23;-4.999982943;5.712437994
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);59;1228673;TRUE;24;-4.999986878;6.259139411
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;18762;TRUE;171;-2.304232858;1509.771886
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;3987;TRUE;48;-4.981006337;245.3863807
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;5383;TRUE;50;-4.98683529;221.2625132
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;429;TRUE;40;-3.873958503;332.4799018
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1642;TRUE;48;-0.974504876;305.2707686
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1070;TRUE;45;-4.184641591;402.0976537
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;650;TRUE;48;-4.45950753;432.751096
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;6069;TRUE;138;-3.384304628;1883.082458
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;5749;TRUE;135;-1.734178675;1705.42753
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;5487;TRUE;137;-3.70785688;1758.593859
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;8053;TRUE;170;-2.092163114;2325.72282
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;13071;TRUE;167;-1.865366866;1913.616106
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);23;20663;TRUE;203;-1.590660905;2154.741344
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;11362;TRUE;168;-2.59904392;1956.534271
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;6124;TRUE;50;-4.995302353;234.4856977
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);191;391335;TRUE;95;-4.999957867;180.5414977
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);46;124969;TRUE;97;-4.999984205;184.2272095
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);17;31120;TRUE;98;-4.999055155;499.7333968
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);23;15918;TRUE;111;-4.999086396;2210.689634
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);742;1193168;TRUE;150;-4.999967273;145.3421842
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4531591;FALSE;-1;-4.999982701;5.381320267
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4752344;FALSE;-1;-4.999968582;4.650052496
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;40461;TRUE;25;-4.999950035;60.19484893
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;22356;TRUE;33;-4.996780884;49.83374311
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);39;83806;TRUE;38;-4.997675046;63.2755968
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);20;43588;TRUE;27;-4.999742815;60.65306981
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;19103;TRUE;33;-4.994574217;49.07942437
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);23;117337;TRUE;37;-4.999445598;66.30064761
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);10;46517;TRUE;27;-4.998318437;62.82050007
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;15118;TRUE;33;-4.991156994;47.63733068
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);17;74033;TRUE;37;-4.99806819;66.91629591
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;38324;TRUE;25;-4.997700453;59.51788205
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);30;56158;TRUE;27;-4.584805113;341.8622812
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);25;17258;TRUE;46;-2.49010923;1758.157083
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;4290;TRUE;48;-3.279938115;241.8403127
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);10;3728;TRUE;78;-1.694890175;424.5749586
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);33;8825;TRUE;110;-4.423835212;876.5196748
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);174;21646;TRUE;60;-3.606110894;989.960228
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);181;60761;TRUE;59;-0.880010327;150.3727013
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);120;13038;TRUE;50;-3.323190128;1081.333484
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);289;35200;TRUE;92;-2.681624381;627.3399139
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);274;1008;TRUE;64;-2.740082109;6195296.057
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);316;1030;TRUE;64;-3.988685943;6167420.409
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;167365;TRUE;19;-2.999758555;4.374056472
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);29;350175;TRUE;34;-2.976635617;14.36876701
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);132;1657749;TRUE;23;-2.999902719;7.57379812
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);22;16757;TRUE;22;-3.613554993;519349.108
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);162;349467;TRUE;29;-2.071273012;32769.41063
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);17;294075;TRUE;25;-2.998128084;7.337181634
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;3194;TRUE;20;-2.061898742;517507.1175
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;180744;TRUE;22;-4.376738798;6.168923054
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;86524;TRUE;22;-3.494364931;5.709362458
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;76453;TRUE;39;-2.686847939;46.14970541
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);31;506768;TRUE;29;-2.98698208;8.405287008
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;144266;TRUE;18;-3.244756031;52.49033202
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);99;182683;TRUE;41;-4.636245556;80.85939483
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;7504;TRUE;42;-2.914251752;97.13255104
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;968249;FALSE;-1;181.0001499;312.7657329
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;7772;TRUE;27;-4.298052834;14.80747171
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);757;146705;TRUE;80;-4.108530534;72.93733904
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);418;112864;TRUE;109;-2.727474074;109.5161269
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;1627;TRUE;36;-1.332333384;236548.6056
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;57553;TRUE;52;3.225102707;7329.881241
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);29;2584;TRUE;42;1.546463248;646635.9425
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);37;493;TRUE;34;-2.953622455;6651.802285
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;10;TRUE;1;-4.916415592;1.328318987
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;4325;TRUE;39;-3.975376891;78.53287592
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1827;TRUE;23;-3.053028466;41.99194807
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;15744;TRUE;40;-3.775274595;65.00383946
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;19377;TRUE;56;-4.546014643;97.69332369
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);238;290086;TRUE;56;-3.419520156;77.68767586
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;418643;FALSE;-1;31.0695572;316.3068276
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;307178;FALSE;-1;57.94666086;454.8045168
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;186362;FALSE;-1;89.20905094;745.6223246
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;161276;FALSE;-1;85.39036574;782.3972975
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;108198;FALSE;-1;95.64071429;922.6024894
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;59;TRUE;6;0.651730124;7.648417218
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;95429;FALSE;-1;113.5230199;1138.449785
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;464;TRUE;16;-2.909553385;22.52538436
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;533;TRUE;15;-4.777953615;15.45635731
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;426;TRUE;18;-2.5575366;30.50676926
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;475;TRUE;17;-2.687647372;36.8337341
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;847;TRUE;18;-1.123257676;22.44134682
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;4664;TRUE;31;-2.70732857;31.5722792
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;3308;TRUE;40;-2.425644814;54.44479489
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);29;69886;TRUE;41;-2.152351513;324.1339112
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);47;172961;TRUE;15;-4.440601608;14.26408295
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4314;TRUE;34;-2.489534278;183.5344846
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;3919;TRUE;5;-1.644548947;176.1347442
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);120;334443;TRUE;38;0.379022343;124.44776
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);128;354758;TRUE;16;-3.536146498;245.1656231
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4983482;FALSE;-1;-4.97010462;64.57605
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;3138;TRUE;11;-0.610742837;327.9239147
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3486686;FALSE;-1;-5.190345747;0.364510094
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);17;9685;TRUE;35;-3.734768715;151.3893519
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);106;21155;TRUE;7;-2.363725453;53.8857981
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;1028966;FALSE;-1;-4.756458459;0.09361528
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4514596;FALSE;-1;-4.826459364;63.35796778
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;123214;TRUE;22;-4.455567253;6.869102508
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);22;325869;TRUE;19;-4.531895082;7.989881901
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;232441;TRUE;23;-4.642679304;5.732061051
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);199;3818021;TRUE;24;-4.984737797;7.291185858
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);15;325835;TRUE;20;-4.397449364;6.765196947
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);167;3038213;TRUE;21;-4.808574217;8.290207292
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);21;378316;TRUE;20;-4.518406655;7.001561989
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);92;1974935;TRUE;24;-4.703455134;6.779344102
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);14;19809;TRUE;168;-0.509601775;1557.258455
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;6150;TRUE;50;-3.89006919;172.2258442
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;5318;TRUE;50;-3.113002604;230.6399263
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;725;TRUE;39;-1.483279264;323.8370442
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;841;TRUE;44;-2.116330255;305.9591265
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1368;TRUE;43;0.50556508;431.118818
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;743;TRUE;45;0.371408923;439.8581352
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5355;TRUE;132;-1.061894302;1807.232633
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4983;TRUE;130;0.047708122;1733.173467
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;5809;TRUE;134;-0.146291697;1680.128888
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;15230;TRUE;168;0.53632886;1497.9955
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;11814;TRUE;164;0.29948313;1897.725264
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);37;48803;TRUE;202;0.27961606;1553.558078
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);11;12690;TRUE;166;-1.299329455;1880.193527
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;3139;TRUE;49;-3.009898047;437.112487
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);176;373834;TRUE;95;-4.37937755;181.5945043
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);16;30946;TRUE;94;-4.194350016;519.3230415
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);24;58495;TRUE;96;-4.154209186;307.2112341
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);22;16132;TRUE;112;-2.873847501;2241.315345
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);210;343987;TRUE;135;-4.26781868;263.223266
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);139;1049549;TRUE;21;-4.381413522;5.651490227
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;569;TRUE;21;-3.078046226;10.12046774
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;44334;TRUE;25;-3.832232098;60.69784962
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;19516;TRUE;33;-3.523092223;48.87277829
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);19;93546;TRUE;37;-3.428409675;64.99234181
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;40018;TRUE;27;-3.927325138;60.32973044
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;18435;TRUE;33;-4.113308288;48.79021892
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);18;100353;TRUE;37;-3.835159123;65.36641058
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;36151;TRUE;27;-3.551027194;60.28679058
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;18082;TRUE;33;-3.421596576;48.85596895
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);18;99338;TRUE;37;-3.665322135;65.35993113
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;46545;TRUE;25;-3.667684419;61.53281562
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);26;57816;TRUE;31;-0.594253642;342.2277353
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);19;15097;TRUE;24;0.027838097;1929.691911
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;4262;TRUE;44;-0.296757511;241.7482368
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);31;18026;TRUE;61;-0.018693648;332.000607
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);28;8477;TRUE;86;0.109564562;964.889814
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);143;22341;TRUE;56;0.183447083;996.5441404
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);168;71344;TRUE;51;0.024264217;136.7316774
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);107;16809;TRUE;45;-1.835977142;900.6358214
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);319;51412;TRUE;87;-0.584761903;510.4614579
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);243;1015;TRUE;62;-1.57689206;6172981.132
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);298;1003;TRUE;62;-1.090876623;6302925.406
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;127022;TRUE;18;-2.371196418;4.570392176
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);27;331366;TRUE;33;-1.077648384;14.41571854
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);407;1801466;TRUE;24;-2.474971454;7.779432973
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);12;10631;TRUE;19;-0.635029103;521559.1721
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);111;193965;TRUE;25;0.989546692;32768.67532
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);15;266338;TRUE;23;-1.064794079;7.423125799
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;10123;TRUE;20;0.068528186;522689.0507
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;182205;TRUE;20;-1.764784326;6.567125515
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;92434;TRUE;21;-1.863501392;5.922036914
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;68234;TRUE;36;-0.757703746;46.40711398
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;437796;TRUE;28;-1.714968052;8.474139625
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);46;502109;TRUE;20;-0.956291983;60.3170889
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);29;58790;TRUE;44;-2.20072279;84.44084816
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;2546;TRUE;46;-0.882040167;162.2037899
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;1104393;FALSE;-1;130.0635714;294.7019856
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2713;TRUE;30;-0.576853635;27.54945497
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;205444;FALSE;-1;21.25234285;62.2660737
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);160;49651;TRUE;92;-0.719488193;178.5013152
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;1627;TRUE;36;0.266242976;236548.5787
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);34;62819;TRUE;50;0.880714463;7171.106466
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);24;2584;TRUE;42;-1.317814358;646636.0522
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);31;293;TRUE;33;-0.128166988;10820.44565
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;10;TRUE;1;-0.318286675;3.491505667
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2138;TRUE;35;-1.045078116;85.4873727
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;936;TRUE;20;-2.033800127;55.60423204
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;12723;TRUE;39;-0.407596747;87.01401209
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;24548;TRUE;49;-0.311289328;99.05052543
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;1064518;FALSE;-1;20.70695927;103.0167981
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;464344;FALSE;-1;41.93959355;374.8485928
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;378760;FALSE;-1;52.58116445;405.9356536
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;221482;FALSE;-1;85.13050361;701.2431003
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;181242;FALSE;-1;79.69888198;757.0467187
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;121178;FALSE;-1;100.6412077;990.9974294
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;59;TRUE;6;0.244519547;7.640873175
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;100145;FALSE;-1;114.1001449;1099.878769
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;204;TRUE;10;1.611405063;23.1967386
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;261;TRUE;13;0.18874488;17.5207358
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;185;TRUE;14;0.518215008;25.02288407
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;314;TRUE;17;-1.956732355;32.24222788
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;667;TRUE;17;0.017837355;28.2128898
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;3010;TRUE;21;-0.50458897;52.04186975
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2515;TRUE;29;0.368740897;78.0334555
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);29;71240;TRUE;42;-5.551451561;302.177496
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3091886;FALSE;-1;-10.34584224;8.30469133
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;1665;TRUE;38;-3.537191036;225.8019135
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);17;9853;TRUE;9;-5.303844819;76.47871131
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);121;311884;TRUE;29;-2.588169045;111.8374437
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);130;344274;TRUE;20;-7.589817521;244.6579101
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4993867;FALSE;-1;-8.929648443;60.47938475
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);18;10977;TRUE;13;-3.878793941;105.4457719
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3339838;FALSE;-1;-9.924815785;0.727284848
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;3090;TRUE;35;-5.064536785;209.9083333
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);26;9351;TRUE;8;-8.248580174;84.42853222
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;1914477;FALSE;-1;-9.933715915;0.04380881
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);610;3039950;TRUE;8;-8.943540674;60.62965092
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;334198;TRUE;22;-8.620817576;9.685309929
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;239800;TRUE;22;-8.489868504;8.274712014
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;254238;TRUE;20;-9.480947091;6.000225398
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);273;4565552;TRUE;24;-9.553416354;10.11032122
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;343307;TRUE;20;-8.523487797;6.785074843
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);138;2555356;TRUE;21;-10.13991499;8.038778982
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);12;243535;TRUE;23;-8.810690698;5.775313761
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);57;1082955;TRUE;24;-10.64857572;7.021836749
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;8204;TRUE;173;-2.234690113;2508.892955
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;3942;TRUE;49;-5.343399884;278.9907308
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;6909;TRUE;50;-7.762142887;156.7102733
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;501;TRUE;38;0.601620382;328.2393112
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;920;TRUE;46;-1.514773316;346.5986087
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1158;TRUE;48;-5.051660374;393.2734712
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;697;TRUE;47;0.378983182;417.8493107
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;5388;TRUE;133;-2.138675639;1949.326536
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6814;TRUE;133;-4.356562517;1729.900962
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6094;TRUE;133;-2.039351293;1613.623261
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);13;22102;TRUE;169;-2.224614281;1306.26463
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;21451;TRUE;165;-2.863595844;1576.111353
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);77;118491;TRUE;203;-3.882757772;1226.911613
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);12;16223;TRUE;165;-1.3801185;1598.399472
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2230;TRUE;50;-5.808841582;677.9070589
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);81;197447;TRUE;95;-8.724808413;183.9614479
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);43;124187;TRUE;99;-7.759303693;191.6824503
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);166;448153;TRUE;100;-9.579378744;133.6047881
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;21150;TRUE;121;-7.442314709;1547.474401
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);95;110558;TRUE;137;-8.052245966;629.1058514
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;6228114;FALSE;-1;-9.595349362;4.843325144
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4459014;FALSE;-1;-8.935773017;4.518957506
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);23;47779;TRUE;25;-6.416488037;61.97772015
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;7389;TRUE;33;-5.899603322;47.70752098
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);45;92703;TRUE;37;-6.722361685;66.3247613
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);23;44706;TRUE;25;-6.618984028;61.67185037
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;18790;TRUE;33;-6.543024371;48.96443531
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);40;80569;TRUE;37;-7.977228038;65.52256318
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;21853;TRUE;27;-6.241184808;58.85204294
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;16847;TRUE;33;-6.839003995;48.31908685
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);37;73997;TRUE;37;-8.004518917;64.52908032
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);26;44739;TRUE;25;-7.435854162;61.63159881
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);30;59910;TRUE;27;-1.178067883;340.6732857
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);23;18052;TRUE;52;-3.302231503;1692.510407
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;4245;TRUE;46;-0.089118538;237.2660545
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);31;17248;TRUE;66;-2.308202818;288.7377943
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);33;8411;TRUE;84;0.260674274;971.9367733
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);165;22482;TRUE;59;-0.655052683;973.7325769
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);187;68241;TRUE;52;-0.769233529;139.5736294
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);125;15256;TRUE;47;-1.703340027;1049.574038
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);241;32155;TRUE;91;-1.190795205;622.2060211
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);261;1028;TRUE;62;-6.165297907;6176541.658
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);300;1000;TRUE;62;-2.960967484;6245881.888
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;120009;TRUE;17;-5.387300945;4.404897724
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);18;310076;TRUE;34;-3.623234835;14.26244969
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);125;2054600;TRUE;25;-6.06401469;7.845448509
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;7421;TRUE;23;-2.612607939;514419.0228
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);77;178384;TRUE;22;-2.11296818;32772.9574
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;264931;TRUE;25;-4.528247804;7.360593467
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);12;11818;TRUE;21;1.052506891;522902.637
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;188645;TRUE;22;-5.23062538;6.33407027
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;68538;TRUE;22;-6.40964223;5.572024771
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;83270;TRUE;36;-0.215194386;46.00203967
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;430215;TRUE;28;-5.611940276;8.347041449
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;65711;TRUE;22;-2.031102956;53.88458886
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);169;323072;TRUE;45;-3.044152609;82.32284346
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;14432;TRUE;47;-2.398424874;80.06200371
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;1001124;FALSE;-1;177.2440195;314.3022093
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2190;TRUE;24;-3.62820672;24.74478503
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;160659;FALSE;-1;19.39094365;78.64982818
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);663;167680;TRUE;117;-3.198461415;95.45256667
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;1627;TRUE;36;0.217681774;236548.5958
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);42;63477;TRUE;52;-1.948637421;7268.479429
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);28;2584;TRUE;42;2.592009792;646636.0741
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);241;9719;TRUE;49;0.366260388;746.3908383
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;13;TRUE;1;-0.359664632;2.890891945
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2333;TRUE;33;-1.39588224;88.48896677
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1675;TRUE;25;-3.321801237;42.49868536
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;22893;TRUE;41;-1.254839114;92.89634892
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;38406;TRUE;45;-1.513526565;98.04206033
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;1011419;FALSE;-1;8.123371449;72.42479838
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);722;345992;TRUE;68;-3.234972285;261.8675595
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;354415;FALSE;-1;46.53407349;446.399817
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;208324;FALSE;-1;90.33393172;762.3520754
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;170794;FALSE;-1;86.25108519;788.6943588
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;119775;FALSE;-1;96.94418511;949.02847
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;86;TRUE;10;-5.791366198;6.249254605
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;104884;FALSE;-1;116.4039704;1157.386586
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;223;TRUE;12;-0.10146252;22.0845547
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;221;TRUE;11;-3.790086674;14.11417993
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;299;TRUE;18;0.013675839;23.24636991
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;329;TRUE;15;-0.355761823;32.84213207
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;563;TRUE;20;-0.489514825;22.93602151
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1326;TRUE;20;-1.071715036;27.05074751
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;4757;TRUE;31;-0.588657615;62.9570542
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);43;90634;TRUE;45;0;289.0163649
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);82;407472;TRUE;22;0;5.565390582
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;8708;TRUE;37;0;146.6920249
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;4306;TRUE;5;0;168.3694647
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);119;306764;TRUE;41;0;118.684141
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);222;572317;TRUE;19;0;231.0191524
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;44402;TRUE;11;0;62.73916656
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;6533;TRUE;9;0;168.8824187
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;2258428;FALSE;-1;0;11.38633162
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);36;24455;TRUE;47;0;152.614187
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);32;5237;TRUE;5;0;158.9689962
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);166;439237;TRUE;9;0;0.143399175
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;172;TRUE;7;0;68.11101142
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);53;1044366;TRUE;22;0;10.91085596
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;631894;TRUE;26;0;9.057216605
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;262910;TRUE;25;0;5.526696679
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);243;4274650;TRUE;26;0;8.797543423
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;609964;TRUE;20;0;8.274581783
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);230;3788913;TRUE;27;0;9.663758803
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;373171;TRUE;24;0;6.611802904
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);283;5011824;FALSE;-1;0;8.546554574
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;20512;TRUE;185;0;2681.487277
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;13918;TRUE;50;0;96.6347533
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;5675;TRUE;50;0;142.1860324
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;614;TRUE;39;0;345.1827642
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;738;TRUE;44;0;396.7671986
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;939;TRUE;44;0;456.3534952
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;958;TRUE;50;0;504.1882628
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;15943;TRUE;141;0;2086.479494
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;12698;TRUE;144;0;1973.859506
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;10125;TRUE;137;0;2039.624795
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;17143;TRUE;183;0;3056.74091
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);30;27441;TRUE;177;0;3325.850207
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);63;48317;TRUE;215;0;2988.591959
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);19;18428;TRUE;174;0;2511.884275
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;21117;TRUE;50;0;142.2126285
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;1722916;FALSE;-1;0;98.71895082
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);438;1304466;TRUE;100;0;127.093495
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;1963749;FALSE;-1;0;92.29136279
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);136;474213;TRUE;124;0;109.4540758
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;1531106;FALSE;-1;0;125.1797309
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);777;3906449;TRUE;21;0;5.645260121
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;2926661;FALSE;-1;0;5.610548517
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;46835;TRUE;27;0;60.81624387
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;10541;TRUE;33;0;48.7816302
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;41975;TRUE;37;0;59.92967077
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);22;42488;TRUE;26;0;58.83862763
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;24004;TRUE;33;0;52.28456317
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);54;99444;TRUE;37;0;67.63619305
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);27;47308;TRUE;27;0;61.63860251
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;25594;TRUE;33;0;51.20035829
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;5055;TRUE;36;0;53.57821598
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;18628;TRUE;25;0;56.48777431
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);70;47478;TRUE;27;0;342.0652606
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;5737;TRUE;45;0;379.1073833
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;2735;TRUE;48;0;239.2043105
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);35;12153;TRUE;66;0;148.1341134
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;4881;TRUE;106;0;977.1682444
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);209;19146;TRUE;54;0;395.6475318
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);302;51424;TRUE;47;0;147.6455692
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);142;10773;TRUE;57;0;657.9057482
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;51572;FALSE;-1;9.682859818;674.2204527
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);580;1043;TRUE;64;0;6256571.031
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);597;1002;TRUE;68;0;5909411.384
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;60165;TRUE;17;0;4.712135885
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);60;340998;TRUE;33;0;14.38853963
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);310;1814819;TRUE;23;0;7.677142232
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;221200;FALSE;-1;6.243037782;524221.9948
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;832979;FALSE;-1;17854.97237;32798.66054
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);49;395888;TRUE;24;0;7.521370592
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;244807;FALSE;-1;8.527070652;524226.2103
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;205544;TRUE;22;0;6.523585897
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;112209;TRUE;21;0;6.130053181
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;126903;TRUE;35;0;46.18726899
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);71;450477;TRUE;28;0;8.48482381
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;748;TRUE;21;0;62.58946435
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;16729;TRUE;56;0;54.59001782
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;11307;TRUE;63;0;114.0310967
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;5403;TRUE;61;0;187.1702014
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;4007;TRUE;25;0;20.93385867
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;73083;FALSE;-1;47.4440633;238.225601
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;112263;FALSE;-1;78.98002605;222.6103634
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);21;1838;TRUE;38;0;209567.8869
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;8541;TRUE;72;0;3223.278056
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;28990;FALSE;-1;103.9845619;98787.67527
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);84;1366;TRUE;38;0;1924.541208
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;10;TRUE;1;0;3.378567641
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1995;TRUE;34;0;85.18533881
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;4843;TRUE;22;0;23.11285449
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;6197;TRUE;33;0;104.7149857
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;37018;TRUE;52;0;95.23514532
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);307;167900;TRUE;53;0;82.02459079
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;170058;FALSE;-1;32.3927353;385.7924373
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;125608;FALSE;-1;49.36859201;491.6676945
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;79893;FALSE;-1;88.53017828;696.4370956
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;66213;FALSE;-1;79.16465749;803.3672303
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;45938;FALSE;-1;93.62141451;853.6882935
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;49;TRUE;6;0;6.969177409
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;40154;FALSE;-1;109.0580758;1040.819866
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;267;TRUE;10;0;19.81648072
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;745;TRUE;14;0;12.58305424
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;337;TRUE;17;0;27.17054388
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;633;TRUE;24;0;29.28871412
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;255;TRUE;16;0;25.63168039
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1717;TRUE;22;0;43.9222555
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;4317;TRUE;36;0;68.00498755
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);35;78588;TRUE;43;-9.112279869;299.9926431
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;2914671;FALSE;-1;-15.60202308;7.713488451
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;15807;TRUE;43;-12.09031284;53.79469061
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);30;33196;TRUE;9;-9.535110767;24.92173187
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);103;264753;TRUE;43;-3.828315978;113.472782
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);142;368548;TRUE;19;-11.06362446;230.4676254
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;7193;TRUE;10;-4.025735711;77.04706239
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;6614;TRUE;16;-7.251112799;175.2951476
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;2520274;FALSE;-1;-15.79451519;2.34815887
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;8663;TRUE;38;-9.004643383;115.0967987
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);225;31782;TRUE;11;-10.63163303;41.2992173
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;2134019;FALSE;-1;-14.59979098;0.076542629
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;93985;TRUE;14;-10.15924429;64.73329335
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;130236;TRUE;22;-12.35959363;8.713644331
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);53;685979;TRUE;22;-15.32917721;9.809345176
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;406237;TRUE;21;-15.88060512;6.618793509
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);275;3830272;TRUE;26;-15.71429526;7.537592822
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);19;292347;TRUE;20;-13.2279577;6.613883072
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);165;2275074;TRUE;21;-14.26313776;7.43606462
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;238114;TRUE;21;-12.43566177;5.851371025
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);433;5007534;FALSE;-1;-15.02128439;10.79460014
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);22;9459;TRUE;164;-5.699125697;2297.92578
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;2464;TRUE;50;-8.030489465;359.5559974
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;2198;TRUE;50;-9.793348546;366.7417327
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;617;TRUE;40;-3.938941081;326.5934417
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;689;TRUE;46;-4.611378109;314.986989
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;1402;TRUE;47;-4.991014073;368.0053787
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;640;TRUE;46;-2.819860241;427.4907829
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;6098;TRUE;132;-0.35196365;1782.283984
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;6842;TRUE;133;-4.868774674;1726.219096
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;5690;TRUE;133;-1.567255603;1547.51918
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;11121;TRUE;164;-2.370176493;1959.979649
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);17;12734;TRUE;168;-3.116043609;1978.50953
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);32;19153;TRUE;200;-2.342427952;2348.347308
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;18823;TRUE;167;0.067613816;1569.76779
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3061;TRUE;50;-8.54164715;432.656401
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);382;544616;TRUE;95;-14.91357887;224.1984434
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;19683;TRUE;100;-10.40924551;872.8137263
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);33;59328;TRUE;100;-12.17605692;295.8284476
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);34;18011;TRUE;115;-10.51039939;1887.142399
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);228;268687;TRUE;147;-13.95999428;293.5528134
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);351;1797186;TRUE;22;-14.0349132;5.648867687
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2580;TRUE;26;-9.824787381;3.476207661
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;36891;TRUE;27;-10.69469683;60.07400888
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;21771;TRUE;33;-8.865592526;49.96838079
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);38;94833;TRUE;37;-11.12192994;64.88623014
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);19;47257;TRUE;27;-11.06738972;61.50675429
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;11955;TRUE;33;-9.393790169;48.84753269
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);27;93513;TRUE;37;-10.60618403;65.33366592
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;21637;TRUE;27;-9.899656961;59.18434792
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;9022;TRUE;33;-8.680962338;47.30917636
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);18;76909;TRUE;37;-11.39248671;65.63762651
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;42770;TRUE;27;-12.11161547;61.12915751
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);41;59595;TRUE;29;-2.563163025;342.9194908
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);32;17026;TRUE;48;-3.008796445;1774.463218
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;4270;TRUE;45;-1.281954662;236.9204821
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;4107;TRUE;78;0.016654679;406.2621735
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);45;8418;TRUE;90;-1.643449802;969.8442126
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);236;22422;TRUE;57;-0.317227663;981.6225148
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);249;65150;TRUE;61;-4.323650693;145.2808961
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);304;26102;TRUE;51;-4.79232918;1072.215504
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);107;6717;TRUE;87;-3.762642145;1446.83831
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);372;1019;TRUE;64;-2.827609134;6200703.552
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);445;999;TRUE;62;-2.882995119;6333436.059
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;147253;TRUE;19;-10.76476741;4.256906213
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);28;317165;TRUE;33;-6.301874461;14.24065511
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);181;2099231;TRUE;25;-10.59580048;7.877426771
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);28;15586;TRUE;25;-6.838321542;520094.9258
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);96;150720;TRUE;26;1.937270965;32774.83382
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);21;276487;TRUE;25;-8.160303855;7.3459301
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);68;46224;TRUE;21;0.431456564;523718.2137
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;159329;TRUE;22;-12.54458262;6.101957033
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;101068;TRUE;23;-9.634102556;5.807487448
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;60889;TRUE;35;-1.848754649;46.07394221
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);29;400632;TRUE;29;-9.843491837;8.318919056
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;20577;TRUE;33;-3.475044364;52.0776761
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);18;26602;TRUE;51;-5.571438683;82.5187918
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;11005;TRUE;49;-6.613769397;89.87611698
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;810682;FALSE;-1;67.54606796;219.6890798
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;10478;TRUE;38;-6.659538839;22.40523182
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;122550;FALSE;-1;47.85911225;158.6331697
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;171870;FALSE;-1;58.79107567;177.2134201
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;1627;TRUE;36;-2.993962372;236548.5172
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);47;58517;TRUE;54;-1.340162501;6937.238285
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;2584;TRUE;42;-3.037840826;646636.0896
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);41;329;TRUE;33;-1.845672386;9773.978883
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;10;TRUE;1;-3.785329976;3.739768315
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;12513;TRUE;32;-2.128851334;75.65721892
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2032;TRUE;25;-5.054335479;37.89350397
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;17032;TRUE;39;-6.089344815;87.09875737
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;31609;TRUE;44;-3.904727356;109.0164588
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;536211;FALSE;-1;15.09005702;102.8175961
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;270317;FALSE;-1;32.41560188;323.09096
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;216395;FALSE;-1;52.62466157;458.8192426
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;132732;FALSE;-1;110.0578832;735.2102461
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;108482;FALSE;-1;82.80415503;802.8469849
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;76250;FALSE;-1;97.84489271;974.9767599
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;73;TRUE;8;-2.874862726;7.100585802
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;64188;FALSE;-1;116.3759681;1195.996077
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;350;TRUE;15;-4.768457167;20.30676216
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;268;TRUE;15;-2.987863143;17.18167699
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;456;TRUE;19;-2.435629001;22.9200413
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;717;TRUE;18;-3.81094642;25.90606994
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1220;TRUE;20;-3.064244145;18.87140994
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3173;TRUE;26;-3.123662099;36.62160744
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;8165;TRUE;41;-6.239789296;54.24579755
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);78;82603;TRUE;48;-14.7803322;283.8654781
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1325001;FALSE;-1;-19.3665058;4.530641723
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;15865;TRUE;37;-14.77361538;68.77501298
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);93;24600;TRUE;13;-11.12887099;38.39167833
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);320;355981;TRUE;30;-9.452378667;108.4802279
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);560;637348;TRUE;19;-15.61549672;216.5366288
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1588;TRUE;10;-8.976213274;65.7990424
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);223;96625;TRUE;15;-9.012672444;47.11858247
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);624;608112;TRUE;27;-17.22568688;44.58713965
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);75;34961;TRUE;34;-14.74404471;84.4368871
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);199;41336;TRUE;12;-13.62029202;23.83126981
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;3076;TRUE;8;-13.42656026;32.97491473
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);68;243457;TRUE;11;-16.74377729;56.83613746
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;86674;TRUE;22;-18.37577356;8.058154411
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;583644;TRUE;26;-20.19326613;8.931688906
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;232012;TRUE;22;-17.39361302;5.781969534
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);671;5003320;FALSE;-1;-21.06875238;8.615152514
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);38;298314;TRUE;20;-17.98423811;6.720723576
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);243;1987142;TRUE;25;-20.26271514;7.608812361
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);41;363149;TRUE;22;-18.62300704;6.878595697
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);221;1845129;TRUE;26;-19.14394549;8.9481048
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);31;15151;TRUE;167;-4.699356636;1852.891973
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;2428;TRUE;50;-13.84289139;352.3395024
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;3405;TRUE;50;-12.2537649;251.6756954
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;554;TRUE;42;-4.375900093;290.8682269
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;793;TRUE;46;-6.938874292;353.9460548
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;1458;TRUE;45;-4.940583163;408.3036827
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;685;TRUE;46;-3.119190944;429.1990157
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;6566;TRUE;138;-7.797672898;1565.961013
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;6869;TRUE;135;-2.358777693;1823.630466
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;6013;TRUE;134;-4.007999041;1671.732026
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);33;22220;TRUE;168;-4.148259755;1386.477085
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);92;80887;TRUE;172;-1.901117326;1052.19366
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);57;20316;TRUE;197;-3.713187074;2491.744895
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);30;15579;TRUE;168;-9.888808292;1790.363857
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;5631;TRUE;50;-14.27691364;251.3058764
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);191;202361;TRUE;95;-16.49085864;184.9052869
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);95;125369;TRUE;100;-17.89425412;181.0812541
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);52;58504;TRUE;99;-17.27794052;299.8033452
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);55;21017;TRUE;116;-17.0494792;1589.01447
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;699827;FALSE;-1;-17.86386308;164.615681
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;3643790;FALSE;-1;-18.07229814;4.641871094
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);369;726851;TRUE;21;-17.37182486;5.679137356
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);21;39777;TRUE;26;-15.46454407;61.49759787
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;3310;TRUE;33;-13.03198635;48.46762969
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);54;130113;TRUE;37;-15.00358021;68.16567038
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;25610;TRUE;25;-14.42616509;58.31104327
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);3;10112;TRUE;33;-12.95901509;48.09251304
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);34;89334;TRUE;37;-14.61633308;65.36375025
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;37500;TRUE;27;-16.34032268;58.83237298
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);4;14055;TRUE;33;-14.3151233;48.89259624
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);46;119439;TRUE;38;-15.63607234;65.15254801
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;21609;TRUE;27;-15.97497748;59.33931708
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);62;55620;TRUE;27;-2.921394999;340.9493259
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);49;15524;TRUE;32;0.448441292;1912.100786
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;4246;TRUE;48;-4.690050409;238.0660759
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);24;4128;TRUE;84;-9.247228723;453.8437089
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);69;8484;TRUE;114;-5.267094766;890.8970122
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);374;21912;TRUE;59;-2.831911578;996.5038545
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);344;53288;TRUE;59;-3.321770469;160.2879206
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);591;31527;TRUE;50;-5.590321036;1019.512802
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);405;21915;TRUE;92;-6.982266804;763.9525876
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);588;1028;TRUE;62;-8.280191052;6140151.265
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);704;1030;TRUE;64;-9.164525227;6211800.353
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;163989;TRUE;23;-14.9838876;4.226159959
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);60;360231;TRUE;35;-8.74165105;14.40642032
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);136;1016132;TRUE;23;-15.69292242;7.073941304
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);28;11114;TRUE;22;-4.233871002;519079.1798
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);67;70911;TRUE;29;-8.782980771;32763.87687
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);35;286886;TRUE;24;-14.38174959;7.290813648
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;21890;TRUE;20;-3.589243766;523316.0668
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;170155;TRUE;24;-15.17595131;5.92039253
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;89366;TRUE;22;-12.00419113;5.773991862
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;68567;TRUE;36;-3.43160944;46.21105179
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);81;614805;TRUE;29;-13.98994712;8.526981795
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1374;TRUE;29;-6.938108208;45.95231095
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;12531;TRUE;49;-8.369064721;79.51322836
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;8404;TRUE;48;-5.004536055;92.36424354
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;522935;FALSE;-1;21.81801643;239.8639388
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;28174;TRUE;41;-8.220462346;14.47450227
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;75414;FALSE;-1;56.35757603;195.4258102
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;115704;FALSE;-1;118.8918268;189.0239087
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;1627;TRUE;36;-2.888046982;236548.6333
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);68;55165;TRUE;48;-0.007395088;7410.422929
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);54;2584;TRUE;42;-0.998018088;646636.0118
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);62;300;TRUE;32;-3.071879044;10627.02823
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;10;TRUE;1;-2.951235217;5.035438747
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;18379;TRUE;45;-6.039933066;65.70009061
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1645;TRUE;20;-6.718066428;50.40805959
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;22314;TRUE;50;-4.486912639;72.37132726
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;25573;TRUE;48;-5.350493227;95.79746212
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;526051;FALSE;-1;2.165104459;69.75182482
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;190025;FALSE;-1;34.60169613;369.5609026
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;149365;FALSE;-1;48.78988596;510.5511157
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;93936;FALSE;-1;83.67962007;778.8623665
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;78987;FALSE;-1;86.28926633;824.819615
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;54883;FALSE;-1;101.698191;1017.587473
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;95;TRUE;6;-3.397264932;7.876738154
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;47649;FALSE;-1;110.4254183;1141.666458
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;242;TRUE;11;-3.756083333;21.44482983
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;789;TRUE;21;-9.843271534;16.68196101
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;534;TRUE;19;-5.349966376;27.1685615
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;560;TRUE;19;-8.012874171;26.508326
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1068;TRUE;17;-8.652345024;18.41086108
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;5836;TRUE;32;-3.734516744;32.67057117
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);3;10940;TRUE;47;-6.894874766;62.81029878
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);81;85592;TRUE;54;-10.88544585;282.5749815
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1402287;FALSE;-1;-24.4060593;2.757857779
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;9918;TRUE;48;-12.8181256;172.6938956
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);209;35466;TRUE;12;-12.70187573;39.12415878
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);248;281113;TRUE;35;-7.346690994;105.8082346
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);344;415579;TRUE;20;-21.34716443;209.2099567
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;33313;TRUE;12;-19.65459618;67.78070814
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);25;11488;TRUE;15;-15.35340686;102.218306
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;910750;FALSE;-1;-24.67609579;7.501668968
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);168;76729;TRUE;38;-18.9993843;99.82680089
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);714;74016;TRUE;8;-19.04376309;27.43250201
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;948321;FALSE;-1;-22.40240174;0.122555054
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);2;5518;TRUE;13;-13.01591664;70.17492936
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);75;678670;TRUE;24;-22.17238753;10.25233122
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);29;311097;TRUE;19;-22.32304563;8.244913383
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);41;443769;TRUE;30;-26.25804388;6.919084707
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);462;3837670;TRUE;25;-24.17637002;8.86841615
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);67;498121;TRUE;20;-23.17708372;7.633511846
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);226;1970611;TRUE;25;-25.03551439;7.479499628
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);36;348949;TRUE;24;-21.24170731;6.701760125
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);413;3360380;TRUE;26;-24.53136104;7.924325531
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);35;19056;TRUE;171;-9.266232683;1581.805281
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;2114;TRUE;47;-16.09596322;420.4460233
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;12278;TRUE;50;-18.16259982;105.9306847
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;595;TRUE;41;-8.608246828;288.081175
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;692;TRUE;46;-6.689244425;330.4720998
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1040;TRUE;42;-3.520561632;435.1915423
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;630;TRUE;47;-4.214308252;431.730556
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;8664;TRUE;138;-3.851863678;1526.9559
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;8055;TRUE;133;-10.92883423;1584.151711
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;5897;TRUE;136;-5.409419972;1737.9645
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);56;44255;TRUE;169;-4.450525903;1220.75384
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);227;202501;TRUE;167;-3.957187148;997.8616255
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);69;22390;TRUE;201;-6.533081643;2640.854151
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);28;14289;TRUE;167;-5.623663064;1936.91246
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;56863;TRUE;50;-19.30119736;166.4286327
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);771;417677;TRUE;95;-20.90923535;181.2138129
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);96;124419;TRUE;100;-21.58444911;187.9015038
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);34;30244;TRUE;100;-20.40654174;519.5497539
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);53;17407;TRUE;125;-20.00404004;2052.310608
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);870;658346;TRUE;147;-23.50403888;186.6215393
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2694128;FALSE;-1;-23.03195918;5.418401706
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2050330;FALSE;-1;-22.37262822;5.514569661
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);31;43385;TRUE;25;-19.09127263;61.1751461
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;34074;TRUE;33;-21.01938198;54.39094854
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);75;132773;TRUE;38;-18.97612392;66.57878456
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;21109;TRUE;27;-17.35833441;59.61725515
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3187;TRUE;32;-12.37249884;59.17543371
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);31;81028;TRUE;37;-17.5351953;67.82633075
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;41571;TRUE;27;-18.68629953;60.11873868
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;18320;TRUE;33;-16.50679128;49.03151794
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;47592;TRUE;36;-15.2954478;63.33681411
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);2;6948;TRUE;27;-16.3069602;64.30840702
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);53;47862;TRUE;31;-3.46349254;337.4671664
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);53;17696;TRUE;53;-11.77094534;1742.641667
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;4227;TRUE;44;-0.863794418;239.0700856
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;3600;TRUE;74;-0.927229919;434.4577833
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);72;8305;TRUE;88;-3.267833129;952.6568639
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);370;21715;TRUE;63;-7.92886398;975.0927667
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);104;6972;TRUE;48;-7.267222759;805.7452126
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);239;12194;TRUE;47;-3.652792073;1126.305667
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);409;21413;TRUE;94;-11.78525793;818.8064754
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);588;1007;TRUE;64;-9.346610595;6283788.194
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);699;1044;TRUE;64;-6.777020212;5983943.715
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;162958;TRUE;19;-18.04927067;4.202418323
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);84;457097;TRUE;33;-15.22565703;14.56598294
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);455;2776652;TRUE;27;-19.0202268;8.101832809
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);131;38395;TRUE;24;-7.485824561;523300.1595
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);668;661657;TRUE;26;-6.745767581;32782.65014
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);52;378822;TRUE;29;-17.63321158;7.34449429
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);95;40671;TRUE;21;0.044251006;523876.1272
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);14;133867;TRUE;23;-18.58635081;5.678793404
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;80999;TRUE;26;-16.60856065;5.806251472
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;79553;TRUE;36;-4.874922653;46.37402593
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);50;413868;TRUE;29;-16.35690585;8.377514399
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3061;TRUE;26;-9.017873391;56.77006363
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);153;146795;TRUE;53;-6.970201022;77.77603613
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;16326;TRUE;54;-11.12653788;97.39997563
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);730;462563;TRUE;72;-15.49023765;181.8730199
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;48075;TRUE;39;-10.4196041;20.54363621
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;74430;FALSE;-1;59.71111343;220.8993976
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;117218;FALSE;-1;110.4494454;191.6420344
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;1627;TRUE;36;6.855783259;236548.5401
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);74;60776;TRUE;50;-3.049817684;7111.934163
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);54;2584;TRUE;42;7.479444095;646636.2467
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);63;335;TRUE;35;-10.14183093;10199.99164
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;54;TRUE;5;-6.753806514;6.567886422
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);3;7803;TRUE;39;-5.395430509;62.02806956
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;4377;TRUE;28;-10.85296941;24.02631806
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;17823;TRUE;49;-9.816067438;66.34812199
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);26;54795;TRUE;63;-9.784957947;70.06555586
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);78;41313;TRUE;60;-11.13242338;118.6835679
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;202030;FALSE;-1;27.90706307;366.2462463
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;152135;FALSE;-1;63.64743082;497.8191201
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;96841;FALSE;-1;108.1901146;751.5389323
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;81913;FALSE;-1;84.874896;774.616987
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;56411;FALSE;-1;104.3478547;1018.892851
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;71;TRUE;11;-5.073399916;7.886517169
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;48186;FALSE;-1;108.4414596;1180.611168
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;458;TRUE;15;-2.156175799;24.35678632
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;283;TRUE;14;-5.042087503;14.35230855
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;295;TRUE;15;-3.645929039;20.61542712
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1188;TRUE;26;-8.161211071;26.71742551
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;788;TRUE;18;-5.182429848;21.86718172
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);2;8797;TRUE;35;-15.57853675;29.38531417
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);3;10459;TRUE;43;-9.356591034;43.79658336
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);75;163122;TRUE;47;0;276.8753569
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4301267;FALSE;-1;0;0.59578361
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;11523;TRUE;38;0;140.7829342
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);33;12672;TRUE;7;0;68.94615579
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);126;301311;TRUE;34;0;116.3919098
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);244;591278;TRUE;19;0;218.292853
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;678;TRUE;6;0;82.31497696
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;6509;TRUE;9;0;167.1206841
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;2673970;FALSE;-1;0;0.769707802
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);311;188937;TRUE;34;0;156.2116806
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);32;4830;TRUE;6;0;167.2696776
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;766;TRUE;8;0;321.061459
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;597;TRUE;8;0;87.47748919
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;299408;TRUE;26;0;8.054637504
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);59;1132305;TRUE;22;0;11.43320736
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;253291;TRUE;23;0;5.771764963
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);287;5006917;FALSE;-1;0;8.010247897
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);49;687946;TRUE;20;0;8.773076085
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);172;3391835;TRUE;32;0;7.82239513
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;285042;TRUE;20;0;5.077763111
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);291;5020035;FALSE;-1;0;8.426055588
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;17750;TRUE;184;0;2583.712992
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;8863;TRUE;50;0;110.4197031
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;47980;TRUE;50;0;118.263752
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;731;TRUE;41;0;330.1654695
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;761;TRUE;45;0;405.4512918
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;976;TRUE;46;0;446.235876
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;698;TRUE;46;0;414.2705104
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;22538;TRUE;147;0;2223.01335
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;15190;TRUE;143;0;2199.804761
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;13576;TRUE;144;0;2165.584318
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;22023;TRUE;176;0;2525.091375
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);41;37423;TRUE;176;0;3090.401937
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);55;37507;TRUE;207;0;3460.628698
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);40;34427;TRUE;178;0;3139.400445
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;4122;TRUE;50;0;345.7212712
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1732812;FALSE;-1;0;123.936483
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1996597;FALSE;-1;0;89.39632009
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1908605;FALSE;-1;0;88.37321266
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1888705;FALSE;-1;0;107.3097478
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1605349;FALSE;-1;0;128.3326832
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4353904;FALSE;-1;0;5.597432339
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3492890;FALSE;-1;0;5.6069718
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;40089;TRUE;27;0;58.67187403
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;43431;TRUE;33;0;60.08073654
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;19644;TRUE;40;0;63.09403684
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;50023;TRUE;26;0;60.3021026
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;7298;TRUE;33;0;46.51873942
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;18055;TRUE;38;0;59.94387444
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;13384;TRUE;27;0;53.08303869
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;11678;TRUE;32;0;54.40036922
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;43449;TRUE;37;0;64.22343387
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;25649;TRUE;27;0;52.60980969
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;37872;TRUE;39;0;201.6665272
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;4603;TRUE;28;0;411.2452932
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;2476;TRUE;56;0;231.5791683
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);32;11462;TRUE;71;0;434.1358078
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;486934;FALSE;-1;8.358156085;134.058053
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;1789;TRUE;48;0;906.3672214
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);775;466819;TRUE;58;0;64.03958641
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;94677;FALSE;-1;22.32837148;323.281431
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;58909;FALSE;-1;82.28424362;983.8714671
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);175;712;TRUE;50;0;4581374.55
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);355;991;TRUE;62;0;6554580.064
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;169886;TRUE;17;0;4.859463391
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;314563;TRUE;33;0;14.23560138
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);143;1953842;TRUE;23;0;8.0961804
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;582624;FALSE;-1;5.85197696;524144.0131
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1520871;FALSE;-1;9717.414262;32803.62636
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);19;253961;TRUE;23;0;7.466726515
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;703110;FALSE;-1;7.70242646;524152.5948
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;192327;TRUE;20;0;6.629048643
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;108689;TRUE;21;0;6.07510766
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;109735;TRUE;37;0;46.51355613
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);35;535788;TRUE;29;0;8.575595635
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;855;TRUE;26;0;53.99455169
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;8555;TRUE;47;0;89.99867958
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;14723;TRUE;88;0;218.3080511
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;12975;TRUE;81;0;235.1642466
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;11101;TRUE;27;0;25.48131449
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;161274;FALSE;-1;32.12482782;247.9554379
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;195859;FALSE;-1;44.75861571;446.3924176
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;1627;TRUE;36;0;235410.7558
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;6971;TRUE;58;0;3802.935044
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;2770;TRUE;42;0;701006.3686
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);60;2017;TRUE;64;0;846.8826207
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;10;TRUE;1;0;3.187166612
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;8998;TRUE;47;0;73.71256776
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1382;TRUE;21;0;46.1091356
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;7989;TRUE;38;0;84.68394214
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;22226;TRUE;54;0;88.92842955
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);232;290528;TRUE;53;0;81.44695695
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;438486;FALSE;-1;18.99141125;359.552444
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;327953;FALSE;-1;35.53365442;467.7493496
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;197298;FALSE;-1;52.50983131;698.4297891
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;163839;FALSE;-1;56.51673178;620.5544622
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;112556;FALSE;-1;67.39167666;763.7234936
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;93;TRUE;6;0;7.53900272
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;95572;FALSE;-1;75.23759407;1039.750766
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;261;TRUE;10;0;22.33652475
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;327;TRUE;14;0;17.35067841
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;237;TRUE;16;0;26.38495627
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;388;TRUE;18;0;32.35073792
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;546;TRUE;16;0;24.77949567
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;5546;TRUE;26;0;35.96504042
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;6211;TRUE;33;0;74.34955124
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);87;179654;TRUE;53;0;272.6761019
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);42;217484;TRUE;27;0;5.80449458
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;31886;TRUE;39;0;126.8150736
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;3309;TRUE;6;0;213.8813869
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);283;680168;TRUE;29;0;104.8325263
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);183;470710;TRUE;21;0;207.8760175
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;308;TRUE;9;0;80.68123104
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;15446;TRUE;11;0;119.9338827
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2622557;FALSE;-1;0;4.466792462
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);191;141799;TRUE;41;0;146.8209267
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);32;5094;TRUE;6;0;161.9729912
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);38;121817;TRUE;15;0;0.917554755
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;101;TRUE;6;0;58.56343454
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;304001;TRUE;22;0;7.5255214
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;636576;TRUE;26;0;9.310877961
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);54;943536;TRUE;25;0;8.06420626
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);308;5007147;FALSE;-1;-0.05414716;8.474724236
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);33;620461;TRUE;19;0;7.592806001
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);292;4835614;TRUE;21;0;8.737085297
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;174589;TRUE;21;0;4.643099716
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);91;1861968;TRUE;26;0;7.287070349
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;22713;TRUE;177;0;2755.482334
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;3926;TRUE;48;0;210.2709501
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;10341;TRUE;50;0;116.2730768
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;438;TRUE;41;0;338.5982147
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;997;TRUE;48;0;389.1271043
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;618;TRUE;46;0;396.162591
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;942;TRUE;51;0;413.305172
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;12574;TRUE;142;0;2022.362211
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;14618;TRUE;144;0;1967.803915
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;25546;TRUE;137;0;2291.743565
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;22777;TRUE;172;0;2493.163541
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;15072;TRUE;180;0;2873.905089
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);56;33864;TRUE;215;0;3474.213204
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;22654;TRUE;175;0;3206.816875
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;24686;TRUE;50;0;138.3285157
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2272471;FALSE;-1;0;3.919401431
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2045768;FALSE;-1;-0.681961041;152.3899038
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);51;134969;TRUE;100;0;209.4767094
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);42;55496;TRUE;125;0;711.339525
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;1676621;FALSE;-1;0;177.3661563
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;868;TRUE;20;0;9.044974424
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;690;TRUE;18;0;11.67676287
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;8288;TRUE;26;0;53.09774276
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;20370;TRUE;33;0;56.07082989
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;55620;TRUE;39;0;66.26200062
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;19551;TRUE;27;0;53.50520226
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1693;TRUE;33;0;67.21761974
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;66416;TRUE;37;0;66.91422448
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;49008;TRUE;26;0;61.03647764
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;7787;TRUE;34;0;51.42516665
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;20675;TRUE;38;0;61.8205629
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;46648;TRUE;25;0;62.04961272
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;2283;TRUE;35;0;332.1692028
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;2836;TRUE;49;0;888.0710667
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;1543;TRUE;48;0;229.2937177
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;3326;TRUE;64;0;233.7433001
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;6865;TRUE;140;0;1097.207637
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);27;4388;TRUE;78;0;902.0121346
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);460;345127;TRUE;73;0;64.51187839
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;2829;TRUE;46;0;336.2556596
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);100;15214;TRUE;103;0;659.4706203
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);229;993;TRUE;64;0;5519248.137
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);328;1092;TRUE;50;0;6370731.837
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;118318;TRUE;18;0;4.824721852
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;333420;TRUE;33;0;14.38254226
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);102;1571310;TRUE;23;0;7.784682554
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;664690;FALSE;-1;-31109.5963;524291.6825
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;1646300;FALSE;-1;1458.741032;32792.97168
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);28;378616;TRUE;25;0;7.59050931
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;743555;FALSE;-1;7.564704969;524388.9461
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;208419;TRUE;21;0;6.551166373
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;96709;TRUE;20;0;5.909583377
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;111430;TRUE;37;0;46.88821773
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;507957;TRUE;28;0;8.530874639
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2053;TRUE;30;0;75.67457003
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;23577;TRUE;48;0;50.21669803
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;11683;TRUE;60;0;126.7234721
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;6394;TRUE;71;0;249.4953797
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;82286;TRUE;31;0;26.04680697
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;195983;FALSE;-1;14.46705327;274.5410495
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;197688;FALSE;-1;9.294585471;716.8717338
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;1865;TRUE;38;0;205438.4681
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;4011;TRUE;58;0;3071.41638
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;70352;FALSE;-1;59.32893057;82286.01189
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);38;615;TRUE;34;0;1952.586486
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;10;TRUE;1;0;3.183385193
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;26313;TRUE;49;0;46.5690117
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4231;TRUE;23;0;37.01911941
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;13997;TRUE;56;0;71.48535437
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;20307;TRUE;51;0;95.02765731
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);33;34448;TRUE;82;0;162.9066544
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;513348;FALSE;-1;11.03856353;343.1782557
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;368220;FALSE;-1;14.30887473;419.9506785
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;239713;FALSE;-1;20.51386745;486.4437668
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;193432;FALSE;-1;23.88667005;608.3300176
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;134943;FALSE;-1;32.83825698;695.7276007
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;88;TRUE;6;0;7.64916526
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;112801;FALSE;-1;32.71770426;1051.228232
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;205;TRUE;8;0;23.64921543
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;518;TRUE;10;0;14.82962731
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;529;TRUE;22;0;27.85806448
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;522;TRUE;19;0;36.56847091
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;662;TRUE;18;0;23.03215657
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;3817;TRUE;26;0;48.74706949
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;3610;TRUE;39;0;40.30609149
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);98;228898;TRUE;46;-216.5482378;261.7291231
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3887911;FALSE;-1;-38.38371054;0.513742093
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);260;334874;TRUE;43;-205.7965663;185.0041947
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);167;68422;TRUE;8;-2.836536173;31.51057755
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);220;527666;TRUE;32;-98.64259083;101.2228171
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;53296;TRUE;15;-25.68994881;183.4939602
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;233;TRUE;9;0;42.84107545
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;27687;TRUE;11;-0.753937623;77.23423981
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2449842;FALSE;-1;-7.157687694;0.542907552
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;692540;FALSE;-1;-672.462913;182.5122112
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);378;61167;TRUE;9;-4.364194995;33.51305249
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2226967;FALSE;-1;0;0.103515159
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;118;TRUE;6;0;54.39242834
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;284331;TRUE;24;-22.35078327;10.52722895
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;529356;TRUE;28;-31.89071959;8.335500294
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;123438;TRUE;21;-8.80085943;5.62072801
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);316;5012465;FALSE;-1;-63.78601139;9.084019409
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);52;718266;TRUE;18;-18.80520864;8.452153216
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);152;2936542;TRUE;24;-21.84892695;7.626047131
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);43;815446;TRUE;22;-23.96091483;7.537355644
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);293;5016750;FALSE;-1;-65.03230715;8.745899369
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);30;19854;TRUE;178;-664.5868998;2442.606249
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;13387;TRUE;50;-13.03567784;84.46242624
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;24845;TRUE;50;-25.96098578;91.4463544
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;552;TRUE;42;0;333.3822734
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;693;TRUE;46;-50.75597271;323.8706292
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;854;TRUE;46;0;389.2255638
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1058;TRUE;50;0;429.7974306
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;13559;TRUE;155;-59.96967585;1655.87315
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;11575;TRUE;142;-222.8167178;1657.047713
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;6782;TRUE;138;-231.2326482;1917.888405
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;20414;TRUE;179;-122.6625169;2454.004863
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);35;26605;TRUE;181;-224.1495772;2298.612848
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);110;53601;TRUE;214;-462.0017596;3352.539494
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);60;42807;TRUE;183;-300.7536479;2383.586125
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;29875;TRUE;50;-38.94220059;118.2380345
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1751378;FALSE;-1;-181.0131153;165.4664828
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2163043;FALSE;-1;-229.8624044;117.0211591
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2017241;FALSE;-1;-101.428789;105.8134663
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);60;58109;TRUE;125;-250.8840971;437.1009986
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1514651;FALSE;-1;-810.8979688;158.885933
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);519;2375565;TRUE;20;-6.263081038;5.622300774
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3990523;FALSE;-1;-4.898578693;5.544123958
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;13810;TRUE;24;-4.145640659;54.48349996
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;18399;TRUE;33;-1.500075129;53.60330902
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);48;106328;TRUE;38;-28.52005652;70.16954119
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;36839;TRUE;26;-25.91644872;57.17933375
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;11636;TRUE;33;-14.54146029;48.93400997
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;18082;TRUE;35;-6.774343521;57.82483779
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;9253;TRUE;27;-3.7802579;51.65444369
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;6202;TRUE;33;-0.052645706;52.12360432
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);33;133979;TRUE;40;-58.51836174;70.42690713
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;8778;TRUE;28;-6.628303044;52.69747192
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;2048;TRUE;26;-14.97780776;372.9160843
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;8522;TRUE;55;-263.8979491;454.4988597
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;3154;TRUE;68;-39.05960752;248.7597556
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;3573;TRUE;54;0;284.5642775
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);76;26311;TRUE;181;-191.6776535;275.6819876
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;1985;TRUE;50;0;573.3029411
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);71;23024;TRUE;42;-20.79580122;157.0261245
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);177;27915;TRUE;68;-11.52289868;203.1798767
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;45345;FALSE;-1;-241.6821263;1745.216716
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);486;1268;TRUE;57;0;6647567.375
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);289;917;TRUE;50;0;4402940.064
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;158483;TRUE;19;-1.453699625;4.788028574
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);41;365928;TRUE;34;-8.376937371;14.40682182
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);161;1863435;TRUE;24;-6.547872448;8.075276416
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;457159;FALSE;-1;-192776.0125;524347.805
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1309088;FALSE;-1;-11661.78614;32808.1038
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;268435;TRUE;23;-4.535234123;7.463457243
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;513657;FALSE;-1;-199013.1727;524519.9208
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);15;205158;TRUE;20;-2.764799009;6.558751455
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;96871;TRUE;22;-3.39865083;5.985183136
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;79912;TRUE;36;-29.84471823;47.35651242
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);37;481178;TRUE;28;-3.312438701;8.527959979
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1268;TRUE;26;-12.90752796;52.54236026
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;27149;TRUE;60;-68.42788386;117.5037069
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;64422;TRUE;69;-21.37591558;91.22464658
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);27;27838;TRUE;115;-50.45541859;228.7355581
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);76;182895;TRUE;36;-10.56482518;37.6597531
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;89462;FALSE;-1;-148.9898759;999.5616218
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;145492;FALSE;-1;-662.0259872;781.3584006
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;88122;FALSE;-1;-50620.73082;35173.71175
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;13544;TRUE;68;-321.88607;4437.128082
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;52241;FALSE;-1;-57443.43192;136407.2079
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);73;2117;TRUE;58;0;872.2195735
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;10;TRUE;1;0;2.685724845
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;16456;TRUE;44;-1.935330843;44.93930815
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;17205;TRUE;28;-1.448781323;31.16163905
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;8581;TRUE;45;-1.216236731;47.9162237
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);35;90003;TRUE;50;-18.22010982;61.54884504
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;984641;FALSE;-1;-92.25596891;107.3552262
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;310052;FALSE;-1;-145.0959377;264.6506443
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;264343;FALSE;-1;-225.1771522;333.0658384
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;167128;FALSE;-1;-308.4723397;570.3087658
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;138059;FALSE;-1;-388.8910462;588.3048485
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;97524;FALSE;-1;-166.1836399;686.7371581
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;61;TRUE;6;0;7.518249876
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;86244;FALSE;-1;-143.401682;733.0396339
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;472;TRUE;14;0;24.06038913
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;680;TRUE;12;0;16.85691017
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;453;TRUE;20;-1.241168251;29.00744191
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;997;TRUE;23;0;33.72321642
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;545;TRUE;20;0;25.60267205
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2552;TRUE;24;0;46.59668532
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1508;TRUE;30;0;43.08955428
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;6956;TRUE;64;-39.77117197;38.28119531
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);127;31310;TRUE;75;-63.62161379;41.31826793
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);27;10131;TRUE;60;-30.68587677;37.78646352
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);34;11065;TRUE;60;-31.70517745;33.87661154
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);85;1682;TRUE;103;-45.69594574;18691451.83
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);81;735;TRUE;111;-729735049.6;463527922.6
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);643;17360;TRUE;101;-65.29347806;125470.5782
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;17660;FALSE;-1;-27.30987019;362081.2526
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;31494;FALSE;-1;-39.25467898;7.973043484
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8333;FALSE;-1;-52.41000306;1670553.018
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;12192;FALSE;-1;-35.31668299;16.11568705
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;18207;FALSE;-1;0;2023390.518
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;6068;FALSE;-1;-19.4664643;25746390.18
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7751;FALSE;-1;-36.43005266;120564743.6
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5089;FALSE;-1;-706081055.7;97838047.44
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7041;FALSE;-1;-322653172.7;61896716.15
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3405;FALSE;-1;-154217464.2;193596643.2
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3959;FALSE;-1;-226195753.7;100367437.4
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4281;FALSE;-1;-442966663.5;46813878.61
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);95;79108;TRUE;71;-156.2348779;259.3544737
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);72;96623;TRUE;52;-76.64822787;93.82140424
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;390791;FALSE;-1;-441.006346;232.5191591
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;323570;FALSE;-1;-341.569871;440.7562334
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;36310;TRUE;78;-341.828039;364.7711966
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;249444;FALSE;-1;-468.5224885;410.5441886
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;326611;FALSE;-1;-505.9091911;346.9920562
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;304933;FALSE;-1;-313.2434599;407.1555403
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;167703;FALSE;-1;-755.8808185;993.3133564
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;191959;FALSE;-1;-525.647721;648.9655421
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;131090;FALSE;-1;-623.0888968;793.1014995
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;131121;FALSE;-1;-857.3187595;1037.534635
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;134067;FALSE;-1;-629.2725608;1120.475368
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;80192;FALSE;-1;-988.7425013;1330.835637
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;75641;FALSE;-1;-953.3352385;1534.58908
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;63700;FALSE;-1;-1443.611911;2079.890101
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;77567;FALSE;-1;-1219.819313;1941.080168
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;57079;FALSE;-1;-1561.361491;2329.565231
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);502;1537890;TRUE;54;-146.1658504;99.99364987
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;95966;TRUE;46;-98.20556626;72.66655218
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);164;584473;TRUE;52;-138.8259769;86.18841348
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;10341;TRUE;44;-20.83125254;45.3254799
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);2;7534;TRUE;83;-36.99615137;88.79441614
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;23283;TRUE;26;-45.08177697;54.18364112
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);257;738534;TRUE;69;-207.1857455;68.26798735
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;200672;TRUE;31;-89.23107793;30.05673931
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;99181;TRUE;30;-49.24696034;45.1021962
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;62785;TRUE;204;-109.7473571;103.1268047
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;64026;TRUE;142;-110.8124332;150.1660884
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;142295;TRUE;93;-198.5400619;138.9768347
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);52;229215;TRUE;273;-729.7271564;184.5081652
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);54;340505;TRUE;92;-400.6611997;62.47756657
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;30757;TRUE;108;-141.4035475;147.6148705
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;162074;TRUE;119;-171.2787529;53.57991904
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);86;543351;TRUE;264;-238.7625815;54.08900632
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);140;678002;TRUE;120;-535.8788811;53.16044033
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1906337;FALSE;-1;-700.001265;104.0028297
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;120039;TRUE;84;-121.0255732;100.4758087
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);50;234340;TRUE;160;-458.3147417;69.32536601
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;126897;TRUE;74;-160.2171571;50.29292214
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);51;205910;TRUE;91;-128.0753857;62.46945481
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);349;748790;TRUE;103;-150.5017783;98.32148602
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;112979;TRUE;249;-235.2727799;50.53313789
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);68;168828;TRUE;123;-142.6221727;148.569391
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;23547;TRUE;181;-453.701975;159.4617066
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;16187;TRUE;122;-67.96572902;163.188761
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);102;428835;TRUE;125;-1054.538645;134.8397733
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);13;43567;TRUE;302;-377.2022601;221.603764
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);179;881472;TRUE;125;-228.4729926;54.54290124
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2141214;FALSE;-1;-593.0793382;95.80290325
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);104;208401;TRUE;155;-267.5250521;128.2006303
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;3133;TRUE;75;-13747.56345;41223.29392
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);25;3073;TRUE;91;-10140.66166;110737.2619
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);66;5845;TRUE;109;-102585.7788;128275.9895
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);373;15813;TRUE;139;-173992.17;333480.7788
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);134;3485;TRUE;99;-343464.2475;1619276.671
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);447;8187;TRUE;126;-2087615.966;2372633.91
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);620;8559;TRUE;136;-1907741.415;3067313.288
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3866;FALSE;-1;-1353186.145;4655861.157
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;2163;TRUE;45;-84651.95552;151566.2053
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;1634;TRUE;41;-2410.75178;87577.46271
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;2710;TRUE;61;-8069.038245;267571.4447
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);33;3776;TRUE;56;-50596.86032;279263.0812
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;2152;TRUE;56;-20505.8635;143912.0943
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;1539;TRUE;47;-51823.84693;249551.3644
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;2825;TRUE;66;-123225.2834;273360.5735
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);54;3379;TRUE;68;-249000.4406;651945.8401
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;4186;TRUE;77;-179244.7164;416898.7382
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;2233;TRUE;63;-163787.799;326361.6608
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;3765;TRUE;76;-129209.1216;453287.638
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;4753;TRUE;80;-238532.6696;450632.4357
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);165;5456;TRUE;103;-642319.4696;1132671.743
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);48;2192;TRUE;82;-159177.1912;770518.3884
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);60;3662;TRUE;82;-1211611.338;587005.179
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);53;2560;TRUE;81;-310028.5031;742675.468
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);234;8694;TRUE;140;-465628.881;1100174.054
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);322;6091;TRUE;127;-1216244.268;2159516.851
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);90;3575;TRUE;82;-406693.7227;874042.0604
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);147;5785;TRUE;105;-514688.7918;891409.1821
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);201;6670;TRUE;140;-639638.3578;1194855.538
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);443;1341819;TRUE;173;-246.8705391;246.4080226
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2017305;FALSE;-1;-300.0025177;277.8761143
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1677301;FALSE;-1;-286.790095;305.8387562
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1572201;FALSE;-1;-290.7933151;339.4174838
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1471278;FALSE;-1;-398.1939175;357.558935
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1339855;FALSE;-1;-376.8700606;377.0820783
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1274039;FALSE;-1;-405.5458182;415.1499639
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;975054;FALSE;-1;-158.8997158;212.6446234
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1111330;FALSE;-1;-205.4826474;179.0360878
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1100143;FALSE;-1;-156.5436444;164.3738244
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1029115;FALSE;-1;-196.2083657;205.1981439
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1158412;FALSE;-1;-182.4819862;150.7608108
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);149;789391;TRUE;45;-38.65774835;45.91265977
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);620;3103962;TRUE;51;-43.97806511;52.56521091
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);38;155799;TRUE;40;-35.49779784;45.82044421
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);168;875900;TRUE;52;-49.4191944;56.92632672
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;335991;TRUE;43;-44.96774749;49.14860303
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;72054;TRUE;37;-29.09403412;38.1818038
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;25600;FALSE;-1;-162.9990506;353.386093
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;494578;FALSE;-1;-390.2394945;390.2261666
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;83019;FALSE;-1;-1439.243041;1687.658395
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2191;FALSE;-1;-765.96564;2946.111459
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);901;473;FALSE;-1;-929.8439649;4736.020332
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3075;FALSE;-1;-1448.612714;10002.39421
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5309;FALSE;-1;-567.2043116;1544.350267
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2692281;FALSE;-1;-56.86466963;56.8732657
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2376;TRUE;42;-19.62078734;40.56794254
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;3408;TRUE;52;-5.531054985;38.48558887
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);20;30238;TRUE;97;-37.38683347;83.36978695
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;19208;TRUE;90;-35.01254194;65.98625988
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);105;139595;TRUE;98;-96.59692961;69.86767002
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;31233;TRUE;100;-40.53004533;68.24820307
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;67309;TRUE;97;-56.37493936;73.60985015
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);45;61188;TRUE;94;-68.09103284;75.22814883
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);28;36652;TRUE;101;-62.0072298;76.88007618
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;56601;TRUE;103;-63.65104365;74.56144266
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;40666;TRUE;105;-47.53333646;74.84847613
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);75;90994;TRUE;107;-62.18665931;74.358054
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);94;110982;TRUE;103;-72.02262419;88.67110679
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);83;92155;TRUE;108;-88.93127418;77.518484
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;67705;TRUE;104;-86.87485211;92.671486
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);33;39294;TRUE;106;-68.07746047;70.05599044
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;74137;TRUE;106;-65.87098529;76.90109075
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);95;99944;TRUE;117;-77.37213836;100.4612711
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);110;112738;TRUE;106;-71.82975931;79.68240654
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);56;58108;TRUE;111;-69.29190616;77.00622139
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);77;79917;TRUE;115;-79.40386449;83.53376855
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);58;55904;TRUE;117;-62.81264082;87.12482601
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);203;192579;TRUE;117;-83.38511442;78.60439925
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);55;53330;TRUE;116;-70.04061367;87.11109781
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);151;140841;TRUE;112;-57.02770509;84.42070282
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);99;83460;TRUE;116;-88.74042549;93.58004398
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);625;505974;TRUE;118;-69.16555044;90.05017352
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);155;105611;TRUE;118;-75.6844624;87.32508415
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);181;131698;TRUE;114;-84.34295356;103.7257661
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);147;112451;TRUE;118;-86.87373627;90.25705989
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);261;181171;TRUE;118;-84.88065164;93.8091696
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);189;128278;TRUE;127;-102.3130055;86.70488717
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);273;191317;TRUE;122;-103.5247844;88.84744274
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);186;133268;TRUE;124;-87.67383176;89.6925999
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1068;TRUE;36;-4.966286586;38.80639735
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;797;TRUE;29;-17.0449743;32.31514293
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1183;TRUE;36;-10.72789771;43.72985146
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;781;TRUE;34;-10.13470724;36.70068945
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;817;TRUE;26;-3.618983308;38.68628353
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;696;TRUE;34;-2.546739777;29.98379709
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;954;TRUE;38;-4.90562825;33.67928367
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1051;TRUE;37;-21.4310179;41.64798549
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1596;TRUE;32;-2.713685361;40.42209598
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1429;TRUE;38;-22.01757967;40.2904655
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2761;TRUE;42;-21.12783167;31.32135657
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1250;TRUE;36;-31.037674;39.59636516
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1669;TRUE;44;-21.55477496;41.49169899
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1088;TRUE;34;-12.85858961;40.43476238
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1790;TRUE;34;-6.387814522;35.50339482
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1714;TRUE;41;-10.13428754;33.09188308
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2415;TRUE;46;-17.13966491;43.53982231
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2139;TRUE;49;-12.14634688;39.53823087
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1351;TRUE;36;-24.45296331;43.58311681
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1908;TRUE;43;-21.91567971;39.82123079
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;73898;TRUE;42;0;311.4573573
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4068901;FALSE;-1;0;0.757591095
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;4718;TRUE;34;0;173.6656933
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;2407;TRUE;5;0;279.7979283
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);111;316285;TRUE;47;0;119.7000102
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);128;369549;TRUE;17;0;240.4924099
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5035162;FALSE;-1;0;64.89821166
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;9815;TRUE;9;0;122.1210835
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;2015242;FALSE;-1;0;7.430721989
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);22;11136;TRUE;38;0;128.5268345
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);34;2787;TRUE;5;0;279.3123117
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;457;TRUE;7;0;385.1549484
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3579818;FALSE;-1;0;65.01387359
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);130;1366644;TRUE;25;0;11.12718308
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);53;619014;TRUE;19;0;8.950407968
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;266583;TRUE;23;0;6.001360919
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);108;1676432;TRUE;24;0;7.125214341
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);44;626934;TRUE;19;0;7.33606973
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);183;2500892;TRUE;21;0;8.1169473
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);41;506050;TRUE;20;0;8.683169476
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);100;1409303;TRUE;24;0;7.752880474
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;14969;TRUE;163;0;2496.898482
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;2198;TRUE;48;0;429.765127
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;40770;TRUE;50;0;95.36334064
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;555;TRUE;38;0;327.0280719
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;684;TRUE;46;0;347.2047738
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;1898;TRUE;43;0;455.7590953
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;851;TRUE;45;0;488.1120081
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;9232;TRUE;132;0;1897.613955
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;6859;TRUE;137;0;1870.212916
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);10;9030;TRUE;137;0;1872.151027
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);28;22087;TRUE;167;0;1855.163896
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;13846;TRUE;163;0;2877.688898
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);162;137893;TRUE;203;0;1423.321687
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);45;47678;TRUE;171;0;1281.109893
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2706;TRUE;48;0;509.2520039
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;1496640;FALSE;-1;0;58.03768138
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;1490223;FALSE;-1;0;167.6380934
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;1494388;FALSE;-1;0;109.307977
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);49;21584;TRUE;113;0;1859.48527
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);460;604718;TRUE;150;0;216.5855466
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);62;350228;TRUE;18;0;5.732047458
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);62;346144;TRUE;18;0;5.739108921
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;39760;TRUE;27;0;61.35339086
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;20690;TRUE;33;0;49.73406124
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;71303;TRUE;37;0;65.26607843
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;48546;TRUE;27;0;62.83787207
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;4097;TRUE;33;0;49.1634464
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);21;88005;TRUE;37;0;65.88883293
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);15;48278;TRUE;25;0;62.1758796
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;30405;TRUE;33;0;53.18103314
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);26;105659;TRUE;37;0;65.09309709
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;36718;TRUE;25;0;58.77633126
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);39;52418;TRUE;27;0;339.6823695
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;10808;TRUE;63;0;1562.010286
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);10;4327;TRUE;48;0;233.1570319
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);90;28839;TRUE;58;0;270.8395022
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);30;5596;TRUE;100;0;889.1742461
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);89;8620;TRUE;48;0;856.0486663
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);364;90288;TRUE;57;0;122.3876928
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);350;27150;TRUE;47;0;1113.987983
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);600;59724;TRUE;101;0;456.3369294
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);403;988;TRUE;60;0;6369517.186
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);434;647;TRUE;49;0;9732533.288
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;173183;TRUE;18;0;4.846011879
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);48;337206;TRUE;33;0;14.63514421
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);167;1583721;TRUE;22;0;7.792536947
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;372940;FALSE;-1;6.266750178;524311.8066
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;1220583;FALSE;-1;31140.69682;32805.71141
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);41;436792;TRUE;24;0;7.639645576
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;431028;FALSE;-1;7.645391799;524313.2267
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);17;212335;TRUE;22;0;6.494376236
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;100658;TRUE;21;0;6.009863466
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;76168;TRUE;34;0;46.05275896
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);54;599713;TRUE;28;0;8.630629209
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);138;1013682;TRUE;20;0;62.22453033
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;2009265;FALSE;-1;7.600004125;64.83596291
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;2108;TRUE;42;0;163.4707693
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;806614;FALSE;-1;32.30008905;212.2819545
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;3437;TRUE;22;0;17.95842981
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);246;36431;TRUE;60;0;216.1501616
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);323;62865;TRUE;96;0;179.8602616
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;1627;TRUE;36;0;236617.5312
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;12124;TRUE;52;0;4125.138261
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);38;2584;TRUE;42;0;645207.09
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);47;458;TRUE;30;0;6716.136365
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;10;TRUE;1;0;3.298394154
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;6495;TRUE;39;0;89.18582626
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;907;TRUE;20;0;55.70106072
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5581;TRUE;28;0;77.29998447
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);15;33507;TRUE;44;0;120.5694228
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);95;76764;TRUE;46;0;71.45031166
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;275017;FALSE;-1;34.32529437;346.8953123
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;213700;FALSE;-1;54.21010321;445.8524149
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;131403;FALSE;-1;93.13063321;785.2165712
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;110348;FALSE;-1;81.85293384;750.1468736
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;76033;FALSE;-1;101.4230157;973.7742486
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;59;TRUE;6;0;7.279182806
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;68084;FALSE;-1;112.5764257;1137.824224
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;191;TRUE;10;0;23.55905061
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;226;TRUE;13;0;15.34380512
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;221;TRUE;12;0;24.08243765
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;329;TRUE;17;0;32.9143396
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;649;TRUE;17;0;26.9373294
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1540;TRUE;23;0;46.82106468
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;8771;TRUE;37;0;60.53275434
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);43;90025;TRUE;51;0;292.9748297
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3465648;FALSE;-1;0;8.03567613
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);22;23347;TRUE;44;0;158.6107678
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;2182;TRUE;5;0;303.9302019
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);67;178767;TRUE;28;0;123.893945
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);112;312797;TRUE;17;0;258.8413759
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);504;3135275;TRUE;6;0;63.58445079
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);21;13860;TRUE;9;0;91.6068467
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;2752252;FALSE;-1;0;1.247346682
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);24;13512;TRUE;43;0;145.8113909
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);15;1823;TRUE;4;0;419.1936946
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;346;TRUE;6;0;386.7925058
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);326;2231180;TRUE;7;0;60.77644391
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);40;735336;TRUE;25;0;10.26413363
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);21;408491;TRUE;21;0;8.630564462
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);15;346093;TRUE;21;0;7.330474883
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);272;5004513;FALSE;-1;0;8.083797698
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;502753;TRUE;20;0;7.247954195
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);244;4621016;TRUE;30;0;8.813336885
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;445748;TRUE;23;0;7.268458341
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);297;5002971;FALSE;-1;0;10.6205404
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;21277;TRUE;172;0;2075.679148
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;7463;TRUE;50;0;108.3903109
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;40299;TRUE;50;0;86.23467644
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;637;TRUE;41;0;346.3951036
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1074;TRUE;45;0;384.7800569
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1568;TRUE;46;0;433.3859849
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;790;TRUE;47;0;462.2733623
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;10940;TRUE;134;0;1963.567971
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;9603;TRUE;136;0;1759.272813
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;8330;TRUE;141;0;1925.882582
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;11379;TRUE;173;0;2702.939212
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;12781;TRUE;167;0;2365.33889
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);390;566365;TRUE;210;0;1340.091224
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;16921;TRUE;173;0;2659.483524
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;112349;TRUE;50;0;202.1584977
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;2419422;FALSE;-1;0;7.498461185
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);96;202285;TRUE;96;0;174.5801799
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);144;420354;TRUE;100;0;131.7588027
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;42442;TRUE;125;0;1442.24313
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1507536;FALSE;-1;0;120.8208006
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5142498;FALSE;-1;0;5.138886813
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;822;TRUE;18;0;6.062387072
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;21233;TRUE;27;0;59.23177962
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;34925;TRUE;33;0;54.31774442
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);35;78522;TRUE;37;0;63.47141963
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;42264;TRUE;27;0;60.42070527
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;31134;TRUE;33;0;53.6756156
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);34;118693;TRUE;37;0;67.68828058
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;22190;TRUE;27;0;59.30926705
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;14739;TRUE;33;0;48.50029867
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);21;110938;TRUE;37;0;67.76154786
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;19942;TRUE;25;0;57.18703638
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);21;44034;TRUE;31;0;337.385383
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;3467;TRUE;61;0;712.8055715
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;4137;TRUE;48;0;237.7636848
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);35;17783;TRUE;76;0;339.0770538
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);16;4438;TRUE;98;0;976.2202007
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;649945;FALSE;-1;3.600003866;52.65921505
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);167;47962;TRUE;47;0;158.4660225
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;127092;FALSE;-1;41.40905847;329.3917762
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;66968;FALSE;-1;70.27854396;1221.201308
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);160;735;TRUE;50;0;4864229.373
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);322;1016;TRUE;62;0;6532202.144
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;159209;TRUE;18;0;4.844654042
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);28;343101;TRUE;33;0;14.53206806
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);146;2228042;TRUE;23;0;8.376174218
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;641073;FALSE;-1;5.697569038;524257.2563
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1662377;FALSE;-1;29500.75603;32804.6452
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);34;461091;TRUE;24;0;7.662857873
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;750862;FALSE;-1;7.214620581;524342.8562
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;208101;TRUE;21;0;6.474557411
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;69997;TRUE;20;0;5.948409933
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;49091;TRUE;36;0;46.36836556
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);38;612381;TRUE;28;0;8.6521143
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;219470;TRUE;22;0;58.74901299
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);459;1213341;TRUE;45;0;140.4101327
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;2000811;FALSE;-1;162.0000685;231.0465685
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;948236;FALSE;-1;30.60001721;182.0885281
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;2417;TRUE;31;0;30.4800051
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);202;44842;TRUE;67;0;188.9745608
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);576;168054;TRUE;110;0;128.7871825
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;1627;TRUE;36;0;236491.6714
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;7863;TRUE;60;0;4659.064
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);28;2873;TRUE;44;0;572601.1053
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);42;961;TRUE;34;0;2126.051822
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;10;TRUE;1;0;3.502874608
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;6157;TRUE;36;0;81.54667265
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;907;TRUE;20;0;55.74956352
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;11539;TRUE;36;0;95.719676
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;18964;TRUE;47;0;99.02397398
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);58;62007;TRUE;59;0;206.5744619
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;470127;FALSE;-1;39.6338429;340.3423864
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;349457;FALSE;-1;42.8713692;457.2564496
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;204486;FALSE;-1;92.56042206;760.0128908
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;170750;FALSE;-1;81.00604623;785.7586951
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;114107;FALSE;-1;97.81671467;967.8865943
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;59;TRUE;6;0;7.274679927
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;101144;FALSE;-1;114.8821457;1102.041301
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;544;TRUE;11;0;17.45178075
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;299;TRUE;13;0;14.63328293
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;343;TRUE;18;0;24.31186218
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;606;TRUE;19;0;36.24283654
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;636;TRUE;16;0;27.43981244
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1723;TRUE;24;0;44.33811233
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2533;TRUE;29;0;76.05361971
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);38;84682;TRUE;51;0;296.1867718
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3689023;FALSE;-1;0;1.794485591
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;6745;TRUE;40;0;126.3802322
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;1727;TRUE;4;0;384.8958353
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);154;376525;TRUE;41;0;113.1665041
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);117;302069;TRUE;16;0;254.7398138
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);53;391006;TRUE;6;0;59.5494134
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;14672;TRUE;10;0;87.32429751
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;2262368;FALSE;-1;0;18.65545786
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;8148;TRUE;40;0;200.6884961
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);22;3188;TRUE;6;0;247.1758152
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);81;89429;TRUE;7;0;1.668735486
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);36;257867;TRUE;6;0;63.28343949
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);51;990608;TRUE;26;0;9.639470156
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);50;934982;TRUE;19;0;10.83746759
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);40;763140;TRUE;22;0;8.283800228
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);296;5005385;FALSE;-1;0;8.946836071
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);41;634728;TRUE;18;0;7.800451667
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);243;3932626;TRUE;27;0;9.706393112
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);14;262871;TRUE;22;0;6.150501378
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);165;2418057;TRUE;23;0;10.18249147
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);17;15290;TRUE;181;0;2720.240809
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;14232;TRUE;50;0;90.18342292
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;6365;TRUE;50;0;134.2390142
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;503;TRUE;38;0;355.8333878
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;701;TRUE;46;0;380.4831754
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1048;TRUE;51;0;250.7426218
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;707;TRUE;49;0;449.6839493
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9695;TRUE;141;0;1693.802319
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9838;TRUE;138;0;2010.244504
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9325;TRUE;137;0;2139.62716
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;17144;TRUE;171;0;2642.416363
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;15637;TRUE;174;0;2616.708647
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);40;35326;TRUE;204;0;2573.194252
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;18052;TRUE;177;0;2846.29084
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;62836;TRUE;50;0;116.7752363
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;2128510;FALSE;-1;0;5.654698451
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);195;538014;TRUE;100;0;122.0307515
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);329;962993;TRUE;100;0;188.4345295
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);73;178535;TRUE;124;0;250.0471317
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;1430218;FALSE;-1;0;95.71523029
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;735;TRUE;21;0;9.591250809
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5414723;FALSE;-1;0;5.160525002
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;21600;TRUE;27;0;56.99179928
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;27915;TRUE;31;0;49.82556169
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;27633;TRUE;40;0;63.75363588
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;36530;TRUE;27;0;58.89539972
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;24135;TRUE;32;0;49.70669049
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;43368;TRUE;38;0;64.6718076
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);14;31320;TRUE;28;0;58.03394817
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;4866;TRUE;32;0;52.92157773
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);41;120312;TRUE;37;0;67.9991895
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;50205;TRUE;27;0;63.50645433
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);21;41376;TRUE;31;0;336.6502949
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;4221;TRUE;65;0;934.9914454
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;3717;TRUE;44;0;238.9561015
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;12020;TRUE;57;0;152.9053719
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;6294;TRUE;114;0;728.6742246
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);56;9387;TRUE;58;0;515.9826535
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);185;74400;TRUE;59;0;88.91034978
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);84;12958;TRUE;53;0;793.1974897
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);257;39367;TRUE;93;0;393.9678345
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);154;757;TRUE;50;0;4633034.739
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);296;655;TRUE;51;0;9743975.62
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;180581;TRUE;18;0;4.906006044
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);26;374659;TRUE;33;0;14.63124852
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);136;2144283;TRUE;23;0;8.154995814
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);203;152684;TRUE;35;0;524223.7537
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;1698349;FALSE;-1;27864.24488;32806.50111
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);28;383184;TRUE;23;0;7.495121724
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;734166;FALSE;-1;7.131752254;524468.9414
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;205493;TRUE;20;0;6.583044719
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;98945;TRUE;20;0;5.904260813
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;107055;TRUE;34;0;46.14691562
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;528757;TRUE;27;0;8.51410331
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;91361;TRUE;20;0;55.61439493
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);24;49247;TRUE;45;0;80.61031982
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;2330433;FALSE;-1;153.00005;218.4583682
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;4482;TRUE;53;0;167.5559133
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2139;TRUE;25;0;23.2279132
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);209;48035;TRUE;63;0;192.4206192
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);770;223152;TRUE;115;0;133.8909058
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1627;TRUE;36;0;235124.7153
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;9337;TRUE;76;0;6122.18399
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);30;2873;TRUE;44;0;575744.8795
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);36;495;TRUE;34;0;4788.498528
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;10;TRUE;1;0;3.238724083
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;3083;TRUE;32;0;88.10009534
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;976;TRUE;20;0;54.21777011
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;15992;TRUE;42;0;80.94887968
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);15;49658;TRUE;55;0;104.1350382
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);36;51235;TRUE;46;0;66.65263027
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;476488;FALSE;-1;35.70972899;390.9359512
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;350130;FALSE;-1;61.05431547;514.7274372
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;205589;FALSE;-1;96.69993607;752.5235002
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;171650;FALSE;-1;76.26383679;781.2334894
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;120108;FALSE;-1;105.4899331;991.8426572
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;60;TRUE;6;0;7.096294347
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;105351;FALSE;-1;114.6036865;1149.875293
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;179;TRUE;10;0;23.83362923
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;346;TRUE;11;0;13.27014536
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;242;TRUE;16;0;30.30910377
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;386;TRUE;16;0;31.61676534
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1016;TRUE;24;0;27.88057618
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;529;TRUE;19;0;31.99880931
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2458;TRUE;32;0;82.11291125
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;6685;True;62;0;38.8280591863936;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);264;60602;True;73;0;50.7832386950226;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;9688;True;60;0;40.7077814661839;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);29;10008;True;62;0;32.4996901191606;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);67;1156;True;101;0;4191346.68613831;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);206;2710;True;111;0;38972397.3229646;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);612;17005;True;101;0;373016.332498565;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;24390;False;-1;0;12.9247034366447;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;38443;False;-1;0;4.1983450214365;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;8939;False;-1;0;29661173.804486;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;13581;False;-1;0;13.9167986518765;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;19548;False;-1;0;1079238.48485086;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7029;False;-1;0;9474135.88150824;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;8346;False;-1;0;80750730.2167541;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5355;False;-1;0;101053961.107152;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5466;False;-1;0;79041112.5556555;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3652;False;-1;0;29535578.387826;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4699;False;-1;0;56941737.2300686;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5941;False;-1;0;16081216.2944043;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;685511;False;-1;149.917882074445;208.503499731144;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;19736;True;35;0;135.719588817406;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;413063;False;-1;247.686616073524;322.939802458859;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;275165;False;-1;282.249018629803;412.412300192299;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;480302;False;-1;222.01078046361;348.019401671929;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;237490;False;-1;287.410793815991;393.861575654091;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;379291;False;-1;169.575534932456;239.528028707368;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;284385;False;-1;235.728586571182;328.464339322589;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;175646;False;-1;602.789102617984;819.48519710094;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;193778;False;-1;403.634273723706;540.290258522754;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;136076;False;-1;403.858440097122;679.419290722285;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;116228;False;-1;853.75567150522;1094.28110815177;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;143174;False;-1;873.035988567824;1185.20844121104;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;84134;False;-1;554.976089092324;1060.19350530968;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;78473;False;-1;695.208730422555;1147.26942824889;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;74360;False;-1;723.232574057342;1077.29378601426;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;93786;False;-1;1611.92319761708;2087.1331630907;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;58506;False;-1;1375.29165142709;1923.18990320375;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);38;94864;True;52;0;69.1954642039892;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;6409;True;34;0;55.9089239360345;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);67;222360;True;58;0;65.5275560754911;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);79;181782;True;32;0;36.0220024968713;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;34538;True;56;0;106.584000860612;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);45;240528;True;33;0;35.5720010226936;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);316;1459274;True;56;0;59.3537819544101;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2794;True;29;0;25.8231936697964;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;31354;True;33;0;38.9862455510533;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;100790;True;303;0;655.143922498566;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;11469;True;123;0;188.216489204383;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;13863;True;97;0;139.406142999256;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);60;292611;True;227;0;156.103585360883;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);47;364665;True;103;0;60.9181816686344;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;3860;True;113;0;93.0200207226404;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;88204;True;101;0;47.839239592365;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);57;546945;True;94;0;38.0208281613115;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);86;555462;True;156;0;50.9003343811069;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;23613;True;272;0;1178.85295710256;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;41479;True;68;0;81.5180254785553;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);97;547284;True;189;0;55.6928146817051;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;136032;True;109;0;56.3738071884578;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);42;333789;True;85;0;59.2386728447838;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;62671;True;89;0;85.5110833351323;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);51;492362;True;88;0;38.3097700080309;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;9004;True;115;0;56.4743330426594;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);19;81071;True;296;0;902.425831978012;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;9587;True;115;0;191.05815089408;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;21940;True;113;0;131.199377434176;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;77251;True;267;0;134.035775051616;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;155761;True;105;0;36.0878330829679;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;45151;True;260;0;665.752039464645;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;14854;True;120;0;88.0905239182001;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);32;4770;True;55;0;40327.6173480674;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;1313;True;55;0;147625.049996605;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);32;3080;True;85;0;120957.826423805;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);572;17854;True;112;0;319367.418751941;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);59;1939;True;89;0;1550076.66852219;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);87;2893;True;97;0;1536500.25780488;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);46;1335;True;76;0;1788282.22091624;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3104;False;-1;0;3958747.49151399;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;1546;True;39;0;107246.827102737;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;2446;True;57;0;81145.595326398;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;1058;True;41;0;189672.127170295;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;954;True;43;0;201672.504337088;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;938;True;37;0;158247.160216432;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;1454;True;50;0;138173.646791409;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;2295;True;56;0;107155.628472419;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;1434;True;60;0;358293.863379716;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;983;True;56;0;444761.537104952;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;1665;True;56;0;144932.751446228;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;1256;True;54;0;344751.572422048;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);18;2226;True;72;0;328915.911525321;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);57;3123;True;77;0;831782.680956563;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);24;1794;True;67;0;567014.846414958;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);12;1943;True;65;0;198464.770353026;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);30;2079;True;72;0;645277.480537974;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);44;2512;True;68;0;844586.527005547;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);96;3746;True;106;0;1228277.6167054;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);34;1576;True;75;0;966533.64739479;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);23;1314;True;66;0;799427.160261464;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);68;2525;True;79;0;1326520.03573343;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;22383;True;177;0;238.342681410258;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;26737;True;193;0;257.303597478732;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;28793;True;209;0;283.165334985444;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);12;39537;True;233;0;303.246009123261;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;44644;True;245;0;313.975167430928;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;54861;True;245;0;342.218111290382;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);27;69717;True;279;0;364.857363139599;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;11519;True;115;0;140.881835687045;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;16737;True;106;0;94.5462099100422;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;8642;True;96;0;95.6042486774943;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;12846;True;108;0;138.937047380826;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;9587;True;99;0;128.574762435673;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1459;True;48;0;36.0890221889337;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2513;True;59;0;48.2416567756982;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;987;True;36;0;30.5318977269031;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1455;True;54;0;44.1716323703688;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1068;True;42;0;35.5333849499934;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;788;True;36;0;31.2357202036792;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);829;83663;True;76;0;123.577658526391;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);27;27303;True;63;0;216.64445340448;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;129572;False;-1;788.367404942098;1173.72203978851;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3554;False;-1;2179.00781549265;2743.2929588366;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;821;False;-1;3999.23165399693;4768.02593028813;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4485;False;-1;8362.00720066266;9912.66352848309;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7603;False;-1;1204.83262298991;1545.54606755604;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;10193;True;47;0;32.1788930744786;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1100;True;43;0;40.9807255998093;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1349;True;48;0;42.9837670891178;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6261;True;88;0;80.7949301970903;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5374;True;93;0;80.3670272970491;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5334;True;91;0;89.3008608102008;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5310;True;91;0;82.6718870527385;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5249;True;93;0;85.397825885022;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5470;True;96;0;88.2399570214288;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5252;True;93;0;86.2011918583013;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6180;True;93;0;89.3023295207829;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5884;True;100;0;88.3855503651;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5433;True;94;0;93.0360877623054;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6200;True;101;0;86.8967678097032;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7561;True;109;0;92.5094677509577;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6905;True;102;0;106.699864516723;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7327;True;105;0;94.5685314156266;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7449;True;97;0;93.1619070770071;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6795;True;106;0;95.9760253577486;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;8060;True;108;0;95.8521738734702;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7199;True;108;0;101.634258405553;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7496;True;110;0;103.006463430574;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8458;True;110;0;101.53269675799;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8942;True;111;0;105.179947868263;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8729;True;114;0;105.689897694354;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7240;True;109;0;100.160963297023;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9219;True;117;0;108.520733355782;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8714;True;110;0;107.430520517262;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;9153;True;114;0;105.518641529503;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9539;True;117;0;113.548497960254;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;9015;True;118;0;115.286185314346;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;8863;True;115;0;103.754819016078;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9416;True;124;0;105.369321644316;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;8963;True;114;0;102.307325865819;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;8720;True;117;0;115.720056039553;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;721;True;33;0;39.5177850557572;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;911;True;30;0;31.0793527595323;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;677;True;34;0;30.6096896690763;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;715;True;34;0;27.3784803579496;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;620;True;30;0;33.7778107555115;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;784;True;34;0;31.6431710724807;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1082;True;38;0;37.6331374348516;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;700;True;34;0;37.2947303817553;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;763;True;36;0;36.2551659295429;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1115;True;38;0;38.0059477710533;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;914;True;38;0;29.7269787321726;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;926;True;34;0;44.8069902851553;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1149;True;40;0;40.3014135584578;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1149;True;36;0;37.1824776039475;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1508;True;36;0;34.5623505147916;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1233;True;40;0;33.5002438585982;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1243;True;38;0;42.3695500158925;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1748;True;50;0;42.52034532684;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1395;True;44;0;44.9343540305702;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;992;True;38;0;31.7373840221224;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;6269;True;62;0;37.3997847099363;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);231;54414;True;73;0;48.6126456987038;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;10497;True;60;0;38.5801736218507;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;10227;True;58;0;34.305011274998;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);89;1633;True;101;0;11573482.0978485;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);186;2378;True;111;0;87308287.4521524;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);595;16279;True;101;0;1122256.70735738;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;18232;False;-1;0;2050589.96483215;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;37279;False;-1;0;4.82436071298658;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;17161;False;-1;0;1443193.3004381;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;12636;False;-1;0;14.9375498534359;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;18375;False;-1;0;3060849.75885559;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7277;False;-1;0;4307063.08982813;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);739;7528;True;109;0;85296894.8972858;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;5188;False;-1;0;83551906.8210905;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6525;False;-1;0;72697105.3402311;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3800;False;-1;0;62690851.6768492;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;5299;False;-1;0;75705628.6613065;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6026;False;-1;0;25387805.4918087;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;720778;False;-1;140.964779150563;198.9925086383;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);229;219437;True;58;0;88.7053422809333;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;380180;False;-1;414.484140436018;525.631216339361;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;314656;False;-1;288.003492772581;410.776952301226;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;490391;False;-1;249.600560224056;371.673505400771;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;235371;False;-1;288.193239748568;408.03910962225;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;399134;False;-1;206.400624250621;282.177274119623;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);634;220399;True;109;0;317.595394171373;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;180464;False;-1;605.209896851522;860.949815736428;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;259357;False;-1;369.601758517698;484.114910937126;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;127292;False;-1;553.654781682815;771.997940636789;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;124276;False;-1;854.501062265085;1120.21074596984;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;144730;False;-1;785.828073176475;1073.5693606406;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;89951;False;-1;615.421894026278;997.707929274029;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;87188;False;-1;760.37767315301;1058.03869485373;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;74929;False;-1;1109.0813848616;1674.9204624801;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;93953;False;-1;1534.7247336717;1995.35287645245;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;66405;False;-1;1073.96342975477;1850.0007491647;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);143;373927;True;64;0;71.5579517866358;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;23589;True;50;0;58.609032902511;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);119;424835;True;54;0;66.787860854254;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);78;158912;True;32;0;38.4754205717359;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;33586;True;60;0;96.9247119004199;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);143;898664;True;36;0;32.8250447220449;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);192;764933;True;56;0;60.279804690373;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2198;True;29;0;27.2472689228046;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;65361;True;26;0;35.8096509051119;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;32845;True;183;0;817.485545135063;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;39082;True;154;0;90.4394749820359;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;8926;True;113;0;171.346437457164;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;63698;True;336;0;130.737138243726;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;234844;True;71;0;58.0706885763197;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;18053;True;115;0;71.3370057061866;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;147479;True;100;0;53.1040040967736;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);46;473199;True;95;0;32.2408050356875;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);48;344608;True;134;0;43.2765013617369;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;35750;True;171;0;1226.56415871831;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;9727;True;72;0;84.8166014714364;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);29;217997;True;196;0;40.6571166248641;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;164786;True;100;0;46.0243974110161;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);41;331160;True;97;0;59.1993953100202;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;33628;True;79;0;104.358469672955;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);82;703626;True;118;0;52.248201139554;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;11209;True;120;0;59.2194017534823;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;18077;True;210;0;207.014007809749;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;14664;True;136;0;165.171013922546;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;16124;True;94;0;163.803685335301;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);22;127779;True;248;0;159.233385050091;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);38;295943;True;130;0;34.9822402597338;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);18;48623;True;274;0;538.096328879204;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;21613;True;121;0;88.6309158858297;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);59;7381;True;74;0;44494.709282803;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);129;10258;True;118;0;168247.429144403;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);33;3639;True;72;0;119697.640054838;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);65;4684;True;85;0;237769.117162776;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);68;2459;True;98;0;1362714.56091908;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);243;4992;True;103;0;2596029.86713604;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);79;1908;True;92;0;2150528.64934335;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4471;False;-1;0;5485008.35003965;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;1492;True;43;0;63632.2597084372;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;1085;True;39;0;87429.4515289335;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;1109;True;48;0;190258.642753246;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;1500;True;52;0;274042.022127449;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;1408;True;50;0;116341.904307456;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;1168;True;46;0;163034.09158177;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;2064;True;63;0;152726.411902241;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;1538;True;56;0;486316.459073674;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;1630;True;67;0;391630.015113892;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;1558;True;56;0;297236.003907463;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;1407;True;62;0;431642.557844034;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;2318;True;76;0;445236.110225846;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);46;2627;True;82;0;826089.598375122;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;1328;True;69;0;455987.234915324;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;1873;True;60;0;253722.392025612;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);21;1373;True;62;0;668221.431812516;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);37;2200;True;84;0;762160.856702312;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);112;3697;True;113;0;1490531.42415573;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;1613;True;79;0;754815.726441763;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);35;1911;True;81;0;865191.573266996;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);80;2604;True;86;0;1583688.85407526;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;24889;True;203;0;236.104687889196;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;40709;True;213;0;265.574954108936;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;32885;True;195;0;263.571656586486;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);19;63756;True;243;0;297.131511749214;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);18;58004;True;253;0;308.840940053417;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;80256;True;255;0;349.489918847948;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);49;126461;True;301;0;383.397792073656;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;15960;True;127;0;135.343448205938;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;16573;True;108;0;89.623098425784;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;10008;True;91;0;106.998872311659;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;13087;True;123;0;118.488591736687;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;18790;True;112;0;107.566048835758;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2812;True;45;0;46.7810144906415;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3326;True;54;0;50.0464193897943;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1904;True;44;0;31.8986771503729;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3236;True;57;0;50.7384912517025;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;4189;True;51;0;44.9914683413528;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1384;True;35;0;36.6310057273372;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;57007;False;-1;108.810282172267;188.030871458774;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);39;40702;True;66;0;189.956239766164;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;130075;False;-1;992.474008463544;1300.53131327555;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3670;False;-1;2135.46918708918;2846.68951500141;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;855;False;-1;3788.96474644251;4706.23729588149;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4703;False;-1;7112.9246350315;9580.29990292246;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7701;False;-1;1061.48151291231;1449.2773915056;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;13346;True;43;0;31.213627329226;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1233;True;44;0;42.9584757470523;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2121;True;48;0;49.7470349582398;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;10027;True;88;0;92.7324160628033;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7807;True;96;0;78.5962183833466;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;6895;True;94;0;84.3951126434097;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;10750;True;99;0;80.3837273131806;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7295;True;98;0;86.4018103272768;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9449;True;94;0;84.4358563112463;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7614;True;97;0;81.0522467059654;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9288;True;96;0;91.8891016367404;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7948;True;107;0;90.6458620684201;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7529;True;104;0;100.143313756827;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9377;True;108;0;83.1294504244787;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9600;True;102;0;91.1350905738286;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9276;True;109;0;105.039821376543;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7243;True;102;0;93.0138548601778;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;11888;True;107;0;97.483660723748;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;12187;True;117;0;102.921969096628;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;10442;True;114;0;87.8249376830708;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;11932;True;117;0;95.050529951446;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;11078;True;108;0;95.4967606394037;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;12080;True;109;0;100.099466222035;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;12392;True;121;0;96.9810179344829;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;13401;True;114;0;102.570202364447;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;12737;True;120;0;102.751584586335;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;13631;True;123;0;109.975322080528;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;11118;True;113;0;103.795291702605;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;11536;True;117;0;110.861907325951;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;11613;True;119;0;107.456909283185;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;14669;True;120;0;98.753765946366;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;13823;True;125;0;102.72225424296;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;12816;True;125;0;100.200018764058;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;19373;True;128;0;120.345724574476;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;10251;True;118;0;104.208467077617;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1091;True;36;0;43.5882191896168;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;777;True;30;0;32.6022549810425;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;647;True;34;0;32.8714074725822;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;852;True;36;0;31.7823253362372;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;659;True;28;0;35.7021014010952;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;905;True;36;0;33.0560479534489;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1083;True;38;0;38.6561075893498;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;717;True;32;0;33.7378705087441;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;806;True;36;0;39.8128713864442;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1019;True;34;0;40.49355440263;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1046;True;40;0;33.0096412710609;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1077;True;40;0;41.4927388038617;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1034;True;42;0;37.4639148035137;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1079;True;40;0;41.2299607834054;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1074;True;38;0;36.0198891946111;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;982;True;36;0;38.345242033999;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2415;True;46;0;40.3471464063651;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1361;True;48;0;42.2035103347278;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;940;True;34;0;40.7018808720393;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1197;True;40;0;41.9938875819055;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;6737;True;64;0;39.959468684609;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);127;31954;True;73;0;42.4807373123789;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);25;9202;True;60;0;37.8856470898824;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;9841;True;58;0;34.182216284781;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);83;1595;True;101;0;5019709.73988877;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);108;1124;True;111;0;128151128.986944;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);633;16052;True;103;0;699496.778754921;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;23967;False;-1;0;13.8001649380187;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;27578;False;-1;0;10.4368149284846;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;17974;False;-1;0;211210.970791618;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;12866;False;-1;0;14.9103393575016;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;17187;False;-1;0;1304271.92647705;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7786;False;-1;0;8577168.59755335;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;8301;False;-1;0;86816851.4593529;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5627;False;-1;0;80573027.9102778;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7453;False;-1;0;52496910.6507311;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3748;False;-1;0;30448856.1727298;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4810;False;-1;0;63771615.9560719;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5508;False;-1;0;16030081.0186183;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;720257;False;-1;123.37291417428;201.558528664422;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);178;175876;True;62;0;91.5897555976388;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;406058;False;-1;217.006298843774;320.980953077909;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;326642;False;-1;257.608001194898;411.992138623304;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;7683;True;96;0;491.213055184996;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;291241;False;-1;151.200888528675;353.67450782834;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;402040;False;-1;180.60289786365;279.493588956018;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;344409;False;-1;218.401759998501;321.771035603421;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;171937;False;-1;539.302597137309;848.137561416919;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;245018;False;-1;274.431867296264;467.88048895973;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;134747;False;-1;360.033026229512;680.571118585682;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;128797;False;-1;662.204349210302;1026.29522763905;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;144521;False;-1;690.170571182561;1111.41992969188;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;87002;False;-1;502.623284842085;1071.88162442466;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;84105;False;-1;533.413253472007;1148.19635276089;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;69706;False;-1;852.732833438056;1377.66889282086;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;94643;False;-1;1354.43741787767;1986.32833722837;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;59288;False;-1;1225.06184883968;2213.95686521263;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);68;193411;True;66;0;74.6802752099717;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;49989;True;58;0;60.8855101329081;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;8851;True;52;0;69.9269868720601;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);42;101018;True;35;0;33.5564448756575;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);23;52532;True;63;0;87.7708191214108;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);93;656317;True;38;0;30.5327781809968;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);233;849547;True;58;0;68.3207210151808;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;16785;True;31;0;28.6195059900185;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;121766;True;41;0;39.6785502523856;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;44648;True;235;0;116.479814108617;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;8574;True;134;0;101.151124513011;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;38748;True;118;0;104.235573591355;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;43756;True;316;0;150.892199917926;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);39;311652;True;97;0;58.3574008356053;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;18113;True;110;0;113.53795528716;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;79710;True;95;0;48.7721326424058;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);48;438817;True;125;0;42.1625252690561;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);60;395665;True;108;0;44.4238195813571;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);23;64891;True;258;0;323.641508577699;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;19455;True;67;0;94.9182900782101;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);175;860815;True;187;0;69.9975224853047;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;172048;True;97;0;45.5680538346497;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);30;249777;True;90;0;55.9595435269379;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;26073;True;88;0;89.8254199143002;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);53;463864;True;186;0;42.3493972801767;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;26540;True;125;0;105.473985144087;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;70189;True;267;0;178.826905434584;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;32610;True;146;0;137.820157408528;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;13338;True;97;0;146.773735968071;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;74888;True;269;0;156.500456120645;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);86;555786;True;138;0;51.4744938058184;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);70;228691;True;369;0;135.561021803205;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;34544;True;113;0;106.697717561221;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);34;5675;True;49;0;39944.5337147783;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);73;8328;True;153;0;134319.123516073;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);51;4532;True;103;0;172825.289094624;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;32799;False;-1;0;335310.791947845;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);68;2673;True;94;0;1290544.59381348;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);88;2939;True;93;0;1735880.43990912;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);144;3708;True;119;0;2008102.99695587;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);525;4680;True;145;0;4052635.43337684;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;1466;True;48;0;64151.8815131425;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;1528;True;47;0;109018.748131421;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;1787;True;56;0;265885.36182608;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;1393;True;60;0;237899.941355599;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;1489;True;45;0;160805.257413408;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;1103;True;40;0;181595.693503022;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;1535;True;57;0;221364.916000664;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;1757;True;65;0;344008.201318247;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;1516;True;59;0;303076.907302496;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;1807;True;57;0;311002.166006174;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;1638;True;62;0;362896.591035978;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);29;2822;True;87;0;463034.608279902;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);34;1778;True;72;0;919793.974718914;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;1395;True;59;0;594034.335039606;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;1831;True;66;0;311661.017974422;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);43;2125;True;74;0;1095821.24665876;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);72;4825;True;112;0;740488.37669558;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);95;4053;True;108;0;1306687.83169199;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);42;1958;True;85;0;1109122.56892966;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);71;3051;True;84;0;1182843.2274636;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);90;2933;True;87;0;1691590.25312645;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;43991;True;189;0;241.506181422751;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;51875;True;193;0;266.077568484908;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;70952;True;223;0;266.203767633061;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;68036;True;237;0;262.580296580158;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);59;180944;True;281;0;330.184657100468;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);78;214799;True;275;0;346.505970881177;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);66;165227;True;273;0;375.528312385436;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;25529;True;115;0;107.012569919471;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);27;47684;True;114;0;90.5090092731503;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;31459;True;107;0;90.1338161240007;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;27016;True;125;0;104.395001597744;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;26502;True;134;0;140.246046680826;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;16146;True;49;0;44.8364391435337;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;20521;True;52;0;48.1532831900691;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2346;True;40;0;32.0095438841552;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;11218;True;56;0;50.7946423120627;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;5496;True;46;0;39.6664243182136;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;3542;True;36;0;38.4648201792872;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;59903;False;-1;95.6468098925645;201.622407815692;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);40;47626;True;66;0;255.284848688069;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;155291;False;-1;775.557464007734;1259.73332720994;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3600;False;-1;1865.02859115267;2733.68282067091;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);901;841;False;-1;3340.39408703875;4798.88606057866;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4633;False;-1;6371.65450083681;9543.59314496747;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7591;False;-1;983.431896210756;1495.92364279256;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;34341;True;43;0;32.7888215841721;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1311;True;42;0;42.4837507101903;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2142;True;54;0;47.3044752485265;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;10503;True;94;0;93.558285402582;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;13110;True;94;0;75.4648456986069;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11275;True;105;0;70.756556270946;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;15470;True;107;0;90.171284190653;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11020;True;100;0;79.9112159358689;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11770;True;101;0;95.2676884175461;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;8386;True;99;0;80.8260553095009;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;17176;True;111;0;89.9750100488754;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;10133;True;102;0;91.7916589853749;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;8344;True;110;0;89.4965861133514;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;13196;True;104;0;85.7749326288395;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;26252;True;108;0;95.2628188206323;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;16973;True;120;0;92.8049110550891;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;17061;True;119;0;83.9550535443781;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;16114;True;103;0;89.1121242634045;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;16400;True;119;0;87.3377278350442;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;15361;True;109;0;92.8658216344033;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;14177;True;111;0;99.9393880766539;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;11505;True;107;0;98.4632666018675;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;14857;True;116;0;97.2131132745491;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;13859;True;120;0;104.839053477913;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;14357;True;109;0;104.951911820879;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;21924;True;120;0;88.3310038850637;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;20327;True;122;0;103.112928377987;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;20107;True;126;0;93.8165745694698;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;19100;True;123;0;113.533590807476;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;20365;True;123;0;86.8238233494881;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;16747;True;120;0;100.980694893334;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;16985;True;127;0;95.3191881744363;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;16732;True;123;0;100.01763305704;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);24;26744;True;126;0;106.447602767118;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);21;24376;True;128;0;106.541700301964;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1040;True;34;0;44.454694517251;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;982;True;32;0;31.5250757451409;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;657;True;34;0;34.3151839966805;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;659;True;32;0;31.7942967265867;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;599;True;30;0;35.3863831861562;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1370;True;34;0;31.9168777435139;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1134;True;40;0;37.1922784619531;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1197;True;34;0;44.2580276462827;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1190;True;33;0;41.8048518682921;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1273;True;36;0;41.3444527241798;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1705;True;38;0;33.5684212447402;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;792;True;34;0;37.7219664133583;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1049;True;40;0;33.7147131765307;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1089;True;38;0;39.4760406815535;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1463;True;37;0;38.6593051905857;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1341;True;42;0;35.123866967801;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1581;True;40;0;42.223084722843;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1647;True;46;0;41.0510158460224;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1106;True;37;0;41.4612840528979;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;949;True;38;0;36.9376941464491;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;7558;True;64;0;40.4017973295919;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);235;53966;True;73;0;47.5866563042926;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;9868;True;60;0;38.1376500169749;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;9223;True;58;0;34.1932342726738;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);102;2242;True;103;0;42.2600245191628;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);155;1691;True;111;0;221710911.316684;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);720;17709;True;101;0;703577.459350649;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;24887;False;-1;0;13.194154725707;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;30010;False;-1;0;9.89169041764808;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;19098;False;-1;0;7417311.25012909;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;10684;False;-1;0;14.2616134877829;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;17917;False;-1;0;2508222.03185208;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4579;False;-1;0;10973903.5374296;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7675;False;-1;0;120299197.784994;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4902;False;-1;0;49728503.6825968;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7403;False;-1;0;42796347.3400417;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3349;False;-1;0;32077815.3543978;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4258;False;-1;0;50588143.4460805;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4833;False;-1;0;28381224.8402397;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;719285;False;-1;106.095962089531;205.796736421339;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);162;162448;True;48;0;93.8421771003893;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);280;130517;True;92;0;290.322412997383;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;335630;False;-1;241.228025013966;456.54562281947;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);209;119661;True;76;0;391.085011841331;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;272529;False;-1;129.600714460016;296.686266232335;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);107;42761;True;137;0;401.486510133861;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;334883;False;-1;176.412244950241;326.374392711343;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;176840;False;-1;483.929618264888;888.324770536959;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;237753;False;-1;289.200726136566;524.902314591787;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;146798;False;-1;347.775053671456;639.566411691956;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;130126;False;-1;508.508623997359;972.176791692079;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;142294;False;-1;597.385319223155;1108.14609160913;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;81766;False;-1;619.399894921016;1243.91406873369;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;80603;False;-1;621.489528728039;1361.58176494885;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;66288;False;-1;960.027566088004;1891.64650495465;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;95783;False;-1;1102.81072253287;1922.55408496809;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;58864;False;-1;1076.04813816941;2277.9426673852;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);59;169998;True;62;0;78.6919337670484;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);46;214799;True;50;0;63.3845039440093;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);19;71900;True;66;0;72.0854375495216;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;63475;True;35;0;32.482561575602;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;84462;True;87;0;95.502256909873;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;186608;True;41;0;40.8634351774855;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;149954;True;63;0;60.4074878585609;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;7640;True;29;0;33.8096926660194;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;38813;True;37;0;38.0994883182145;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);32;212382;True;208;0;72.1885749621671;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;34383;True;127;0;126.740716862381;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;21204;True;99;0;124.041392514855;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;39322;True;294;0;202.59224806551;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);42;335356;True;93;0;59.5838666066143;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;11494;True;93;0;97.7114192112411;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;181939;True;111;0;50.7199655550677;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);147;1208241;True;115;0;40.5907610567977;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);138;792854;True;129;0;47.0243111162564;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;47692;True;289;0;502.455513367987;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;24455;True;85;0;59.7973691564545;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);326;1110500;True;301;0;94.7345399986321;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;100449;True;90;0;49.370088504231;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);46;355671;True;91;0;57.9373538774595;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;73377;True;86;0;86.5366364154779;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);90;770222;True;136;0;39.7805855883662;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;8832;True;109;0;95.1542737751835;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;73382;True;254;0;112.832627494369;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;19896;True;122;0;125.185295498721;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;87746;True;101;0;134.59929452116;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;109471;True;348;0;173.573705584497;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);97;647171;True;133;0;49.1359950593458;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);323;1179484;True;296;0;93.6670299520835;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;14325;True;142;0;109.243099716874;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);61;8339;True;90;0;43942.1712806065;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;2313;True;93;0;143673.476686436;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);41;4689;True;68;0;124196.534404223;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);138;9537;True;132;0;306851.656056004;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);133;3895;True;97;0;1883086.3997692;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);154;3865;True;93;0;2306946.62079461;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);418;6932;True;165;0;2801663.04556146;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4571;False;-1;0;5525952.81525143;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;2185;True;61;0;64486.9065958804;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;1700;True;44;0;121307.943198701;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1234;True;56;0;236749.069998038;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1299;True;48;0;207812.549174702;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1628;True;51;0;148669.657871927;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;1166;True;46;0;131675.404946542;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;1742;True;56;0;210654.844819407;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;2308;True;71;0;440621.227948407;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;1701;True;64;0;349062.434052968;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;1764;True;61;0;279990.321321864;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;2001;True;67;0;315482.195935701;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);29;2253;True;63;0;631596.739073643;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;2659;True;100;0;922517.744952806;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;2078;True;74;0;486494.945008108;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);19;1958;True;65;0;404923.715330816;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;2348;True;74;0;563381.468597655;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;2819;True;92;0;916860.880209631;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);134;4649;True;117;0;1517623.26848007;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);46;2066;True;80;0;1109257.23589576;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;2248;True;77;0;809374.373928442;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);112;3954;True;99;0;1495721.59726017;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);43;177961;True;183;0;263.08906307572;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;120145;True;213;0;275.688824406682;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);49;174470;True;207;0;262.071093986987;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);85;270760;True;235;0;283.320443240574;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);82;236137;True;219;0;337.291750529726;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);104;275867;True;247;0;323.424862755434;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);102;250588;True;267;0;352.849505832147;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);43;78171;True;125;0;106.100750208524;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;65374;True;113;0;83.2968199531413;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;22415;True;84;0;81.0784297819029;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;66647;True;119;0;96.5997296434602;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;20512;True;109;0;106.192556511407;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;44854;True;51;0;42.6921405158776;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;21735;True;55;0;52.0314827336354;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;10114;True;41;0;36.4516216001668;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;19520;True;55;0;43.8573576186607;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;24512;True;49;0;48.7027437195605;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;8762;True;39;0;45.4412077473618;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;60304;False;-1;113.450357103651;219.387062634332;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);43;52858;True;66;0;127.545628063428;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;131796;False;-1;705.634132352487;1243.7434993092;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3704;False;-1;1608.95447067458;2841.33234893559;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);901;857;False;-1;2877.03038130208;4797.94008142243;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4565;False;-1;5596.14518217693;9763.50095488755;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7350;False;-1;842.622474794193;1456.28539020913;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;69172;True;39;0;31.3653925478565;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;2035;True;47;0;44.9506809787705;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;5462;True;52;0;46.5247236325853;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;20535;True;99;0;69.8661946158199;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;15620;True;93;0;89.41181567351;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;14077;True;97;0;87.7637411847002;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;9759;True;99;0;75.3781248968221;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;16332;True;101;0;79.0161366520655;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;17110;True;104;0;83.0453317009203;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;11800;True;100;0;81.7672641222284;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;11117;True;99;0;77.1339520501134;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;14279;True;110;0;82.9148616205499;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;12790;True;107;0;83.7160175205393;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;17446;True;104;0;82.7006234880632;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;29653;True;113;0;69.9220286089575;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16281;True;116;0;82.6988241000299;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;18015;True;111;0;97.7186557877388;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;22175;True;103;0;93.6959462614574;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;29541;True;116;0;91.3280482064041;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;13301;True;116;0;79.4263485198562;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;27362;True;121;0;86.7060239658607;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;22225;True;116;0;96.752710067756;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;25817;True;128;0;87.3665862864631;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;26723;True;122;0;100.326924499852;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;20199;True;118;0;103.89246889548;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;21558;True;114;0;94.8812311176596;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;21041;True;123;0;85.855237397613;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);40;44592;True;128;0;81.9948601504294;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);44;48261;True;133;0;95.9703845786421;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;30977;True;120;0;95.3846909633115;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;17706;True;119;0;115.220652454453;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;37117;True;119;0;84.5583109984857;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);41;41752;True;124;0;85.7757895393221;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);37;38474;True;130;0;94.6005190717305;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);39;40566;True;134;0;88.7441831496876;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;883;True;38;0;39.4434573170518;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;797;True;27;0;35.1858126633486;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;909;True;32;0;39.4904152999553;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;752;True;32;0;34.1393935643067;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1158;True;32;0;38.4341194236143;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1120;True;34;0;39.6690350052795;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1699;True;38;0;42.9047551357796;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;870;True;36;0;36.5750436084429;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1221;True;34;0;39.0245808321121;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1068;True;40;0;38.7235218785191;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1324;True;36;0;37.5666741797267;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1214;True;34;0;43.4483412842904;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1249;True;42;0;35.9495515221632;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1150;True;38;0;35.2527897315519;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1266;True;36;0;43.0878595697832;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1660;True;38;0;40.0166116543467;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1226;True;44;0;39.8919411433627;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1807;True;47;0;41.2949890479061;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1021;True;38;0;41.6660962679281;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1614;True;43;0;45.0127337180237;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);16;6264;True;62;-0.998485272749553;39.0744208197879;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);132;33896;True;71;-0.999637748114596;45.4840279888054;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;9062;True;60;-0.997854833490148;38.7633997510358;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);25;8859;True;58;-0.997508005237909;32.0503581128895;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);67;1203;True;101;-0.999528625048478;5830331.63873166;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);106;1140;True;109;-0.997816889545795;36674345.0809631;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);568;16897;True;101;-0.999974487349379;513273.768719494;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16310;False;-1;-0.999889176338859;266334.541574483;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;48284;False;-1;-0.999923313967848;1.43805050198023;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16795;False;-1;-0.998881432227269;257570.271115527;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;14097;False;-1;-0.999701511114697;12.8785690659742;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;20545;False;-1;-0.999957175925354;317362.516568497;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8459;False;-1;-0.998773520811821;1286552.04557186;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8676;False;-1;-0.999764205887804;38416551.2160105;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;5222;False;-1;-0.999869832768976;82927790.4603212;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7258;False;-1;-0.999460022896277;34412890.703745;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3727;False;-1;-0.999879639595691;9372565.15435699;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4432;False;-1;-0.999011250212328;66997861.4612552;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7148;False;-1;-0.999690489843344;13127931.9368576;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;581085;False;-1;233.035017491335;248.446423681692;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);114;142309;True;29;0.665394924425238;132.010978428524;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;357518;False;-1;519.000010034069;524.819032114487;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;267723;False;-1;359.000027351081;438.240767166418;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;389143;False;-1;535.000004538335;539.503864627336;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;247284;False;-1;317.000001173466;342.446364914897;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;380784;False;-1;279.000110197812;355.118216052041;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;335920;False;-1;313.000003236346;364.652970070704;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;173456;False;-1;725.000013157725;737.189103997284;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;201524;False;-1;481.000092893839;593.850273913859;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;135542;False;-1;651.000031533651;676.388605464276;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;112063;False;-1;1081.00031088293;1152.53129679629;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;146162;False;-1;1047.2028006875;1184.3628315718;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;79610;False;-1;1067.00240368769;1331.77346084903;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;80387;False;-1;851.000062380917;959.016453670445;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;73607;False;-1;925.00005721394;1089.00363061623;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;94165;False;-1;1995.00453394186;2236.76204466229;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;54585;False;-1;1705.00020250585;2082.28503960309;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;9917;True;48;-0.042542624772779;68.8942321024767;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;80534;True;36;-0.722188384142792;57.4136534587274;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;21105;True;48;0.308808250962202;65.7479919536992;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;122000;True;29;-0.6556996841243;48.9934591667669;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);33;82961;True;41;-0.471619420438828;125.466398834244;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);97;515696;True;30;-0.617156293996217;33.443178528228;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);156;515049;True;50;0.632144194856353;74.6142853175412;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1759;True;27;-0.00178375421174981;21.6465557230613;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;28301;True;26;0.774052891775059;41.5755702744099;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);86;247877;True;204;0.0215844349104839;1620.93970312327;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;25590;True;144;0.954997184665407;151.954814753067;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;9418;True;97;-0.708381835235461;140.887261489386;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;26170;True;207;-0.756398637665621;138.337388612024;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);40;317258;True;76;-0.307103696887895;59.6154509034267;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;7532;True;106;-0.358107432424141;54.8664763306414;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;114077;True;88;-0.259139964943351;52.9075424490386;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);58;556516;True;93;-0.510301087754919;34.818222550418;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);72;464468;True;123;0.214063721342973;43.27544622862;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;69298;True;204;-0.828673176387638;764.254935301733;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;15879;True;77;-0.538445281581229;82.5323137671935;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);41;239824;True;177;0.0153611931090063;62.2342805791426;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;108969;True;89;-0.244901409021067;54.9351484656262;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);40;318032;True;95;-0.773147293260855;59.4029776074911;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;12786;True;75;0.761080270521846;82.383368644421;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);47;461804;True;88;-0.437115244305281;39.0025737794953;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;8025;True;106;-0.525845983776192;53.404242948628;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);85;250055;True;200;-0.125178075919476;1594.76475434006;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;10227;True;113;-0.164550742676738;195.194246623926;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;11076;True;98;-0.493078187803309;152.5297576852;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;24123;True;207;-0.0271591623440195;137.399452283143;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);68;467334;True;123;-0.353145149235216;42.814969138146;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);27;70723;True;202;-0.8063676496066;751.419404543824;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;11836;True;105;0.7910183359827;76.9042878314135;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);15;2178;True;43;-0.998908733948557;38172.0903000862;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);14;2210;True;70;-0.852928453987897;118492.376662413;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);111;9574;True;78;-0.904279523484539;145180.810685461;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;3242;True;100;-0.978041442100909;202849.499858583;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;7101;True;94;-0.977407773014814;441864.812221513;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);115;5074;True;85;0.0785466195449915;1225325.69635896;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);165;3875;True;81;-0.997510655781958;2529106.35963631;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);259;3895;True;117;-0.982017339198858;2675278.532555;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;2197;True;42;0.879551459979057;96031.2458227505;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1370;True;41;-0.472056955784586;116123.91578853;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;1882;True;47;0.231510710544656;108338.639234164;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1240;True;42;0.189518294851071;148246.035066858;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;10429;True;47;0.383153421517067;55556.287275037;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;902;True;42;-0.574698874528845;173120.203915186;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;1783;True;51;-0.963585881499381;172447.055556567;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;5208;True;52;-0.750157257425672;91355.2893771278;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1284;True;51;-0.217015038811143;273537.152055362;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;1461;True;44;0.29360513169952;175600.823108242;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1188;True;48;-0.0626948257268848;298422.518481985;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;2339;True;63;-0.310787624358566;356440.674671161;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);46;2157;True;70;-0.98741571418355;1063621.26297266;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;11157;True;75;-0.989947328339306;93322.1775428729;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);24;1914;True;59;-0.348553110542033;584561.750126543;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);55;2514;True;59;-0.811113404022117;1128623.83055735;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;2310;True;80;0.461311646486312;822188.633840416;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);93;12013;True;97;-0.783946327764516;315616.686547061;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);72;6763;True;79;-0.812211567448551;426527.653579333;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);50;2239;True;67;-0.986449345008679;1169372.78459519;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);121;4180;True;89;-0.990505375894953;1454572.47009416;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;9411;True;117;0.220020611407245;244.051692669043;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;10615;True;125;0.519236667789163;256.806623909018;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;11655;True;133;-0.159875291008444;279.136081896134;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;13732;True;141;-0.1797039803023;291.045843810671;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;16633;True;149;0.909482193137278;319.393398051858;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;18392;True;157;0.208617443781633;327.338339885702;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;21615;True;165;-0.820907251825979;355.079765639297;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5141;True;86;-0.852532441659147;103.770648104206;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4874;True;79;0.160880336147212;88.6435986744728;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3553;True;65;-0.0965001048038249;73.6122885866492;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;4221;True;82;-0.500737052178354;104.810931105464;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;4020;True;74;0.00633168919306804;102.318067234784;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1066;True;42;-0.809057399541632;34.4568314842753;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1250;True;53;0.191987056840205;41.4025204473254;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;821;True;36;-0.0382154123104249;31.6648962192596;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1561;True;56;-0.547126333018358;40.553960740342;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;937;True;38;-0.0639340388886324;35.20589466978;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;797;True;35;0.455108944072905;31.289880409454;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);280;70215;True;54;-0.642021136191683;30.3837451414232;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;23283;True;41;-0.603877584265488;166.450697933899;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;18297;True;53;-0.720524779390788;760.762040727974;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3734;False;-1;2567.00061718095;2703.00129491684;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);901;859;False;-1;4686.56201366967;4762.87718431049;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4076;False;-1;8661.46554832089;9531.20235822165;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;6184;False;-1;1283.49824246415;1472.8669258676;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;9512;True;39;-0.733788573059155;22.1268058699685;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;987;True;41;0.229376962980897;38.6428345146175;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1327;True;46;-0.17527406903695;42.8688661803763;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4665;True;86;-0.9574258951272;79.1360919748631;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4888;True;81;0.381639929200355;75.6463423083036;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4520;True;91;-0.451472963882365;82.6840804595228;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4621;True;89;0.0110348877548403;80.0178380462517;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4716;True;87;0.727020388341984;78.5060680217643;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5234;True;89;0.725187470077159;84.0189525971953;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5033;True;92;0.112414341006621;79.9396777285565;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5221;True;92;0.248684871591947;81.9481595610351;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5195;True;93;0.618724440046923;83.9912197622453;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4971;True;95;0.934103588542949;89.6972470059026;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5022;True;95;0.119753974079971;85.1725720859342;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5535;True;96;0.986577739001521;82.7657291746709;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5756;True;103;0.909176671835211;90.5518689987415;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5762;True;95;-0.920223525688156;83.9072548624985;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5342;True;91;-0.135906366229014;89.2368843918789;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6848;True;101;0.36587831907248;92.2980260097154;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6200;True;103;0.31908769966992;87.8231446173475;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5903;True;98;0.146022962008614;92.3931842868561;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5840;True;97;0.565803534149101;89.244327480708;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7036;True;109;0.0856574182797492;93.969644134636;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6607;True;108;0.59373203739232;95.6505717934582;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;6721;True;98;-0.466087831866968;91.3666785486518;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6323;True;102;-0.61428101529101;95.4897874177651;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7470;True;107;0.0441775745917938;96.9372777853947;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7511;True;104;0.724656497000091;93.6732984436577;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7068;True;108;-0.362893533596254;100.875472697841;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;6735;True;107;0.661791208973989;97.7927092688835;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;6838;True;111;0.465779719625497;99.3723907483642;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7270;True;106;0.71974319299671;99.6713508245005;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;7850;True;106;0.319393194894955;99.3709728240824;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7553;True;107;-0.522687161119043;102.354672368241;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7433;True;109;-0.884058782776845;104.00731951463;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;871;True;32;0.202447639406867;39.1755044259828;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;552;True;30;0.364367257507689;27.0520962085568;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;789;True;36;0.900893631345077;36.1271856167496;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;756;True;36;0.956827420721216;28.3323916952114;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;587;True;30;-0.609997905609197;32.258492089955;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;751;True;34;-0.275815146637994;32.2626278163416;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;862;True;40;-0.665552554496356;32.6556782274688;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;771;True;36;-0.325627711287526;35.7437744474424;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;723;True;34;-0.881689803619725;34.2502245473043;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;819;True;34;-0.237945217284348;37.1398366197204;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;874;True;38;-0.45899374944111;30.0954381458333;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;849;True;36;-0.613000373175834;38.8502197678868;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1177;True;42;-0.768868967783111;41.9791064028922;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1021;True;38;0.250493534491627;33.6703284843018;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1250;True;38;0.937816689693284;34.4335246138473;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1311;True;42;-0.844601991514024;32.0564437998424;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1781;True;42;-0.659793008891769;35.1601488398423;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1480;True;43;0.446924180466181;42.9143186753079;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1352;True;40;0.757894371523473;40.464413052095;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1190;True;40;-0.38081749686078;29.1558110487739;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);16;6325;True;62;-1.99981676228336;38.9960703863417;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);134;35151;True;71;-1.9996188208459;46.1270102518379;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;9251;True;60;-1.99858917854661;39.0729027156903;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;8878;True;58;-1.99896520003628;31.6110931333173;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);69;1244;True;101;-1.99753521568958;5621746.20015501;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);106;1165;True;109;-1.99134262464537;27837802.2658735;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);563;17063;True;102;-1.99993498064575;508473.568018762;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;22329;False;-1;-1.99968510679886;8.99705869052502;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;47570;False;-1;-1.99978590197851;1.89259497316242;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;16970;False;-1;-1.99973550625133;255289.732480196;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;15193;False;-1;-1.99991591460999;12.3276933823829;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;20510;False;-1;-1.99999843351543;319883.761613808;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;9099;False;-1;-1.99901631846978;1196917.96580654;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;8672;False;-1;-1.9998963437974;38681887.7296919;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5100;False;-1;-1.99853733926943;88149620.0165231;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7063;False;-1;-1.99997221678494;32514196.0805997;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3690;False;-1;-1.99847518838871;9470734.18833413;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4365;False;-1;-1.9992026574906;66432974.1927636;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7206;False;-1;-1.99948494695103;13009562.6361541;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;671311;False;-1;174.011907266458;210.879069984823;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);127;146406;True;29;-0.535557166922631;134.365433962818;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;355429;False;-1;518.000147325918;526.134752266155;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;268488;False;-1;358.000012084842;435.06027534548;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;437873;False;-1;534.000029295683;538.97412106336;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;245938;False;-1;348.000014813617;392.707845604072;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;375105;False;-1;278.000247050077;344.0339347521;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;342173;False;-1;312.000004185364;338.193259081855;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;171544;False;-1;860.000007173046;872.743032302653;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;199020;False;-1;576.000741338358;678.052587333906;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;140695;False;-1;650.000059323385;681.271294069585;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;115543;False;-1;1092.01213268005;1138.86927849033;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;148857;False;-1;1048.00320881419;1184.16145250725;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;80105;False;-1;1274.00003922544;1364.02400106203;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;83570;False;-1;904.001845557244;1159.31589250641;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;73241;False;-1;1150.00089444593;1307.96185400684;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;95594;False;-1;1994.01462069527;2235.49021800476;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;54490;False;-1;1704.0042995587;2152.48201713047;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;9060;True;48;-1.97648558764555;69.078391500214;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);35;153315;True;46;-1.91067691888226;57.3872193434196;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);59;194930;True;58;-0.950668056938177;65.4218976176429;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;186361;True;27;-1.69380409628796;39.1437858502508;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);81;174628;True;64;-0.418538310759951;116.517764197641;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);75;405783;True;33;-0.357975750396948;33.5759321046672;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);167;608600;True;50;-1.35300620615157;65.8837185248522;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;5038;True;30;-1.6660164425457;20.734592578072;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;40351;True;34;-1.36482360184417;41.7549489640983;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;250436;True;195;0.0344984270792912;1590.23226524292;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;14121;True;115;0.495160174786653;165.188627911679;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;18257;True;109;-1.95997867545112;137.785500452108;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;26217;True;209;0.0379747618166613;138.477855186785;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);38;316679;True;76;0.0470707845161999;59.5445815813018;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;5658;True;100;0.00104677490938765;60.7107791404772;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);10;100770;True;88;-1.61531789396671;55.1735053565825;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);59;576912;True;88;0.00034053809956669;37.9183280801085;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);101;635354;True;129;-0.756426605748211;44.6306603126094;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);33;84338;True;210;0.373729020531163;641.961128898761;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;12791;True;75;0.143717112086582;80.1584941304588;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);61;361879;True;181;-1.20199932120834;60.2309191323727;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;139802;True;92;-1.52889000788745;49.8116580268299;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);38;302263;True;76;-1.35117883763797;59.0454489853735;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;11592;True;77;-1.05686664723645;77.0540002905051;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);38;377028;True;88;-0.378178526823492;38.7008013132425;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;5139;True;101;0.195648998113186;62.8877860174834;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;246332;True;195;-0.147755823166927;1602.94933921341;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;17106;True;128;-0.468259294735389;154.235310998708;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;14043;True;98;0.30705497055643;126.503384275049;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;23035;True;201;0.409267557975495;142.772541935121;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);12;103325;True;112;0.0389204118582049;34.3252144435052;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);28;76596;True;201;-1.25259177351957;689.986912255779;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;7536;True;95;-0.0971626555999567;86.0949603416371;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;2160;True;43;-1.99297254345984;38413.8722565881;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;2214;True;70;-1.75068214896632;118561.05997164;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);95;7348;True;66;-1.95228766275211;163382.954539037;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);39;3039;True;93;-1.97040991297476;213295.477155642;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);77;7109;True;95;-1.98060325532248;441554.132561776;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);120;5074;True;85;-0.303348180979187;1225325.73243379;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);176;3910;True;83;-1.95897611042437;2502828.35111712;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);257;3901;True;118;-1.95448516307142;2655572.13059542;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;2166;True;41;-1.93833103773106;101396.832544298;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;1370;True;41;0.337502741412028;116123.939919468;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;1882;True;47;0.423779076162623;108338.585204788;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;1240;True;42;-1.13733867329421;148246.296138335;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);28;10267;True;47;1.37195615068635;55969.9978183129;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;895;True;42;1.15145736334448;174402.982460171;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;1649;True;52;-1.596266284397;170691.021841403;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;5209;True;52;-1.57681558820271;91516.9646320455;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);10;1540;True;55;0.134595265674682;227514.445844731;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;1461;True;44;-0.826517508750091;175600.737153868;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1188;True;48;0.961487680190004;298422.553091592;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);23;2435;True;70;-1.92460568245715;404342.714370902;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);48;2157;True;70;-1.9732724577064;1062861.71239662;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;11153;True;75;1.08800956378133;93546.2015996596;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);24;1914;True;59;-1.96658304518395;584561.682983942;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);56;2514;True;59;0.15093470185573;1128623.85884426;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);46;2762;True;77;-0.992477919437214;798006.061903634;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);72;2773;True;88;-1.33364039814735;1349915.98335082;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);60;2431;True;72;-1.95604478193263;1193015.06946498;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);53;2275;True;67;-1.96152197940346;1158226.23740236;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);122;4180;True;88;-1.97953227347673;1454292.61306087;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;9207;True;117;0.212293177941951;227.501710115584;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;11541;True;125;0.217576006528724;259.078496332702;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;11588;True;139;0.13985761820332;264.919483100433;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;13836;True;141;-0.394407347959656;296.76747522385;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;16239;True;149;-1.40578475753115;319.512932576962;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;16739;True;157;1.1887400006823;315.553263326212;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;21360;True;169;0.777967653599553;347.526611054343;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4934;True;90;-0.384505254395541;93.2513547467782;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;3844;True;80;-1.47660503698355;92.5328656806985;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;3667;True;72;-0.989069701632983;75.6046162059447;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5267;True;96;-1.28035436909662;100.954937488429;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4192;True;77;-0.181286933916289;102.481706892762;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1292;True;46;-1.00562204933056;30.6809225338264;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1155;True;51;-1.56214098984475;40.5175597988967;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1010;True;44;-1.56949347796361;28.643002481212;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1232;True;50;-1.3267855883235;43.3240901227244;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1083;True;44;-1.87249268957995;33.6277054614006;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;814;True;33;-0.731367609804202;25.929989774644;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);148;16680;True;53;-1.12223888333991;115.258491577834;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;7953;True;43;-0.596214372011001;167.146144596248;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);87;22500;True;62;-1.16538520304737;701.198298208441;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3710;False;-1;2566.23955876019;2703.61682092509;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);901;869;False;-1;4685.02939882364;4763.12666794438;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4705;False;-1;8639.21263108086;9444.30540842226;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7759;False;-1;1258.21527368027;1443.92298513475;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;12272;True;45;-0.58316825264281;17.2516056961399;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;955;True;42;-1.59914811681916;39.5697383317988;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1734;True;54;-1.93447998535562;43.0920243988438;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4581;True;89;-0.353190097190994;77.7502143024757;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4676;True;89;1.91899156194133;76.4497724553395;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4542;True;92;-1.40577425407515;84.7016639314551;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5043;True;94;0.326664152707282;80.4533713398719;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4679;True;92;-1.08855620170411;79.554044292079;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4851;True;93;1.88290149247409;80.1693890913316;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4968;True;96;-1.77873084311314;81.6688446524232;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5154;True;92;-0.110186011581768;82.2347092102341;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5343;True;98;-1.52076766617632;82.4927960147926;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4995;True;96;0.533282655539588;87.7415240219828;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5369;True;100;-0.923635476698929;88.7749104646729;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5665;True;97;-0.664841664333288;84.6731362290443;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5337;True;99;-0.211266738460989;92.3037097454812;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5834;True;101;0.0215826053272852;86.8900492875912;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5897;True;99;-1.42827241654893;85.8445567102285;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6268;True;106;0.248423585783887;92.9778403508589;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6298;True;102;0.122760144119505;86.8336046964991;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6046;True;104;-1.57931251059254;96.7130509706847;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6105;True;104;-0.058911330094054;88.8985458103415;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6336;True;109;-0.135944844286863;98.0672292650239;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6489;True;110;0.38855169917855;96.9447063772659;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6682;True;103;0.527532751917621;90.2391314756947;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6383;True;102;-0.090692791198703;95.4523973092403;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6923;True;113;-1.49115196032969;98.3004956067413;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7794;True;112;0.545550661415584;87.9074167840441;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6903;True;113;-1.6010919770231;100.25010287673;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6902;True;113;-0.267058988226139;99.5617326367543;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6880;True;116;-0.0215885518219268;98.6742433117226;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7550;True;114;-0.818005846262912;102.822337246879;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;8153;True;119;-0.0443839030546993;96.1079560506231;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7641;True;112;-0.214143489587187;97.1846508947328;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7505;True;112;0.355956449339146;103.610773559517;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;719;True;36;-0.378899582838127;36.9407156027205;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;535;True;30;1.80734581211924;28.5273804361927;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;760;True;34;-0.134036595995555;37.8004567456176;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;730;True;38;-1.32435851326415;28.0189716001077;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;592;True;30;0.306556955122648;32.3331870020948;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;865;True;32;0.131602372104117;33.1997368458223;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;834;True;36;-0.99671695334684;36.8639210311917;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;732;True;36;0.0265566622962043;35.8721095641073;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;734;True;34;1.97298440708452;35.0767504297188;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;909;True;34;1.93201469626837;37.6017271756756;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;888;True;38;0.420317447008713;34.993730271349;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;795;True;36;1.92346387166691;37.5468300836257;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;951;True;40;0.444565626068304;38.5822936779956;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1075;True;40;-1.93375933167234;31.0701153250286;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1111;True;40;0.0929629225716753;32.4794582253183;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1095;True;40;1.60755207930112;34.0703521189879;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1342;True;40;-0.728048709560208;42.9015451221593;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1307;True;45;1.13604601339253;40.6814967784024;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1489;True;42;0.749561719945428;43.4754943491093;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1138;True;40;0.334796859107351;32.5553463424612;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;6576;True;62;-2.99894104991059;39.1238920897108;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);143;35541;True;71;-2.99870323575973;45.5249009303424;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;9153;True;60;-2.99766021128635;39.4713600580383;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);28;9505;True;58;-2.99909060820895;34.225860357573;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);68;1256;True;101;-2.96432582659848;7430800.34646436;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);105;1136;True;109;-2.96472771371004;36849151.2040981;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);604;17078;True;101;-2.99990718439217;507662.5632671;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;16018;False;-1;-2.99881308339481;271279.840768973;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;45284;False;-1;-2.99950708541996;3.19264404432744;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;16788;False;-1;-2.99950934853382;257755.550576718;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;12911;False;-1;-2.99996189586816;14.0607443043175;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;19477;False;-1;-2.99998849444091;335335.298956628;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;9254;False;-1;-2.99717126972842;1179301.8952882;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;8746;False;-1;-2.9991212747987;38551759.3070439;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;5196;False;-1;-2.99991937167939;91002471.71339;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;7123;False;-1;-2.99856885708802;29715560.5537946;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3484;False;-1;-2.99690051749204;10073238.9324707;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4408;False;-1;-2.9985966039815;69323020.5551861;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;6337;False;-1;-2.99708899296685;16221762.6548249;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;624577;False;-1;173.022042248408;210.201444298934;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);94;106113;True;30;1.0754328100362;137.373523116329;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;360770;False;-1;517.000014676712;524.76134502266;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;316418;False;-1;355.00002197735;374.424190475306;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;392766;False;-1;533.000000949949;540.507236789605;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;249213;False;-1;393.003499279732;484.833352713389;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;368534;False;-1;277.000795456581;359.229031049616;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;320621;False;-1;277.000149611384;322.862104551678;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;178296;False;-1;859.000033290125;872.194539317819;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;195459;False;-1;565.10355571476;663.411362413287;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;138468;False;-1;649.000024357811;685.819947508414;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;107397;False;-1;1073.00995420851;1150.95742789148;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;144474;False;-1;1047.00966290944;1184.35630981695;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;80825;False;-1;1047.00039663725;1145.40744795691;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;78348;False;-1;651.000017168932;824.348033060196;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;68884;False;-1;1143.00002571289;1307.92150712395;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;90483;False;-1;1993.00107625593;2244.04262609678;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;53037;False;-1;2079.00004067458;2240.51468325941;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);16;39740;True;50;1.83910664116922;68.7731658738006;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;53671;True;46;0.536214650392632;57.3836589922778;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);104;332486;True;58;-1.5752405135777;64.9484169081604;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);116;207414;True;33;-0.813901879738039;43.1519298490443;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);47;104978;True;52;-0.450410262425621;113.65347893333;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);79;407743;True;32;1.20891776597543;32.5617855956896;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);204;775244;True;57;-0.716337837146753;71.938151596863;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;3334;True;28;-2.43519551280662;18.4144273429877;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;86221;True;34;-1.61814129288222;40.2676254786068;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);86;244830;True;202;-0.931665274282762;1601.14528527487;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;19601;True;137;-1.92145648827844;169.13835790365;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;24855;True;99;-0.831279335464947;144.563293201836;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);31;153989;True;202;-0.40489917220776;180.971320808033;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);37;299880;True;104;-1.75587777735473;58.8802100660886;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5676;True;102;-2.64244304766992;62.992525573185;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;86567;True;93;-2.12732853047891;62.1138900336259;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);64;586180;True;88;-0.997334658167015;39.9928061076377;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);121;714348;True;136;-0.968536640502762;46.9255652198369;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;31026;True;189;-1.27831577336337;1594.82031051055;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;17831;True;75;-1.48236073669156;82.2869773075399;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);11;70586;True;178;-1.13407152338609;52.4544003063453;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;92037;True;93;-0.917271593547087;61.0965824554525;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);36;288948;True;102;-1.84517991209644;59.1369867648439;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;32362;True;77;-0.186193071858116;84.1301259116297;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);59;548860;True;88;-0.996094644999176;40.2995588217559;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5962;True;103;-0.549040829552822;66.01884893068;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);87;253827;True;195;-1.74356487614269;1546.13090857826;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;10478;True;115;-0.902626419394569;193.311647558996;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;33629;True;96;-2.44752692684882;139.640074943431;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);36;165967;True;248;-2.06384364378818;136.43610697047;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;106487;True;112;-0.988000746810809;34.5293096107153;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;31813;True;187;-0.894310991230566;1570.91085621583;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;12026;True;111;-2.25814411940898;91.5579584585484;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2157;True;42;-2.98495323769048;38314.5865719829;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2210;True;72;0.308950373581122;118352.978078456;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);118;9594;True;77;-2.73900542489207;145396.121819668;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);54;3964;True;101;-2.9293246725245;202521.560778849;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);79;7106;True;96;-2.87938855396555;441195.294931393;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);124;5079;True;85;-2.51493725437435;1223977.28831045;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);177;3857;True;81;-2.92846210204459;2533985.576824;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);283;3139;True;110;-2.84284031849487;3410718.52060881;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;2198;True;43;-0.230103406696629;95865.0477847551;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1370;True;41;-2.99307769629782;116123.933240506;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;1028;True;42;-2.98027072100913;183716.67197939;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1245;True;42;-0.562721608003006;147565.120492396;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;10220;True;47;-2.11860063631022;56066.5743171063;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;895;True;42;-0.205680127817057;174402.399790517;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;1783;True;51;-1.85778586978921;172447.099202729;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);21;5235;True;53;-1.80631210785653;91018.0442357762;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1540;True;55;0.478705688136959;227514.443723897;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;1461;True;44;0.360844010189569;175600.795290185;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1190;True;49;0.930898417686531;297967.118542736;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;2286;True;63;-0.932731055623261;350555.691206903;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);51;2157;True;71;-2.62325864826481;1065007.25793223;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);44;11240;True;75;-1.11506198165708;93040.0495977299;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);26;1919;True;59;-0.690040601273086;582837.371211357;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);58;2506;True;61;-0.825324018404504;1129495.231915;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);47;2535;True;73;-0.343756063535696;853407.839836692;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);90;6963;True;93;-2.37766072404462;526977.534351862;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);62;2439;True;76;-2.78603920051178;1184807.71968;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);54;2243;True;68;-2.60454054530921;1171288.82847664;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);130;4179;True;88;-2.93748805669019;1455500.2162439;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;9914;True;121;-2.73515192313825;239.786684726169;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;12520;True;145;-0.763828942442233;246.443724267055;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;13704;True;143;-0.281178447083188;270.230211628328;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;19967;True;149;-0.93997785073704;272.026887339663;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;22260;True;163;-0.827543331229847;313.798250845552;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;19922;True;171;1.10270422888114;324.984478224957;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;21779;True;177;-2.95452206486581;352.073131433515;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5446;True;105;-2.73958416457269;103.504133377999;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;7113;True;89;-1.10874145389942;57.9859011281704;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5257;True;71;-1.33670105148885;56.4893011850685;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;6423;True;92;-2.52438530769403;74.6943636196902;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5575;True;93;-2.72126245299413;94.6902344853343;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1581;True;45;-2.07370540829082;31.1202171601901;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1906;True;64;-1.04890734425229;33.3883214480376;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1093;True;42;-2.11761027812847;30.967762768509;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1551;True;59;-0.892365416461772;37.0897004479447;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1155;True;48;-2.60650782268797;35.1929416691671;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;978;True;38;-1.71339153624763;29.5386851388627;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);203;24223;True;72;-2.59136418513552;91.8793973021767;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7192;True;40;-1.95816861230795;148.656798718028;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);101;26352;True;65;-2.38879797672331;702.642696557978;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3616;False;-1;2568.37773338863;2707.23462002298;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;787;False;-1;4685.1953278725;4762.01692152106;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4224;False;-1;8659.72017160371;9515.12412930385;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;7100;False;-1;1281.4501045991;1455.31527613132;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5423;True;44;-1.89338069450733;27.80409881753;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1028;True;42;-0.787848186580394;42.5616768345453;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1549;True;52;-0.598751366882935;43.4046285833692;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5158;True;95;-2.95436734331509;70.4082043287914;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4847;True;93;-1.41035163328534;77.7347061876344;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5906;True;97;1.00504967198011;67.9754031217214;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4877;True;94;-0.680379142835913;82.0094135745249;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4596;True;91;1.04068060034918;81.7619913979599;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5248;True;99;-2.89612197591743;81.0521442630143;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5535;True;95;0.376179486222649;81.9963093715706;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5179;True;97;0.44807323322076;85.0328480010566;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5268;True;98;1.06574096813134;85.3007454982765;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5342;True;104;-2.56847263759397;85.820126154532;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5582;True;98;-1.23761129576602;81.1830706338749;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5826;True;102;-1.74833069217779;84.8963945369739;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6078;True;105;-0.862432825315014;88.6241338192315;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6397;True;98;-1.11965868161975;85.3079441372155;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6037;True;102;-2.57803543358018;81.8279345192774;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6032;True;107;-1.04269520288459;96.0312009658954;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;7294;True;102;1.06411816741532;75.2190444720105;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6275;True;103;-1.47598696987889;94.3041827818186;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6363;True;108;-1.85423800854675;90.6120545437838;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7136;True;113;-0.796852255145485;89.7757314544851;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7247;True;112;-0.974552377115261;88.0282655221736;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7681;True;114;-2.80146010583335;92.4801186443838;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6994;True;112;-2.09088062638924;88.4589891155525;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7839;True;112;-1.04105405697648;91.8853055509917;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7914;True;112;-1.8298211166774;83.8854047156633;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7940;True;116;-0.841249258183525;90.833249561776;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7973;True;118;-0.652795009153334;97.2866412531759;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;8486;True;120;-0.903621287040236;87.611872239685;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8525;True;116;-1.64667394787384;97.0862773913856;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8387;True;118;-2.12269068934149;107.575053111634;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;8889;True;120;-2.19499377123778;87.693174660821;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8106;True;116;-0.939434461267402;99.9559647078464;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;711;True;34;0.858787851342367;36.9608300044689;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;645;True;32;-0.999278837814591;28.9469639981898;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;763;True;36;-0.0167515366416198;35.5230583504468;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;789;True;34;-1.43805974649175;26.8596696288185;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;546;True;28;-2.84621476933649;32.2432515177453;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;745;True;34;-0.85083780058233;33.3177482256272;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;861;True;38;1.04116111809442;34.1924871609711;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;836;True;36;-0.750147844548406;34.2551525843004;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;688;True;34;-0.696761430099961;32.9788307644909;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;847;True;34;1.00733431987806;37.1376046595958;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1148;True;40;-1.15388629499538;26.0397282428546;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;892;True;36;0.440916869529018;36.770022148172;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;999;True;40;-0.454048358581051;34.2567120167594;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;952;True;36;-0.879882531184649;35.5919355242515;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1682;True;36;1.44874789121037;35.9628421429434;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;892;True;38;-2.78069605854372;34.752528897059;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1608;True;38;1.32364171944728;45.754201214523;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1511;True;46;-0.846197632069791;37.3528157510855;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1594;True;44;0.639947382565563;42.4528065413702;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1104;True;40;-1.84315724430753;37.7904870898262;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);17;6433;True;62;-3.99968798831091;38.9190949053021;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);137;35416;True;71;-3.9978883713474;45.8684146602525;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;9111;True;60;-3.99833886325282;39.3345797945645;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;9014;True;58;-3.99879184365216;32.1401390069902;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);67;1226;True;101;-3.98980154841663;3824608.17261169;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);109;1216;True;109;-3.9998990297317;63729331.4915889;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);586;16998;True;101;-3.99974375963199;510164.900523028;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;18970;False;-1;-3.99997909367084;228345.563517707;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;42757;False;-1;-3.99967933446154;3.7566953419533;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;17364;False;-1;-3.99820296466267;249246.351580572;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;14777;False;-1;-3.99926415458287;13.1079842466604;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;20493;False;-1;-3.99627996980971;318933.600969945;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;9485;False;-1;-3.99699034914234;1147544.52395096;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);851;8748;True;111;-3.99936109781236;54450439.9648978;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5562;False;-1;-3.9975677207101;66732011.1605204;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5409;False;-1;-3.99757515266425;69667970.9599184;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3756;False;-1;-3.99710941687092;9309082.91478865;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4822;False;-1;-3.99788876250288;63394375.6840035;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);901;6634;False;-1;-3.99885474517888;15804859.8086981;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;659919;False;-1;172.033151555822;207.554662662815;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);204;137378;True;42;-2.90375911020849;93.7061204696645;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;375486;False;-1;516.00003656745;527.376994019375;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;330953;False;-1;354.00011318922;388.73896437946;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;396035;False;-1;532.000017184764;538.529136306376;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;238992;False;-1;346.003544569017;396.355161602619;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;368776;False;-1;276.001049369574;371.906218703205;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;322277;False;-1;310.00000128895;334.33594734465;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;167568;False;-1;722.000016078353;756.50487392808;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;203335;False;-1;478.00002039969;580.023487190008;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;137320;False;-1;648.00015122816;675.37280359871;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;101882;False;-1;1090.06448890644;1162.91460565378;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;146599;False;-1;1046.02771508695;1184.20629025447;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;77948;False;-1;1254.00102790818;1311.77779851528;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;81161;False;-1;596.000218369067;954.054530860225;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;71905;False;-1;1142.00161123648;1426.11950757052;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;95611;False;-1;1992.00066842139;2234.03757775836;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;53147;False;-1;1870.00735294819;2216.91222375891;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;13500;True;48;-0.162682666519043;68.7233129506545;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);31;133646;True;42;-1.05474876940937;57.7881977080036;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);14;50426;True;52;2.34081406534687;64.549964611897;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);86;129237;True;32;-1.53110195581387;48.3019574085976;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);84;166452;True;68;-3.36602487758083;115.710508210833;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);101;514144;True;36;-3.49072324088343;33.4103853615703;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);481;1732710;True;57;-1.06132739366094;57.1902124490474;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;9653;True;29;-1.39758807672075;18.2944723344264;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;34070;True;32;-1.9711425863072;39.9303087956415;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);85;248756;True;200;-1.95683717353122;1559.85061668819;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;13024;True;122;-2.00564486440534;164.282794857665;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;37724;True;110;-3.73072308661916;136.915347896923;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);34;167656;True;248;-1.83107094086291;129.186736148458;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);41;317972;True;99;-1.96580879761177;58.6459119776428;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;3972;True;104;-1.59297600369573;90.9235869365531;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;118206;True;88;-2.34591924694642;53.281218445605;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);43;401564;True;97;-1.99193722754341;37.6651099282288;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);65;435949;True;128;-1.99067986011071;37.6623639326201;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;33343;True;189;-1.85741233819044;1491.6586587627;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;23965;True;80;-1.23072713857085;84.9885149135793;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);24;152564;True;182;-3.67815159991298;45.737115942173;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;91644;True;88;-1.94610864666575;52.8953156430035;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);40;307015;True;97;-1.86990850412748;58.9174284171068;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;21971;True;75;-1.97424748538725;83.7919809168733;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);75;662524;True;94;-1.97564964367806;37.9051704579012;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;3531;True;107;-3.34563804759907;98.4118285156644;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);89;256197;True;195;-1.97314007951559;1569.26303194967;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;15301;True;128;-1.13963776041737;155.884551747965;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;15186;True;111;-1.99630365054882;125.199548084453;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;24738;True;207;-2.10507962019419;132.446204998679;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;102173;True;105;-1.81034989646187;35.2832520661808;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);27;70681;True;207;-1.57548560554883;748.938270729077;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;12098;True;105;-1.56128138562724;106.474747849949;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);16;2150;True;42;-3.9261713511898;37949.0491439919;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);14;2215;True;77;-3.78359870230015;118237.467978488;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);113;9586;True;77;-3.96730336172846;145054.909844851;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);41;3105;True;93;-3.93731143322648;209221.693522597;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);78;7111;True;98;-3.92368945103311;439461.946390613;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);121;5079;True;85;-1.7548522650054;1222183.79631327;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);176;3869;True;82;-3.97606397791582;2530572.75779271;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);273;3908;True;123;-3.58196427281106;2657784.46651688;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;2166;True;41;-1.24440486228299;101396.776926728;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1370;True;41;-1.13438438956364;116124.044665908;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;1877;True;45;-0.874176639539272;108346.310260106;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1240;True;42;-1.55863706747006;148246.048737152;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;10258;True;49;-1.31017676243101;55999.0967029142;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;894;True;42;-1.00420592306378;174040.269773722;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;1689;True;52;-1.08696961732906;164818.394032985;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;5235;True;53;-2.43232433424905;90998.5751456273;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;2038;True;63;-1.59288104604598;176974.077690391;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;1461;True;44;-2.34229849201734;175600.802807198;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;1190;True;49;-3.56581923345375;297012.61790118;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;2355;True;63;-1.78820747499736;353386.220331511;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);51;3457;True;86;-3.70090512172361;648903.506382551;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);42;10991;True;75;-1.19724779538682;94619.3574624997;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);25;1914;True;59;-0.0429146494916242;584561.588526826;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);56;2505;True;61;-2.84114854728857;1130331.37623131;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);48;3087;True;83;-1.79177289446433;732000.274538084;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);116;12276;True;106;-3.66649910419551;374557.056044593;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);66;2522;True;80;-3.90387018765503;1153528.10569406;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);53;2333;True;70;-3.63199366984516;1138626.0507369;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);122;4138;True;87;-3.99638738855551;1467161.93814224;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;9147;True;127;-1.03532140563956;235.282873832841;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;11945;True;133;-1.85888992615924;261.522196521261;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;14116;True;145;-1.88824321603786;285.592719411305;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;16469;True;157;-1.50105548254263;273.434589704435;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;26205;True;175;-1.49544381699313;313.996554134595;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;20903;True;171;-0.545107988894502;326.90921945716;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;25459;True;185;-1.84752107404523;320.558489351835;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;4705;True;94;-1.83922051258349;101.977781361114;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;10434;True;93;-2.31100997622638;51.9142367128675;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;5595;True;77;-2.44735874908388;63.5429625815008;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5583;True;88;-3.42517103228028;89.3075485261089;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5370;True;82;-3.58376114423562;98.4413013766378;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1598;True;50;-3.93200018998794;29.5203272517808;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;2258;True;65;-1.55735545584809;33.7671338518694;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1180;True;43;-3.15512089391943;25.3168064328592;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1680;True;62;-3.40864114808321;37.1237692160141;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1090;True;44;-2.11876805039065;35.2688406786482;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1471;True;48;-1.60574433096021;24.5588227347768;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);231;28297;True;61;-2.88782015391058;76.5934709428083;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;8252;True;45;-3.46527653907671;184.78598672624;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);111;32040;True;70;-3.05599854470044;562.413027675196;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3688;False;-1;2564.54456103246;2704.28735967766;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;865;False;-1;4684.85314086212;4763.13040867674;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4495;False;-1;8637.90321357637;9472.55396495708;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;7424;False;-1;1280.82939019093;1450.41366387258;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;10196;True;46;-3.46198419083934;17.2070405357119;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1199;True;46;-3.72279512869324;33.0633482361455;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1960;True;56;-1.58761033303459;37.7569420898008;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6264;True;94;-3.95383749900099;67.4426556067987;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;4699;True;95;-3.44739592049615;72.7002516860864;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5715;True;100;0.371504703709625;74.7110216506425;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6469;True;97;-2.3162137634662;68.4761446325449;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5932;True;104;-1.01650907705375;74.9827138405754;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6135;True;103;-1.69992617503736;69.5357063356912;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6207;True;96;-3.41312159570545;71.0272229252356;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5778;True;102;-2.56579342790218;81.287342277647;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5080;True;97;-2.87750936992351;88.5778388086738;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6656;True;106;-3.37769151822556;82.4975862116522;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6093;True;102;0.0610646792040508;81.5811285871037;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6747;True;106;-1.71557374937254;77.7570234276414;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6101;True;102;-1.47819256292572;92.8761370654017;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6960;True;99;-0.865064922191698;88.2642837818178;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6886;True;107;-0.975219646922881;82.2071274119186;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6465;True;105;-1.67062519382249;92.3929502233634;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7055;True;106;-3.01688172622439;76.6684464690515;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7128;True;109;-1.22234127541182;85.3191152024371;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7163;True;109;0.0785074644156301;85.0434827992089;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7167;True;114;-2.84567816129219;92.0225131371669;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7485;True;117;-2.98083586198317;91.9538179423003;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7988;True;115;-2.81004920173904;86.6627733992609;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8857;True;122;-1.83540065113241;87.7059011222735;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8740;True;118;-2.41933883280463;91.6654270369821;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;9419;True;120;-3.13044702221195;85.2857480944231;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8663;True;121;-2.73126386791992;87.1228598352015;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7949;True;119;-1.16372608727018;93.6612234451285;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7835;True;118;-1.95697189399832;96.9482752042064;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8898;True;118;-1.91455935962245;101.185525525353;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;8822;True;120;-2.4182721220042;93.2618571272857;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;9720;True;118;-1.41210892303479;87.9794711689469;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8595;True;119;-3.13965631608835;94.382476186121;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;938;True;34;-0.492781276112786;35.6128239528224;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;639;True;30;0.0741268117325973;28.9853241015318;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;779;True;36;-1.75025244790607;40.6615781675093;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;643;True;34;0.122576557156898;28.6082021351579;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;606;True;30;-1.97358295227102;31.4468086923058;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1050;True;34;-0.99848533654515;35.4746549155654;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;797;True;38;-0.458648978014779;34.365871745572;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;707;True;34;2.29050812138734;37.4791128578136;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;711;True;32;-0.794804918949867;28.5971446117131;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;841;True;36;-1.52561495337897;38.1618120137462;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1339;True;38;-0.329892981019753;28.7311415891694;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1008;True;38;0.407574217956315;42.4145857623637;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1115;True;40;0.17350913592312;35.4535648652697;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1322;True;38;-0.407803086753843;32.8861148028428;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;919;True;36;-2.26749671169906;28.3548187325295;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1198;True;42;-1.26533129032018;33.4854049631239;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1562;True;42;-1.53507621471541;42.1559585118824;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1387;True;48;-1.35411171864444;39.9295867180329;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1492;True;42;0.0183186009611553;42.3198981561567;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1463;True;42;-1.07618295637713;29.1528518541394;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);17;6614;True;62;-4.99570774379918;39.2445988631216;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);146;38416;True;71;-4.99351724050637;46.5117021606662;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;9691;True;60;-4.99726248439274;40.2634977309254;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;9363;True;58;-4.99744812026501;34.2126757834791;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);67;1252;True;101;-4.91440156005062;3728331.64972422;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);163;1918;True;109;-4.97879547065999;47025238.9436405;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);571;15627;True;101;-4.99962797388417;555601.440626353;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;17698;False;-1;-4.9986531352618;244294.595504499;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;47763;False;-1;-4.99971809796976;3.08828640559642;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;17074;False;-1;-4.99807842541397;253706.522192903;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;12889;False;-1;-4.99782254453647;14.3425298254999;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;20812;False;-1;-4.99984199181192;312634.620172984;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;9153;False;-1;-4.99938038177759;1190678.87271984;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);846;8676;True;109;-4.99647947959438;56262606.478195;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;5218;False;-1;-4.99111219774518;93293411.1169667;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7529;False;-1;-4.99568554106899;33240095.7411275;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3681;False;-1;-4.9925348767976;9499536.46217825;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4684;False;-1;-4.99893195927093;71852457.0980191;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;6472;False;-1;-4.99768529552859;16235516.2160562;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;654315;False;-1;171.001546130516;206.28477368628;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);80;95956;True;34;-1.27522337542624;127.534911220365;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;363061;False;-1;515.000009043142;526.372597675584;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;342269;False;-1;353.000051734969;371.787627197949;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;405583;False;-1;531.000010249205;538.621596579063;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;251364;False;-1;345.00055950135;397.720050055663;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;389189;False;-1;273.021635489548;351.892074466801;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;339113;False;-1;309.000032070093;341.668773464174;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;149776;False;-1;777.000290595926;845.821563955313;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;216065;False;-1;477.000272449106;559.321493551712;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;119456;False;-1;669.000256868079;839.970440360372;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;101036;False;-1;1065.1920515812;1153.53022855387;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;153110;False;-1;1045.02130743583;1183.8964144036;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;82996;False;-1;1081.00011449214;1271.37070537802;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;82293;False;-1;847.000974992291;1046.80735683274;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;72814;False;-1;1115.00161825679;1257.76889323735;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;97643;False;-1;1991.02688142007;2229.51942183562;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;56713;False;-1;1693.00669063069;2145.02594308026;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;51249;True;52;-2.38377696247016;68.678140745779;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);23;104161;True;68;-2.87980278668916;57.7179892069848;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);144;476036;True;72;-1.92144519040428;65.1455522824974;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);84;132249;True;31;-3.69439945029765;47.3391219169027;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);30;67871;True;53;-0.328356942780482;108.540714711438;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);214;1521071;True;39;-4.00614316063288;28.1112772075425;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);147;457529;True;56;-3.52649528464605;79.745413412095;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;25704;True;32;-2.50092530320442;19.1693779847418;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;56017;True;34;-3.65137153707974;37.1157289415164;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);86;262625;True;195;-2.60294392872739;1569.7822793964;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;22726;True;144;-2.54365420599638;153.559431272419;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;35459;True;111;-3.33990503490898;132.836592330933;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;143256;True;207;-2.15513440927264;175.011945953586;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;294176;True;104;-2.89532282571091;58.4795430562526;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;3298;True;100;-3.61079221992325;81.3865467085198;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;204577;True;88;-2.99018058646013;45.3367545847165;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);57;552331;True;102;-4.13839570672177;33.5642865640537;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);95;604432;True;138;-3.51798532461654;44.2600236797691;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;34108;True;191;-4.66678183975945;1466.44223558628;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;25399;True;80;-2.9675027793122;86.963665989193;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);39;238126;True;179;-3.49377443943814;60.1317391020523;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;143799;True;89;-3.88740818895745;48.5730885217877;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);37;308548;True;85;-2.57330829909691;58.1928893330242;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;18339;True;77;-2.81883168677745;78.4406973425905;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;369984;True;88;-3.11925657005946;34.7919901032462;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;3301;True;97;-2.20795834586395;103.597191179704;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);85;271144;True;197;-2.9130344343898;1460.06230868505;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;11383;True;117;-2.38914320868866;182.201338304328;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;15480;True;107;-3.66583459948461;121.219375720201;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);30;155874;True;206;-4.52035717643814;183.243645583264;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);15;130869;True;105;-2.98654127120345;33.9583947711276;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;33647;True;192;-2.80071777934242;1474.48114258312;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;10789;True;110;-3.4192654855639;68.2589504893491;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;2183;True;52;-4.98675542417297;38459.7260217307;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;2216;True;72;-2.85777365502798;118155.494156842;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);97;7348;True;66;-4.0397917009144;163361.038366996;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);52;3870;True;104;-4.97873222454392;205753.825521229;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);55;6696;True;98;-4.67007872633174;286555.078360671;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);120;5074;True;85;-1.66897706997999;1225325.61892528;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);173;3936;True;81;-4.99909134115982;2485004.08467334;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);263;3910;True;123;-4.92653241843289;2677441.99694541;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;2175;True;40;-2.59277611672542;100944.239311361;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1370;True;41;-3.19966216953456;116123.967161531;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1088;True;46;-1.58091699545314;170061.825706842;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1241;True;42;-1.95146991543075;147791.152282116;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);25;10105;True;47;-1.59688158547361;56457.8372176489;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;875;True;42;-2.52924242407514;179950.877374597;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;1670;True;52;-1.77048343362775;163588.267744389;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;5240;True;54;-1.47780908107656;91139.2103751516;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;2027;True;66;-4.8846077918469;178950.680344467;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;1461;True;44;-4.5506345851117;175600.833617154;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;1195;True;50;-3.00622315518848;296561.70102967;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);21;2514;True;67;0.71925571361522;352523.960240857;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);46;2490;True;77;-4.7780422539348;886157.951347082;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;11031;True;75;-4.03600146017782;94287.14422387;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);25;1854;True;59;-2.30513972849824;601692.513804902;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);56;2469;True;62;-2.289628101182;1144336.74150783;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);38;2188;True;77;-3.89053012658401;867638.962342621;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);112;12334;True;104;-4.97407536021158;372175.234176584;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);61;2476;True;74;-4.60946698189223;1167308.24046693;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);50;2298;True;68;-4.34783983479619;1139737.5628414;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);121;4191;True;89;-4.98935318085801;1446444.39390257;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;11620;True;139;-2.9023964348726;245.452692065247;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;14797;True;147;-2.88113678054937;263.624467042238;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;16336;True;157;-2.47528229722533;277.817025252013;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;20072;True;169;-2.98677673283349;241.792015823868;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;20927;True;175;-2.40838327138144;302.904368970028;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;26789;True;173;-1.44660588467801;339.124908648624;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;26058;True;195;-2.83995208974925;319.112891359565;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;8925;True;105;-2.9227940383939;67.0917921890665;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;5408;True;87;-2.62447553110517;82.1997510861225;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;4553;True;80;-4.63447617349889;73.6356092805087;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;7381;True;98;-4.62063591909624;77.2591520954049;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;4995;True;86;-4.03728457588576;99.9722163995698;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2142;True;50;-2.37648953095846;33.5114914697821;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1646;True;55;-4.07494772182542;44.0300453183419;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1485;True;43;-1.97784552489307;28.1448930722602;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2605;True;64;-3.80343305822622;38.9231265932819;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1483;True;45;-4.2688225159742;30.9553871377995;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1908;True;41;-4.56900323255407;23.6978206962758;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);208;35664;True;67;-4.30023911842156;64.1673499025992;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;9765;True;48;-4.01098612184217;148.656121486633;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);114;29708;True;75;-3.80051558781439;733.371502680386;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3644;False;-1;2566.01416006732;2706.20925121196;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);901;855;False;-1;4686.21512818766;4762.91639061556;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4735;False;-1;8636.90960995011;9440.82130404941;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7591;False;-1;1266.99284362141;1447.50475106189;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;15186;True;50;-3.07719373054672;21.7743941425127;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1294;True;45;-0.970733946175656;30.7216901536056;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2395;True;55;-3.82083015927152;32.339519143458;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5654;True;90;-4.56219378372756;72.8334949786712;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6518;True;88;-4.09881845540312;60.5832077756247;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6170;True;101;-1.60463957702957;76.2942870270755;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;7305;True;98;-3.28766798055157;57.9853573054993;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6439;True;100;-1.71311053760029;69.5752236842623;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6335;True;106;-3.56807064198333;79.868808510652;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6412;True;96;-0.925804915803393;64.3754766988869;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6755;True;106;-2.96889249420208;74.0921328707525;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6366;True;102;-1.81294993162758;79.0372969187457;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6371;True;101;-0.914600788575877;82.6408221321946;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;5986;True;104;-3.81507939138221;82.9081374844948;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6381;True;103;-3.85580985287941;83.6811583795671;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7025;True;105;-3.41289139278833;85.7702112503472;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;9127;True;106;-0.994560047050268;63.7868275657926;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7894;True;102;-3.19131352388827;81.3029023144889;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7855;True;110;-4.81519738203622;81.872028919422;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7052;True;114;-4.24744821584199;83.0351791276266;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;8147;True;111;-2.76940856770119;74.9732711450413;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;10415;True;115;-2.85583668288581;62.7178948147605;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;9063;True;117;-4.42813959877386;80.7051247790272;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8344;True;113;-0.837327846250184;86.9747127183744;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8692;True;113;-3.7574722379248;86.718096402626;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;8247;True;114;-2.38725280267524;81.7038682883988;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;10195;True;119;-2.42289455487528;81.1871284187661;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;9168;True;118;-1.19038520482852;81.2472424934608;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7534;True;114;-0.456738056362019;98.479808154675;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;9238;True;125;-1.85753325319734;81.3415920591722;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;9523;True;117;-1.4020294008786;79.7909225506231;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;8770;True;118;-4.39097252646041;93.7219799208153;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;10673;True;129;-3.47585811674402;84.4963837964959;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;10166;True;131;-2.40234532086288;92.0150019164345;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;9925;True;121;-1.88632095553275;83.9022086747562;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;774;True;34;-1.22134370087708;35.1909637814043;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;548;True;28;-0.873888096713409;29.9793727307771;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;722;True;38;-0.918038952126186;31.7634404321039;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;699;True;36;-1.20345850764004;30.8751354089182;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;783;True;32;-1.84177136367269;32.8196225104188;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1074;True;34;-4.31732391441116;36.9341490127525;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;873;True;40;-0.876833115647004;35.2388490447959;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;744;True;34;1.63466263498862;38.3359780938333;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1170;True;38;-2.93593350701776;37.7265351383277;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1241;True;34;-0.850850128499256;42.129446067974;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;927;True;40;-0.103479258298631;33.560962391391;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;961;True;36;-1.21615936151527;34.6340646872586;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1153;True;40;-3.70539809982544;39.2469019794639;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1030;True;38;-1.13867923903217;34.8095584155874;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;834;True;36;-0.830236192713602;34.7637282604946;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;890;True;36;-0.726190799719743;37.9334620582748;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1583;True;44;-0.876236249635106;37.937606583004;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2386;True;48;-4.0630529444027;36.1041575741841;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1089;True;42;-0.840488065891195;40.0419168951976;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1001;True;38;1.00110620632819;32.048212069387;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);17;6509;True;62;-3.91788324683481;38.9691278163181;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);129;33120;True;73;-4.02035617964528;45.2471075170406;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);26;9058;True;60;-3.64780640192578;39.3046246332209;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);24;8506;True;58;-3.21654080353958;31.0958558685552;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);67;1203;True;101;-2.70360641175265;5830331.68317246;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);106;1158;True;109;-2.87809098341032;52574980.1399109;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);568;16993;True;101;-4.06678778966389;510437.425363442;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;17040;False;-1;-3.99790777798071;255012.855826719;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;48850;False;-1;-3.8922661905934;1.48740768899206;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;16870;False;-1;-3.88147506131819;256340.700248768;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;12828;False;-1;-3.6751180085518;14.1697606915864;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;20111;False;-1;-3.86043187277743;324279.393522855;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;9336;False;-1;-3.2389369289864;1166620.47866516;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;8608;False;-1;-3.785384697856;37643516.1212579;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;5148;False;-1;-3.53001415568841;85196715.6521534;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;5033;False;-1;-2.95161812649871;68635036.3752086;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3676;False;-1;-3.2130997709981;9517956.45687968;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4259;False;-1;-3.62324738656463;69137495.0213824;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;6271;False;-1;-3.49165940792904;17090591.6698999;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;597881;False;-1;231.620647671602;248.252071662132;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);84;103807;True;34;0.573964366246507;134.798890314317;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;365840;False;-1;515.326677675109;528.491015100209;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;313095;False;-1;353.365256862973;386.983384569269;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;376726;False;-1;531.107021429624;539.20340069531;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;214677;False;-1;313.706329642644;335.511613158253;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;316493;False;-1;276.84705466901;358.998938354562;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;295821;False;-1;309.839022879466;369.035655885944;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;147397;False;-1;875.883913746036;897.134720337445;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;178902;False;-1;529.828966537702;626.551573547316;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;114010;False;-1;668.318874300735;885.220756740191;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;98188;False;-1;1090.28005291222;1154.87553611006;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;126908;False;-1;1047.25843122666;1184.36411161127;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;64417;False;-1;1272.50794175777;1391.21345343956;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;68564;False;-1;835.962419240702;1166.67020179073;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;60030;False;-1;1116.25224426977;1254.33694293289;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;77498;False;-1;1993.23556046533;2269.50239814262;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;45845;False;-1;1840.16754402036;2078.20609164444;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;15429;True;50;-1.0421209574996;68.1154273995511;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;93937;True;68;-0.833156738644648;57.1262056179835;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);33;96655;True;54;-0.97716810852096;65.4438618686057;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);123;214208;True;32;-0.209958490306653;40.571803787239;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);46;98675;True;37;-1.24188390689059;123.419099862459;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);157;690858;True;32;-0.375674798673346;33.4482825656828;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);676;2044805;True;54;0.11894831603398;63.0528721114791;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;3357;True;29;0.91935956838082;21.1520947575416;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;41186;True;32;-1.54191315941428;41.9741451998325;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);109;277176;True;193;-0.824752914897707;1467.86908487264;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;18815;True;130;0.0819102484267495;168.70106509308;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;8732;True;97;-1.75976194048334;144.316589707614;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;24635;True;207;-0.243781482235691;136.680370683008;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);52;364232;True;76;-0.880711886811475;60.5470386974393;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;3423;True;97;-0.473014343055788;90.7788001797844;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);17;152822;True;89;-1.24168628346683;48.3322448169562;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);48;405399;True;88;-1.81230162164788;38.5374978881586;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);79;453191;True;123;-0.674504161285762;42.6825818240295;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);27;61797;True;208;-0.962496111763999;841.149307465079;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;13659;True;77;-1.43244177205369;80.5080046762127;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);66;346300;True;177;-0.722880083728829;59.8104918848161;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);13;119825;True;88;-1.21180814326772;52.4939188020713;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);46;328004;True;83;0.150998359310993;60.0316954055027;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;13720;True;75;0.750357823769836;81.2831844940979;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);57;494103;True;93;-1.09264989550031;34.2124939463034;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;5361;True;100;-0.141668849640643;68.7322582917601;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);95;249219;True;197;-0.485979496734461;1602.05856590164;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11084;True;115;-0.279190738266436;187.613341882649;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;10302;True;100;0.416227348607918;147.105978076876;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;27945;True;214;-0.324893769444198;142.590505855817;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);104;595285;True;129;-0.9354445822274;44.2567038447004;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);34;78465;True;206;-0.325698285902049;678.533139043009;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;11311;True;103;1.3883371793865;78.2731768434008;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);16;2182;True;43;-2.19353389073348;38341.8677911677;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);15;2210;True;72;-0.220856543053418;118595.90707384;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);108;7338;True;67;-1.85019985346654;163271.459803049;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;3142;True;98;-2.23722131412816;209105.974259603;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);103;12056;True;100;-2.89898747011516;286416.055232989;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);136;5074;True;85;-0.153958225984196;1225325.71466421;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);202;3865;True;81;-2.72496126898288;2531738.0684942;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);273;3514;True;117;-2.0692842782722;2752200.35233496;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;2197;True;42;0.278877037489515;96032.4717549228;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1370;True;41;0.564794871069202;116123.896904231;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;1883;True;46;1.42788257257898;108019.330548033;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;1512;True;44;1.12278071824283;123307.869712108;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);29;10265;True;47;-0.979201742979556;55965.6705525751;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;895;True;42;0.0201179305543699;174402.981508021;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;1740;True;51;0.000821125704278666;176045.091149366;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);22;5231;True;53;0.646476785426193;91193.8825156985;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);34;10600;True;54;0.000975649678146893;56836.9419680349;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;1461;True;44;-1.00153299070844;175600.783997807;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;1190;True;49;-0.413316461292499;297967.015388418;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);27;3089;True;66;0.357700667039062;307480.590028529;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);54;2743;True;77;-1.64885572996916;812058.86221781;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);48;11155;True;75;-0.75711863161911;93309.6424673086;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);28;1875;True;57;1.01162167388997;598738.926145003;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);63;2478;True;60;-1.12479897923494;1142564.45792509;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;2266;True;79;-0.316099583097251;838417.192540608;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);110;12016;True;97;-1.9518751685091;315486.286240164;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);88;6766;True;81;-1.65059177760266;426721.764135963;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);60;2276;True;67;-1.58292944953247;1159090.57280464;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);136;4184;True;89;-2.51529461456679;1452600.35422797;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11208;True;117;-0.36038987509921;244.445787088624;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;10242;True;125;-0.91526634844662;256.794062165268;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;14177;True;135;0.643237860016799;281.809872171243;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;18333;True;147;0.0537517667994881;297.027092843355;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;16896;True;153;-0.156057844675227;310.102987216105;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;19341;True;159;-1.81461289259576;328.047330034251;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;22243;True;167;0.141539565580348;342.729330882588;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;6742;True;99;0.0869612366995046;114.483093616622;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4936;True;80;-0.143507748494563;86.1679330111509;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;3629;True;71;-0.981675395907252;86.1891791791417;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;5638;True;87;-0.886449360976616;84.6296791793802;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4921;True;82;-0.979053842533963;94.2505898669069;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1094;True;42;-0.109931727476186;32.854634454203;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1767;True;61;-1.51223914334706;36.5428013628445;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;904;True;40;-0.944280804045353;30.0075478713672;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1390;True;58;-1.21232003576113;38.150098771906;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1011;True;43;-0.0685725959684542;35.179970505733;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;893;True;38;-0.957294173903137;30.0727673288751;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;106214;False;-1;5.86539380718698;30.4558771673509;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);18;17838;True;45;-1.0664795381596;156.95910314496;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);161;34784;True;66;-1.86384122926362;616.677409944866;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;2783;False;-1;2580.02920377523;2736.19775642255;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;627;False;-1;4690.11951627054;4759.30236657432;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3740;False;-1;8854.29308944964;9573.94323590119;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;6132;False;-1;1283.77234306609;1474.11340351598;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;5514;True;44;-1.41681420071388;27.4736405888301;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1074;True;42;0.657467342153908;43.8271839893027;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1764;True;49;-0.0489935751369734;36.4984135658174;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4762;True;89;-0.490829144925016;76.4669624643905;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4637;True;87;-0.577002484801604;75.7864354574389;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4952;True;93;-1.7372818580272;79.5262998157726;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4774;True;92;1.00542082823054;82.980160208751;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4678;True;91;-0.525003081168034;80.8184338532321;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4965;True;88;0.0304829261064974;83.7707335582139;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4972;True;91;-0.203553558830963;81.2230795329942;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5360;True;98;-1.57338224803433;80.6256698765671;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5462;True;97;0.233134997619479;84.8492392758217;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5321;True;95;0.521670964898678;85.2304674757337;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5193;True;94;-1.05547119037979;87.3430233293568;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6089;True;99;0.0506650480252602;83.1336776321259;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;5648;True;102;0.73033994869582;92.1596434027647;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5500;True;100;-0.370683679882286;89.1662889896212;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6026;True;95;-1.07072844880115;86.4495327002743;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6863;True;108;-0.711041681824405;90.6469886591926;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6333;True;98;0.166724157597516;81.408032085368;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6439;True;107;0.942449255087217;90.2831751254186;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6014;True;97;0.786975640629202;88.1576866780896;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6765;True;109;-2.88332291601343;93.4760395690669;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6695;True;110;-1.60392892069712;92.4470125410658;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6962;True;100;0.60644904490729;93.2703939983939;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6570;True;108;-0.348159463933019;95.4352895262947;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7185;True;114;0.696387071203853;102.459386773175;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7309;True;111;-0.517438435426886;94.8952194582687;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7141;True;109;0.861728803521735;98.9712696660976;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7011;True;111;-0.293304518924528;97.2180726499919;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;6775;True;110;0.0222244614136465;100.343443055118;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7442;True;111;0.79297049578644;105.663251196158;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7999;True;113;-0.0816906204812189;103.197700347999;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7799;True;114;1.37849073868239;100.622619260336;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7507;True;111;1.19059631613736;100.328706517878;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;953;True;32;0.50518450970481;40.9706822898278;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;598;True;28;-0.419651914002182;30.583609244303;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;879;True;38;0.056003836965661;37.1624802296716;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;684;True;36;-0.981095356774746;28.9546411997656;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;592;True;30;-0.679076579232905;32.8520710399519;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1251;True;32;-0.120357648025566;37.7392047784509;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;860;True;38;0.60479715154358;36.216976855695;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;747;True;34;0.623206658045886;36.294788472095;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;917;True;36;0.694497060091917;37.9438675629313;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;891;True;36;0.0705286561823657;36.4874716112186;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1151;True;38;0.978885874617227;31.6177167718176;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;938;True;38;-0.808962064279412;37.5955494732204;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1113;True;40;-0.493855714952841;40.1526716783394;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;939;True;36;0.0909957705580399;35.7361341732708;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;981;True;34;-0.488941994786221;35.2582037104169;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1110;True;36;-1.06133330508518;35.2500884426618;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1349;True;40;1.99905244249887;44.163871430465;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1374;True;46;-0.429881000815314;41.7587866695731;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1732;True;44;1.37555801503186;42.0280841820537;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1283;True;38;0.637332923313626;34.6380721998356;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);17;6521;True;62;-6.49682435293289;38.8805416665361;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);126;32860;True;73;-6.86172725896172;45.6971402292325;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);28;9683;True;60;-6.02648408693095;38.8323012578466;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;9005;True;58;-6.89845994630813;32.1631612568339;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);66;1202;True;101;-5.88318551037181;5814545.80288461;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);107;1186;True;109;-6.06428877437975;47284094.3603407;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);597;17231;True;102;-7.91191592936446;503260.749790551;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;20941;False;-1;-8.21677095605556;10.6594556743493;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;43558;False;-1;-8.31994132944644;3.79113172711691;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;17511;False;-1;-7.35037748812787;247266.558198266;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;14752;False;-1;-6.72552397649095;12.599338914097;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;20954;False;-1;-7.69169651043698;317191.855220081;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;9627;False;-1;-6.80552492273559;1129439.04780589;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;9055;False;-1;-7.86235439015253;46385673.0222517;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;5455;False;-1;-6.55577416901129;92628426.1404503;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7689;False;-1;-8.05530004608995;26578491.177698;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3793;False;-1;-8.06268182863171;9792733.08255616;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4867;False;-1;-6.52303545615166;70394138.9370876;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;5879;False;-1;-7.91708680979008;20153665.9283624;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;612347;False;-1;228.529313548596;247.125628056191;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);127;156140;True;30;-2.74687145327063;131.086334919871;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;349940;False;-1;510.740614782376;525.018124977649;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;344289;False;-1;349.174244741339;379.423669006871;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;413404;False;-1;527.406703591624;539.242506077921;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;177471;False;-1;343.401948020645;394.426368931033;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;306799;False;-1;277.748949488849;354.89376908249;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;340192;False;-1;305.731131323152;354.310595302858;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;175084;False;-1;717.91705729962;765.406660227499;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;193223;False;-1;500.53628996298;674.50693819512;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);730;114504;True;92;-0.341980242172528;708.170621596273;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;98640;False;-1;1085.63437226206;1155.26545366393;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;150182;False;-1;1041.12636781603;1176.58542850292;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;80614;False;-1;1042.44145327733;1128.15015986742;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;78632;False;-1;848.802205123958;1112.11760730425;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;73894;False;-1;878.550332220042;1064.03918179635;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;93226;False;-1;1988.88704275581;2238.15670548318;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;53509;False;-1;1867.26980612238;2199.18299160636;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;18791;True;50;0.755486848382635;68.7982607703006;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;24507;True;38;-1.35173972939847;57.4096302962738;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);158;502511;True;62;1.05030921309476;65.2720357795261;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);115;191268;True;32;-1.75219638202829;43.2517695110094;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;53729;True;51;-2.02312388006265;115.356557051272;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);123;641829;True;38;-2.71029231573642;34.6625756040264;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);274;1031585;True;59;-3.39562493060321;56.9181490833915;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;4813;True;30;-0.863319184887831;28.3403395061221;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;34249;True;28;-1.21226408359223;35.2363725741602;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);88;246258;True;195;-4.29615922240236;1656.2645577446;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;11592;True;117;-1.67980595785892;179.320826984255;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;19505;True;107;-2.39286405109343;147.104677534877;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);39;184868;True;206;-1.18780410892865;180.827363326137;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);46;345832;True;83;-2.69245056309361;59.5953263569087;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;4032;True;101;-1.56812746023492;68.4035738856458;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;99613;True;88;-3.2441312719032;55.0338331106259;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);65;608419;True;93;-3.12453983945372;35.6524687269702;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);22;169012;True;103;-2.93005131226548;36.72130796518;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);12;31959;True;187;-5.95977035556457;1556.13690742727;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;23493;True;84;-2.78578470247392;87.1435966419706;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);59;342508;True;180;-2.66380153475499;61.8705882311471;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;105672;True;88;-3.08616962001084;54.2710870896495;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);42;325146;True;80;-2.63412484310442;59.2543987302367;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;32720;True;77;-2.76572973082039;82.8284102952145;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);44;420860;True;88;-4.54531745174311;38.0475921239422;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;3010;True;97;-3.11267416689023;89.9171326755896;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);88;261227;True;200;-3.71621197990735;1556.89980641266;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;17010;True;119;0.0542349180678283;171.805245295679;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;10756;True;111;-3.12512529422648;155.163137817717;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;126426;True;235;-1.00767768855415;131.555078752162;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);78;511216;True;128;-5.00398176900639;42.9129512319884;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);32;82616;True;200;-2.48934401763436;645.248330591942;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;12458;True;93;-3.10098752845163;96.7494715489104;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;2139;True;44;-4.90078813564342;38176.677747878;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);14;2205;True;73;-1.46396569078503;117895.293268142;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);129;9614;True;77;-4.52857390585099;144985.761505915;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);49;3841;True;102;-5.36698994890881;208033.225486003;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);74;7114;True;97;-6.46899826740069;440946.900337815;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);101;11631;True;78;0.165060355476574;389645.21324343;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);161;3881;True;81;-3.93119530700626;2515423.80206072;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);249;3921;True;117;-4.11709753535959;2681137.38549968;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;2177;True;41;0.716565865327667;101047.681690612;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1370;True;41;-3.56578023215579;116123.927635653;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1028;True;42;-3.13056197940729;183716.690204929;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1240;True;42;-0.0625978791070225;148018.079849927;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);26;10428;True;47;0.754445351993382;55597.420966482;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;874;True;41;-2.20903508758272;180337.778416793;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;1596;True;52;-1.50258556007195;174695.31236133;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);19;5211;True;52;-3.13136430020143;91000.0801329353;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;2031;True;63;-2.58526515372713;178112.213380903;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;1461;True;44;1.81641547891124;175600.671848029;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;1188;True;48;0.131590928019925;297481.130011898;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);20;2416;True;66;-3.50875871965606;349063.281101214;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);45;2491;True;77;-4.38238392575493;886251.056889823;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);41;11120;True;75;1.10092662200102;93729.4120208446;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;1875;True;57;1.48300089732307;598738.946819278;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);55;2515;True;60;0.311088637497287;1127791.49102619;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);44;2800;True;77;-1.91315272144009;771127.392660324;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);109;12472;True;105;-2.07803549251105;368129.736811862;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);72;6771;True;81;-4.34840684053017;426680.573870147;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);54;2281;True;67;-4.19907511965854;1152061.33233189;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);125;4148;True;91;-6.07350952040036;1468663.24635301;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;12272;True;123;-0.680191094965356;246.445380786519;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;12251;True;137;-1.63072908596419;261.183998006682;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;17116;True;153;-0.196989955749669;288.059229695398;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;19100;True;169;0.158037808101275;301.61991934735;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;22637;True;167;-1.79656195292491;322.32988429018;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;21958;True;171;-0.494092988549491;335.979106546286;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;28935;True;173;-0.390329033497236;345.749319841993;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;6780;True;95;-3.61239559065574;80.3755375976614;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;4991;True;80;-4.73346993338096;87.4855274381223;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5309;True;86;-2.46306366750984;86.5319257852793;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;7555;True;101;-4.28807061957195;95.4230076395585;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5133;True;92;-3.27765038579884;94.4295711408608;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2073;True;51;-1.17670811014552;35.8695279748692;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2062;True;58;-2.00270148816241;41.1145567133501;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1263;True;44;-3.49667854723115;28.668464715974;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2834;True;57;-3.34679282114513;37.4253573285886;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1316;True;43;-2.68816343665504;34.486043978877;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1167;True;42;-1.39644121849869;27.9929061021876;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;212814;False;-1;1.64479253620394;29.5560845200585;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;14520;True;53;-4.06867353550977;134.429894175454;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);241;68138;True;77;-4.05620454287076;528.402384678768;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3654;False;-1;2566.40844822392;2705.91067156078;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;837;False;-1;4683.01018608375;4763.12595331631;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4685;False;-1;8638.23599326137;9446.50934681251;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7709;False;-1;1258.78220097624;1444.91641330952;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;21884;True;48;-3.89483933856439;15.6522509349304;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1079;True;41;0.407948008203772;35.1896469179936;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1448;True;47;-2.30999592696368;39.8147850783118;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5002;True;90;-0.849680748282671;73.8235959151981;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5004;True;96;-2.28962529929478;75.115449217366;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5594;True;102;-1.86274289460702;71.8325716328204;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5630;True;94;-1.89037967668963;72.1797405933206;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5420;True;95;0.751004802587801;81.3052095360974;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5264;True;91;-1.58373392140099;79.4273687703834;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6137;True;89;-2.36233096104751;69.9073997868467;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6191;True;97;-3.12257299563024;81.8684497155831;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6072;True;97;-1.374032297114;83.8312767944417;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6209;True;97;-1.24400348309234;76.9050933727032;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5750;True;96;-0.264280200589098;84.7511725469113;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6617;True;102;-1.46734455763413;81.2333453278685;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5984;True;102;0.478384051490917;89.8605139204749;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6669;True;106;-0.707860684993974;82.1574877682822;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6027;True;103;-0.486146457066915;89.8759843267639;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;7080;True;102;-1.11073823368311;91.4194260812578;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6777;True;104;-3.4848551612627;81.6708504175773;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6911;True;108;-1.58627286371673;88.8536855413317;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6480;True;109;-2.70862141256565;89.2026193450867;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8150;True;111;-2.27946539110924;90.3141128881828;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7583;True;116;-1.69331261821365;90.5143111744435;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;6972;True;103;-0.833278658037587;92.5042950232015;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7612;True;116;-1.84953807492365;90.5410685653038;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7659;True;115;-2.07124585479277;97.2569143318559;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7991;True;120;-1.78537759298334;87.8943708374445;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8423;True;117;-1.70704649955133;94.713845178249;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7040;True;113;-1.47645897981959;98.1475258741154;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8215;True;126;-1.43440771049219;91.7905795704905;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8330;True;124;-0.645956124970997;96.0622013474585;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8766;True;120;-2.26932074952101;95.8209086458636;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;9044;True;126;-0.162283298793048;94.294117346408;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8328;True;121;-1.78762342391676;96.5950848812851;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;712;True;34;-0.154576407541244;38.4434858822664;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;515;True;28;-1.22285642319469;29.4566715355704;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;760;True;36;-3.85842041721801;35.6664285819367;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;658;True;34;-1.61820199608121;30.0829474351898;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;615;True;32;-3.8433345415256;32.9113057067807;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;865;True;34;3.9785251303998;38.6128426844292;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;896;True;38;-1.03678803538113;37.1607695809483;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;725;True;36;-2.45802594252389;36.3137340231087;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;716;True;34;-1.07417473917881;33.3808748150852;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;738;True;34;2.57726596090325;37.8183958525909;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;932;True;36;-0.638774636813252;28.0721526182987;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;872;True;32;-0.259943778501555;43.6271023923551;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1082;True;40;-3.49937075622223;40.9943373771079;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1069;True;38;-0.110999844242513;37.3182205065234;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;967;True;38;-1.30588940466578;30.0855744761231;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1365;True;40;-1.7300650249345;31.0935131096521;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1735;True;44;-0.711205418317708;39.7408327195257;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1257;True;46;-0.899144564291156;40.7022447196591;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1561;True;42;-1.04275271101633;41.7994182012162;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1094;True;40;-2.58837716001152;31.3399223364058;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;6734;True;62;0;38.5753908264348;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);138;33807;True;73;0;44.6228657547452;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);26;9349;True;60;0;38.6827820021009;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);34;11451;True;58;0;34.8402087117656;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);89;1746;True;101;0;8129174.33993685;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);131;1437;True;111;0;95144788.1094105;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);680;17632;True;102;0;355414.111305282;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;24211;False;-1;0;13.8312431595579;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;40735;False;-1;0;3.46515570291683;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;12709;False;-1;0;11263674.9963837;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;13601;False;-1;0;13.8031931353568;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;15348;False;-1;0;2492667.82307479;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;8605;False;-1;0;3219371.64172173;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7831;False;-1;0;83373740.0554897;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5234;False;-1;0;93791183.8409993;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7638;False;-1;0;38038163.0702155;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3551;False;-1;0;27343773.1959741;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4854;False;-1;0;68226705.5130683;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;6013;False;-1;0;14759113.0854934;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;720153;False;-1;103.18795498777;202.686032308363;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;16132;True;43;0;133.120085618071;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);176;86228;True;84;0;324.716940897317;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);785;327986;True;101;0;420.395122710533;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);159;90579;True;94;0;339.286027892058;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;290593;False;-1;144.609463615195;314.43225595892;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;360320;False;-1;131.330549960152;276.743770954488;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);192;62540;True;95;0;329.656111078681;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;180554;False;-1;480.975373816245;866.072511380155;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;233742;False;-1;235.378670444966;425.444262433442;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;128929;False;-1;319.763213959625;615.097803089768;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;122919;False;-1;506.958608648479;959.95470073528;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;139008;False;-1;592.81709268035;1029.3181784433;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;84783;False;-1;314.438431086343;969.596442541412;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;81521;False;-1;443.054153786005;925.870930592102;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;65247;False;-1;748.63409018366;1396.52675190788;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;91548;False;-1;974.221361652414;1969.3823682361;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;56749;False;-1;972.888604007542;2083.29930179774;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;40418;True;54;0;68.9444252711461;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;69607;True;38;0;58.8357937369853;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);33;108945;True;60;0;66.8469394877176;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);47;92297;True;38;0;38.3266340101159;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;27492;True;65;0;111.128988016876;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);51;265863;True;34;0;34.1040015048044;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);247;809286;True;70;0;72.991538207151;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;9510;True;31;0;20.1137389818502;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;40637;True;25;0;37.9227770406766;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;60047;True;343;0;231.40452801867;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;6752;True;135;0;83.0982882381082;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;19947;True;97;0;121.830326882259;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;45660;True;267;0;134.311370615826;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);52;386928;True;95;0;60.7605609678673;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;4432;True;110;0;111.588091010544;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;94192;True;112;0;50.5050524227874;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;148937;True;120;0;29.5210800550639;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);34;243085;True;117;0;36.6679900223368;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);27;80589;True;325;0;743.645371164569;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;17694;True;77;0;89.8617841512158;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;196114;True;211;0;44.2162464540623;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;105006;True;88;0;50.3238274634089;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;228025;True;95;0;57.3595590817544;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;40339;True;79;0;96.6470673199839;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);50;471827;True;100;0;36.8047662528312;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;7079;True;122;0;111.366236292704;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;106760;True;261;0;73.5687439848187;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;17637;True;134;0;133.872303525587;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;21216;True;94;0;143.486944022797;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);21;69825;True;239;0;185.871917471416;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;109446;True;130;0;35.4192774896255;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);32;81934;True;254;0;304.767726288598;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;8041;True;102;0;87.5934828477917;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;2308;True;45;0;38716.7043191017;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;1477;True;67;0;119661.468936832;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);22;2175;True;92;0;135931.621706162;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);83;5459;True;116;0;315504.301495581;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);62;2346;True;87;0;1380625.37825584;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);59;1898;True;84;0;1701756.42751392;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);57;1753;True;83;0;1729923.00798056;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5170;False;-1;0;5172391.8988512;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;1044;True;43;0;86670.2426074509;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1449;True;50;0;104632.123791687;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;1052;True;50;0;226513.480608275;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;1441;True;54;0;230096.808772413;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1355;True;45;0;125652.882403817;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;994;True;47;0;129257.958554235;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;1573;True;50;0;200958.428833353;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;1629;True;62;0;400183.262219711;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;1119;True;49;0;421872.730703198;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;1170;True;46;0;205344.371484431;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;1699;True;62;0;438914.510912225;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;2252;True;66;0;531574.409266996;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);35;1826;True;77;0;981024.953540099;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;1083;True;49;0;510017.606972462;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;2088;True;61;0;229550.406299822;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);27;1534;True;64;0;883336.146394961;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);64;3477;True;99;0;956272.042090576;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);99;4288;True;87;0;1256825.03208433;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);33;1666;True;74;0;961687.625558624;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);51;2871;True;77;0;832286.038185227;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);78;2918;True;86;0;1462700.300866;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;48189;True;167;0;263.046791549233;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;37779;True;203;0;260.145819285333;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);20;71018;True;209;0;289.382909572288;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;82463;True;235;0;304.698388830797;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;75755;True;253;0;307.147048381528;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;64684;True;271;0;319.746945120151;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);43;104368;True;307;0;356.081877963494;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);21;42140;True;128;0;141.546948448098;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;21149;True;99;0;123.183724434195;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;19826;True;107;0;83.872396183537;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;17960;True;122;0;117.335864054648;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;18366;True;114;0;117.838836347817;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2231;True;45;0;36.7577279119133;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;4946;True;55;0;44.0331366062506;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2657;True;38;0;28.5015439944306;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;3424;True;60;0;46.29441858821;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2119;True;42;0;44.6125287172754;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2278;True;41;0;37.0958469071963;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;55141;False;-1;114.394811026155;223.711933930658;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);104;77971;True;79;0;330.61621095602;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;125950;False;-1;809.915116725764;1443.52475478006;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3476;False;-1;1814.98726426076;2751.94572355502;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);901;827;False;-1;3413.90371615598;4746.06959505919;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4541;False;-1;7084.2555286037;9901.09373643581;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7272;False;-1;1035.10462253562;1511.98267443087;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);20;67021;True;46;0;33.4799753876403;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1223;True;42;0;40.9781864275915;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1762;True;51;0;42.221707981829;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7873;True;95;0;91.3759077334201;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;7373;True;90;0;84.5845182593053;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7320;True;99;0;84.9858308770091;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;10214;True;97;0;87.7287416008262;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;8275;True;102;0;86.3082507209573;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;6437;True;89;0;86.5939917509643;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;6789;True;99;0;81.1293957091124;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8298;True;100;0;99.4103282089923;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7605;True;104;0;90.6587241938893;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8424;True;105;0;90.0378308982361;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;6632;True;99;0;87.8478982978426;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9204;True;109;0;94.8740665030185;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9339;True;111;0;98.3609130160024;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;7915;True;109;0;93.2873873307217;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8472;True;102;0;99.3405630834069;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9820;True;110;0;103.897191610635;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9833;True;108;0;89.9720842984258;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10464;True;111;0;87.4533426031506;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;11494;True;110;0;94.661717946782;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;10867;True;115;0;110.590751387007;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9445;True;108;0;109.985929364206;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;11860;True;112;0;99.7599681850466;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10428;True;112;0;108.631215434932;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;13399;True;116;0;108.001338197401;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;14255;True;119;0;109.663726068092;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;15588;True;119;0;108.688745435303;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;15023;True;122;0;104.383960460225;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;12729;True;114;0;110.68912907832;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;15872;True;123;0;107.191598946188;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;14099;True;130;0;108.918333611135;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;15252;True;128;0;112.457932740293;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;15380;True;126;0;111.076098116478;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1012;True;38;0;38.3733992781951;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;801;True;32;0;28.8442694561112;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;655;True;34;0;33.3715772353107;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;682;True;38;0;28.7877056281355;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;550;True;28;0;31.7514937315683;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;956;True;34;0;37.0331775295106;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;814;True;34;0;37.0995453433523;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;710;True;34;0;36.9843003466542;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;764;True;32;0;33.0154010695187;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;888;True;34;0;38.9929108561487;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1599;True;38;0;29.0766378169019;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1020;True;34;0;43.7793526167902;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;888;True;40;0;37.6581746084792;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;996;True;36;0;36.6504905085092;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1258;True;35;0;32.2074267770952;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1538;True;44;0;32.1147693514876;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1404;True;44;0;40.086707311795;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1411;True;50;0;41.5825681552479;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1125;True;40;0;43.9692793585871;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;985;True;40;0;34.9693049501691;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);17;6674;True;62;-9.91587762846432;39.0791550908705;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);245;57365;True;73;-10.408307753671;50.2641744921971;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;9313;True;60;-8.79019610391631;39.4721129997836;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;8715;True;58;-10.3965883581358;30.9236813238603;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);69;1220;True;101;-7.76160915442076;5757388.69000196;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);170;1908;True;109;-10.4836904047131;37400045.9699381;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);598;16897;True;101;-12.7416300788962;513243.323349176;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;18243;False;-1;-11.9575657515869;236792.211923088;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;45851;False;-1;-12.2298423532877;2.31259701873633;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;15679;False;-1;-11.8270680996179;276415.74186322;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;13457;False;-1;-10.8399615889767;13.0961617443244;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;19632;False;-1;-13.4670672467512;350535.570843849;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;8729;False;-1;-9.83135162247495;1249569.57262235;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);853;8465;True;109;-12.0263425854765;56824288.7907568;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;5445;False;-1;-12.6911184984327;73425316.7913731;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;5046;False;-1;-10.980308892998;67558379.0766605;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3539;False;-1;-13.1731922245147;9678822.6855889;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4302;False;-1;-9.46608567521413;69358440.5253667;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;6630;False;-1;-11.0062666883964;14812515.9360354;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;665226;False;-1;167.511673559292;204.813074332494;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);30;32552;True;33;0.381262290031242;146.5610505342;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;367641;False;-1;506.76660214162;523.939688321044;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;321574;False;-1;345.012648979168;388.151269496389;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;394668;False;-1;522.890740124619;538.876224133371;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;240657;False;-1;338.81812605815;399.496843821005;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;370792;False;-1;268.640402473026;332.982128217743;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;319744;False;-1;266.098875338171;325.311297385072;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;153461;False;-1;770.456382364283;810.341268464876;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;228168;False;-1;507.06928988001;603.746536473407;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;136544;False;-1;641.215902512526;673.77346649215;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;95590;False;-1;1084.96721132461;1156.76295990145;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;148236;False;-1;1037.46060842639;1176.20357596296;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;81445;False;-1;1041.18733067574;1233.0823004264;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;81753;False;-1;622.659733150768;787.568299671312;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;73375;False;-1;858.301447644829;1102.95091182047;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;93807;False;-1;1986.78783322744;2235.89285671251;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;51190;False;-1;1901.00297894242;2247.1747733463;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;14865;True;50;-2.69884048936425;68.0037961534846;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;33739;True;38;-0.34706644692888;57.1480357116123;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);47;156386;True;60;1.73335277272034;65.9301663294531;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);55;86010;True;38;-7.3487314181188;45.62112249142;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);97;199679;True;70;-1.87979252417319;114.349062998641;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);81;423400;True;34;-4.79149384903906;32.5862811116381;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);78;309212;True;55;-6.02789042039035;66.4313118311417;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;7306;True;31;-2.56304697834313;20.3203872861641;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;65277;True;36;-3.90452909886421;37.3263392053279;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);87;252449;True;200;-7.29927429302336;1583.28311386988;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;14302;True;123;-4.1238277044985;163.506469320131;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;27557;True;103;-6.1408395500174;125.047162457506;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;58546;True;210;-3.17029215849958;132.796442489192;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);32;265184;True;97;-5.86066990178066;56.8646394881183;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;6997;True;100;-1.59904712729965;60.5984273058984;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);16;161360;True;84;-7.62689259553504;48.0921103394909;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;356308;True;94;-6.48300106231513;36.1436129157931;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);29;210985;True;111;-7.54218116865633;35.5745194329296;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;34079;True;189;-3.76322233413965;1462.17761056895;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;16120;True;80;-4.28578056005322;76.1338252048284;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;128617;True;174;-5.25529842557543;46.1407055555827;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;110948;True;89;-6.9217383281008;53.0517531012504;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);40;316519;True;76;-6.75312791813388;57.8984280227122;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;16637;True;77;-3.73900512522927;87.8225509561582;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;346630;True;96;-6.52835050353476;38.546195968106;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;6115;True;108;-2.67491580928758;57.5788094024617;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);83;227964;True;199;-4.93565283401061;1742.79887881175;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;12703;True;120;-4.24737013515003;161.980982100498;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;11351;True;110;-1.75646110827118;136.379046589698;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);31;144730;True;255;-3.52056637828301;133.592972932821;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);23;182886;True;108;-5.51643765543838;34.8978226789608;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;34010;True;196;-4.3387202349634;1452.24991029504;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;10056;True;108;-5.44384626790718;77.6507908609174;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;2166;True;54;-8.30229849777193;38399.0495903661;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;2203;True;71;-1.04598203720292;118930.659648951;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);98;7345;True;67;-4.1553919089667;163217.056412286;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);40;3165;True;97;-8.54364169715325;205852.24458648;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);90;12119;True;99;-7.1912098124536;284781.449355442;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);121;5076;True;86;-5.76097043688354;1224426.51224015;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);179;3781;True;81;-7.25414297191779;2582517.41773237;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);279;3924;True;119;-6.74876180711704;2750737.82229537;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;2175;True;41;-2.15786798552727;101032.480489646;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;1370;True;41;-2.10177404484435;116124.145922804;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;1898;True;47;-4.24480482282047;107151.768847616;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;1242;True;42;-0.894921975257969;147565.136076354;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;10349;True;49;-4.52731313881534;55887.7094719416;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;872;True;41;-3.47389816813824;180856.741619409;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;1676;True;52;-2.04413616835935;164447.349243009;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;5231;True;53;-3.87036125272045;91213.2810284625;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;1306;True;51;-2.60803333157809;270368.340444651;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;1475;True;44;-1.10230379452661;172902.700414947;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;1204;True;49;-5.42974235449903;292423.284347319;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);23;2937;True;66;0.434655212287938;324659.698604968;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);48;2491;True;77;-5.63665876192228;885837.49037175;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);42;10955;True;75;-3.35106792531741;94859.032226694;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;1914;True;59;-4.70741432790263;584561.629901057;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);57;2516;True;61;-1.76566267132027;1122851.11788635;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);40;2185;True;77;-1.86072770330879;869116.730650728;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);75;2763;True;88;-3.37496700382621;1354542.84940273;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);77;6766;True;74;-3.90951423825359;418612.458879684;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);53;2318;True;68;-6.74457913210657;1142722.82471427;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);131;4193;True;90;-7.67113515847544;1452599.83793422;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;11749;True;141;-5.09874105765487;238.853341978149;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;15244;True;145;-7.7783861077319;248.140353570184;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;18040;True;151;-6.67478080339828;267.500058639532;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;21009;True;173;-4.86365030870151;287.381762073744;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;29676;True;183;-3.80262012078501;319.569580292962;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;25998;True;187;-3.89074702873509;319.717985743018;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;34201;True;199;-6.71061636606372;329.417379793119;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;8212;True;102;-2.75782429985158;97.6316644306306;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;8783;True;96;-4.35390281690082;87.1689955026819;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7802;True;84;-3.21214585763196;59.9607469879401;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;11372;True;102;-6.72536913943417;68.9261576949245;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7633;True;98;-5.28153773923595;85.7508408723578;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2808;True;50;-3.45561297939727;31.9396302771305;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2778;True;58;-4.9315875937408;38.6297431889306;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1946;True;48;-6.82981434023946;29.9606179140304;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2008;True;59;-7.67903294885587;46.4564270546211;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3533;True;49;-6.84212724890006;28.0754734577764;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1279;True;38;-4.52541072137346;24.82736840408;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;68409;False;-1;29.1581838383093;135.700582978329;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;27631;True;50;-8.31830846592163;113.077405390778;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);417;123395;True;82;-7.43807788990257;476.9602704716;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3572;False;-1;2567.66679543843;2708.71720205487;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;843;False;-1;4679.97301176966;4762.97036675164;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4637;False;-1;8634.00255488498;9454.12288560343;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;7557;False;-1;1270.57182725144;1448.27082663708;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;28182;True;53;-7.06452379703351;20.7050020088814;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1016;True;42;-1.08782807358434;37.2923132967548;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1719;True;51;-2.29504990461102;42.2620672928275;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6342;True;90;-3.22689633114261;59.8691661469339;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;5971;True;88;-5.28934036736753;74.7777645543902;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;5630;True;95;-1.47209601242116;74.2702526695186;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6016;True;97;-5.27383499737315;70.9931900769003;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6489;True;96;-5.35639730098687;67.2330262793929;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6083;True;101;-3.48629110342673;79.6117613311713;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6512;True;97;-5.78510543465057;74.3405049002041;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7079;True;109;-5.26172456349191;67.6859476754365;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6037;True;102;-2.98800804262571;81.5797094080079;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7106;True;105;-4.47470232770508;79.0169102547365;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6411;True;103;-4.46671008430189;80.5899372280145;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7712;True;102;-6.60610214180476;70.1642214415587;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7511;True;109;-7.79162639360264;75.2238847412072;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;10108;True;105;-5.82861582181471;54.6991675564592;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7612;True;107;-6.49404090472669;78.1786541129313;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7184;True;112;-3.81474281959398;86.2981454824734;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7963;True;115;-5.03237181247402;78.1357025970461;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7417;True;108;-7.22627812720179;81.9073595215598;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6930;True;104;-7.77560303289189;89.5780491403909;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9682;True;119;-5.64391879678815;66.9374220704086;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9315;True;113;-3.60216187512953;77.0980356781833;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9192;True;119;-3.60032499171347;82.259228272912;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;8080;True;115;-6.86809391724743;91.7108743855582;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8642;True;110;-5.4651120626291;104.571923813553;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;9962;True;116;-3.14573658798754;74.0266215882372;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;11120;True;123;-4.87288603778437;74.9915456444878;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;8208;True;116;-2.36653115709788;101.912406111664;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;8136;True;114;-3.65515492799929;100.941515250862;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8088;True;118;-5.07241526172105;93.3757508879489;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;9468;True;118;-6.03698911649585;89.0405701127713;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;10236;True;121;-4.6878847146323;90.2036835598386;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;10968;True;128;-4.75699282276454;91.6273299515908;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;718;True;35;-2.73396743269007;36.4373909353138;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;596;True;28;-4.55876305311308;25.8664703773215;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;701;True;34;-1.95368251955429;36.8105175421245;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;820;True;36;-4.06072849608046;28.6604400966793;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;769;True;32;-1.11479450804715;30.3520227535409;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1145;True;34;-4.96932404228991;28.8995519098956;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;996;True;40;-3.02255182073143;33.2903469623752;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;723;True;34;-1.38596743348606;37.0290174499503;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;838;True;34;-2.96868946021215;36.2962185976356;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;871;True;38;-1.95288896584687;33.9500418209042;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1160;True;40;-3.55670391315339;29.1914566743834;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;728;True;32;-3.04191928761945;42.3835993893938;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1294;True;40;-1.38723764486386;43.8566195525194;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;912;True;40;-3.79421836179839;36.5912805856243;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;994;True;42;-2.5484361325281;32.317600304052;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1192;True;40;3.66149029024459;32.7969402368122;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1251;True;38;-2.3349169507443;43.5617950128614;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1503;True;45;-2.68613912433001;39.3109912947159;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1232;True;44;-1.83775156940602;40.8221558174547;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1438;True;44;-4.49407579139648;27.7880364130877;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);36;6501;True;64;-11.5422481706113;38.8366919468892;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);310;33046;True;73;-15.1019270260998;45.106996909344;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);60;9576;True;60;-13.8946025094806;39.4817772355672;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);66;10279;True;60;-12.4830719911891;34.6268726807769;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);149;1269;True;101;-11.538211797283;7437233.3712169;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);269;1557;True;111;-11.8946364749844;28120091.2612646;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8754;False;-1;-13.6101040369566;742666.105185045;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8237;False;-1;-14.2671337915707;18.3483846103813;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;17593;False;-1;-13.874812057726;5.34226626311713;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;7356;False;-1;-12.6545509940574;589578.58776029;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;6531;False;-1;-13.6280351634405;11.9569705202389;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;7086;False;-1;-16.2216517346427;942844.713506621;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2561;False;-1;-13.5814952382493;4320911.68200497;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;3210;False;-1;-12.1923487612347;91305826.9118823;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2329;False;-1;-15.1507449972652;38075973.6694189;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;3186;False;-1;-12.5856515127217;26621721.1750066;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1111;False;-1;-12.2351426309777;14035867.7198494;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);901;1515;False;-1;-14.4746008568948;53761785.1741885;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2105;False;-1;-12.6833594041785;12503559.3892411;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;306475;False;-1;165.766785297171;213.727804831847;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);455;176362;True;42;1.1540013442417;93.0631517999441;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;170723;False;-1;503.560849344809;525.532088869761;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;122956;False;-1;389.495430167238;478.177255195019;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;219840;False;-1;518.706823704814;539.080349800859;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;121737;False;-1;380.907768072361;478.526261453887;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;181663;False;-1;271.217619496904;339.420932574891;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;166770;False;-1;262.721137289777;300.117997613783;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;74312;False;-1;734.315684624584;823.633889994876;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;100828;False;-1;502.434591302111;577.761034909786;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;66915;False;-1;637.779896462063;698.453400952965;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;48008;False;-1;1059.97034462203;1163.947288875;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;72814;False;-1;1036.95068072474;1175.16820030921;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;40376;False;-1;1112.06992816454;1267.60645833552;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;39608;False;-1;640.187571820084;991.067541511695;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;35419;False;-1;912.83508144509;1320.34036807982;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;45829;False;-1;2152.28808385449;2328.07954134334;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;24203;False;-1;2246.92737468381;2361.00203266862;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);113;142600;True;50;-2.50127000218702;69.9393537010933;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;40365;True;34;1.16988863424936;57.9120867292544;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);473;738634;True;60;-8.35326351571067;65.3811910869949;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;93849;True;39;-9.24418674479368;36.2321619791086;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);30;36501;True;45;-3.78187224316281;138.325571477391;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);61;197632;True;37;-7.78913182529845;35.949236136553;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);99;197595;True;63;-12.2035538780173;77.9659219687467;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;37452;True;32;-9.46447205888388;27.1865318285833;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);26;107990;True;33;-3.40301568730452;37.0859732737426;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);175;248492;True;198;-8.43629315432151;1571.7153633964;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;10441;True;118;-6.09888139895473;190.968151473633;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;22194;True;95;-10.7681978420935;123.928238399842;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);78;190999;True;213;-7.02014151864991;174.105973318567;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);104;385649;True;103;-7.6034350793705;59.4475106040277;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;20209;True;120;-8.01502899427961;53.7525571526295;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;90170;True;89;-9.73817985359076;51.6886633653223;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);205;854787;True;93;-11.2931206520291;37.5360232054085;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);99;315777;True;133;-10.6388978037292;38.2681313669227;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);55;67232;True;213;-7.40598006951243;770.102274595281;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;43797;True;79;-7.53426780278967;80.5032380168971;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);174;480599;True;188;-7.45137119930095;60.51018881181;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;106301;True;92;-11.031996479534;53.1402739662764;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);70;274412;True;87;-6.7806204872003;57.394775071801;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;14563;True;77;-6.54135596342228;73.4870935409341;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);104;488324;True;101;-9.27823970632016;32.2587127264261;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;6873;True;118;-6.11919274824973;59.7862510914665;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);178;274668;True;213;-13.429840672711;1442.02606158449;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;24438;True;128;-4.50357188318072;158.969360230548;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);4;13955;True;98;-9.74158893589359;139.684473212547;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;18254;True;224;-2.96916410785506;147.38853831733;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);47;160942;True;136;-9.8786296976556;43.7338217467907;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);28;35587;True;206;-6.30640095110181;1393.96237221146;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;6258;True;107;-7.18810451048421;58.4439365471409;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);33;2134;True;44;-8.57526791459929;38134.2325063934;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);32;2217;True;76;-2.54355657364638;118020.063776884;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);271;9304;True;90;-6.72375512168074;147269.146336755;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);97;3050;True;95;-8.7022246801777;211640.758314121;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);192;12147;True;100;-10.392290414555;285455.594836093;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);245;5053;True;85;-7.4486091059378;1228375.87477047;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);341;3763;True;81;-10.7537584655924;2591909.39850227;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);509;4031;True;123;-9.85563833801121;2669140.37287201;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;2196;True;42;-4.27956144925283;96031.3606999328;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;1369;True;41;-1.06401089058585;116123.963091467;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;1968;True;45;-6.07188282386212;100818.4603522;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;1248;True;42;-3.32210784241114;144684.567577628;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);61;10312;True;47;-1.54601375588074;55902.1727600072;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;886;True;42;-0.0337803485801658;176205.994102589;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;1744;True;51;-0.145939135577912;159451.497908933;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);46;5229;True;57;-1.82432490509627;90924.648849781;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);71;10768;True;54;-6.58617494632414;56479.3311062796;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;1467;True;44;-1.95860734108412;174016.958993516;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;1206;True;48;-5.25555386242514;290158.305312553;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);53;2360;True;68;-6.10692501686106;411338.536715404;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;2167;True;70;-8.69990954417146;1056579.96861883;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);99;11117;True;75;-7.20828071222577;93775.383961294;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;1893;True;57;-4.28700268976207;589829.230048544;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);125;2471;True;62;-3.55023949946062;1142622.70152394;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;2771;True;76;-5.67540483783036;790053.628321639;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);210;11926;True;95;-5.27822101698148;317829.236250347;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);165;6765;True;79;-6.15231704079962;425154.054133944;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);110;2260;True;68;-10.8074999836213;1168194.46082823;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);259;4202;True;92;-12.1930782756748;1450550.67669357;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;14346;True;147;-6.05534961404453;231.639423266626;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;20588;True;167;-5.32489483320691;265.694155905193;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;22504;True;161;-5.83098419302925;282.813004906092;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;29754;True;177;-9.31038784317837;262.43840037586;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;28061;True;195;-10.6268205411392;295.53323810429;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);28;37543;True;191;-6.12297552067913;341.164820585668;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);33;39958;True;197;-6.26592102792615;356.75339201036;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;12845;True;114;-6.36978243927418;74.4363742613336;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;9642;True;92;-5.81007216318529;76.9104649871023;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;10296;True;88;-8.79773389260173;50.6845088441811;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;15346;True;118;-6.7055177600472;64.8207779096256;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;10454;True;100;-6.48682237439464;76.7318949446369;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;6625;True;56;-6.931574273859;25.0384802675425;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;4378;True;63;-13.4886579291619;32.7352119939251;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1905;True;42;-3.09565127304727;32.1013300671827;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;3809;True;65;-6.06172984487828;38.5885079919065;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2802;True;47;-3.83670086814456;34.6662318567627;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1718;True;39;-8.15630655140923;31.5910656990322;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;27866;False;-1;77.8886861971311;145.449282165299;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);49;45635;True;63;-9.63532391513516;88.9976055137249;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;61077;False;-1;1088.17723049343;1266.34037981656;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1446;False;-1;2592.17518513774;2824.20421943455;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);903;275;False;-1;4690.97257683597;4737.84667490226;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1753;False;-1;9301.42958612335;9835.31888070201;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2896;False;-1;1398.07105828782;1539.03985803071;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);200;263362;True;62;-8.9841941948589;18.4824336946702;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1619;True;48;-7.58000773049006;28.0748070368291;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;2631;True;53;-5.8125607620507;35.484018698461;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7912;True;91;-9.0636313230123;57.5850692423478;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6855;True;102;-7.70149558941613;61.9253033488695;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6263;True;97;-8.19409117062992;69.516316755115;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6380;True;97;-6.3189895963853;69.6332872296588;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;5623;True;91;-6.01726388434639;76.7567142424676;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;6760;True;99;-6.82095182662938;70.8839726176118;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6306;True;100;-6.2907382648241;74.2296579326275;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7017;True;103;-6.82406245356196;68.4842201422338;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;8235;True;105;-7.65248629323066;73.6254271280388;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;7460;True;101;-5.86830042617937;83.0882586686352;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;6328;True;102;-8.2631044178404;82.2168843420725;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8607;True;103;-7.48266554306188;77.3697656089509;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;7617;True;105;-6.32192168590129;83.2492198831686;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;7653;True;104;-8.46722569537496;80.2329049345774;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);12;9937;True;111;-6.13080572962445;83.5706090147034;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;9417;True;113;-7.27493533279074;83.6945189506408;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8452;True;118;-3.55945460939644;80.2713392418294;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;9241;True;110;-9.21143193772169;67.0744469251855;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);12;8822;True;111;-6.82051411096476;84.2040686900545;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;9197;True;122;-7.35306869372389;87.3188408660496;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;10195;True;118;-8.5798715556227;70.7467066864993;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;13152;True;116;-5.64105416396922;65.2301775620177;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11607;True;125;-7.91562213511891;72.0043136779009;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;8685;True;123;-4.57111999020346;92.8027494848115;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;9923;True;128;-7.1099610263924;77.8098793493567;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11307;True;121;-8.65555158736056;82.5000477425315;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;10102;True;114;-9.23736688874336;74.6674683528686;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;12360;True;124;-7.38231602167936;73.4108762783227;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;10855;True;127;-9.66279231029544;81.7065086913763;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;12661;True;129;-8.43128685709031;75.0251374399049;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);21;13083;True;127;-10.597577561344;75.8679408082934;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);23;13024;True;131;-8.00950002028571;83.096228249173;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;754;True;34;-7.51417608740949;37.466336404962;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;603;True;30;-4.36284273898255;28.5303908381521;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;806;True;34;-6.31447531402884;35.9224173845587;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;766;True;36;-4.542553298123;29.2917856328399;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;523;True;28;-6.19253791597485;30.2704198041942;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;777;True;32;-8.37324692465508;30.6036708431126;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1045;True;42;-3.90723652730528;37.6184974980601;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;692;True;32;-1.59829275503202;38.5277538367957;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;729;True;35;-5.27847861593629;32.1169172448566;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1399;True;38;-4.2265624020293;38.9597867292994;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1041;True;36;-3.69213587069947;29.6258985155172;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;989;True;34;-7.13777453502936;43.9027470681256;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1120;True;40;-4.91252985804136;29.0655133206518;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1101;True;36;-3.40731200444758;33.6090059301731;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1661;True;38;-7.8009666657174;30.4318558009664;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;953;True;36;-1.20636858680469;36.4971140941121;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1404;True;44;-4.68290523190054;39.7416044194185;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1788;True;46;-6.19694380038159;34.6593668828481;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;959;True;36;-1.17194746722934;40.2249081517435;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1290;True;41;-3.84446099721445;37.5685663169096;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);39;6735;True;64;-13.9810328144955;37.3921414190784;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);565;57350;True;73;-19.7149250350596;49.9057834017427;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);57;9031;True;60;-15.5242170683832;38.9713638788495;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);62;8915;True;58;-14.7220680464353;34.1502729400423;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);156;1324;True;101;-15.8417022771549;3579199.09797915;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);365;1881;True;109;-17.6427403502113;40588230.9649351;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8989;False;-1;-19.6185067007141;964639.071583042;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8384;False;-1;-16.6247433674764;18.2340086670341;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;17698;False;-1;-20.0608090631513;4.50060072917188;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8265;False;-1;-18.9927555402469;519608.301015418;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;6657;False;-1;-15.7969706944072;11.7913160556007;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;7261;False;-1;-18.7199643833541;927639.646857059;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2415;False;-1;-13.1149580984172;4640218.06227144;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;4037;False;-1;-15.8996434201472;45656059.0970346;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2171;False;-1;-14.3816096460324;18580254.537841;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;3166;False;-1;-15.5118782442641;28329119.0014424;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);901;969;False;-1;-17.7399763838775;17530506.3322239;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1577;False;-1;-22.8422232287471;15643947.4145235;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1814;False;-1;-13.7079785823188;15736930.1931545;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;318583;False;-1;161.854350154265;213.41120448643;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);42;22475;True;41;-0.266326023890378;109.055405092111;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;179551;False;-1;499.4682737928;525.162847323358;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;163825;False;-1;337.551067002757;402.179557509608;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;214126;False;-1;513.408497061916;539.950274174351;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;119384;False;-1;329.939906930747;391.89211579651;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;149932;False;-1;264.907731173603;427.704228229111;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;175301;False;-1;293.34899372032;338.36824573257;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;73837;False;-1;728.996931801479;802.349366232839;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;117120;False;-1;441.80396084646;560.732415879094;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;66627;False;-1;633.729295459616;678.955835129009;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;48134;False;-1;1079.50131885221;1163.55827853713;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;73354;False;-1;1033.06648908453;1175.07856297026;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;41874;False;-1;1070.56630025862;1217.86553400533;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;40225;False;-1;893.903646564807;1107.78080362115;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;35027;False;-1;915.773908440477;1214.07590965779;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;47183;False;-1;1982.94771347851;2256.01417723426;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;23070;False;-1;2313.76929890865;2417.20030715663;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);43;56025;True;54;-10.1845355940522;68.9521893877729;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;9028;True;52;-0.450022751151004;57.0094104210963;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);211;345763;True;76;-0.201079940249777;65.5594055908474;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);199;141495;True;41;-7.56093815668812;45.376205574084;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);41;42734;True;64;-9.15327554464943;98.5328760068081;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);98;253942;True;36;-12.2117426250924;34.7283996078968;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);63;114857;True;64;-10.6146931252102;70.9059876394675;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);3;17670;True;32;-11.1032704482871;21.3871906015502;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;58523;True;36;-6.10532626065909;39.8964701578547;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);170;251543;True;204;-12.1986477175577;1559.50945702473;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;12282;True;133;-9.28056728029781;172.285219748737;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);48;135327;True;148;-10.9921975237203;95.5492957420603;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;11915;True;199;-6.96408412405524;187.889463370179;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);89;339997;True;104;-12.5607980746343;57.9112596366735;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);2;5653;True;102;-11.7167920000953;73.507119181771;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;122893;True;88;-12.355844424889;45.6467260900568;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);42;228141;True;88;-13.961494507475;23.8698758502072;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);24;72939;True;133;-14.3209964083712;53.0908371483619;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);87;113427;True;216;-12.889146559395;480.534465123868;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);35;59570;True;71;-8.89902498438926;92.8831215749969;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);46;130339;True;180;-11.1535041324564;58.6488509338891;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);39;182713;True;90;-13.0067517524251;46.2999553348016;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);90;340315;True;103;-10.8473656471149;58.3865897616322;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;58307;True;84;-9.65896350927065;85.7362596195022;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);154;686989;True;88;-14.7574813675384;32.1910488251138;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;12364;True;116;-14.248431304208;65.0911748246815;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);168;247901;True;203;-12.1403757007043;1576.16230673289;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10221;True;122;-8.68908586777611;194.886989414351;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;6984;True;120;-9.11240201800357;125.583893332006;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;139214;True;221;-10.1747995002975;173.89526420911;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);120;389392;True;125;-15.0408897066227;41.211320969926;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);92;115124;True;213;-12.2637985860596;472.807207033236;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;15104;True;103;-8.80123972728416;72.1946671775578;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);34;2175;True;43;-11.0766608312052;37984.6329673327;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);32;2197;True;74;-4.21413671598312;118649.531086342;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);240;7360;True;66;-11.5113630686888;163541.993908966;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);99;3227;True;101;-13.1440610543262;201894.747388219;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);193;12322;True;101;-12.9312464871177;280699.46569175;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);223;11439;True;80;-4.2614682912033;396237.676946423;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);333;3673;True;83;-15.16593455593;2655148.61477666;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);481;3729;True;125;-12.4934719515392;2755108.90339461;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;2197;True;42;-5.53252653405645;95949.1523240843;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;1371;True;42;-9.70051838389834;115962.500133896;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);15;1925;True;47;-4.83692223523143;104854.375431239;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;1248;True;43;-8.79366437262884;143607.083042931;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);60;10134;True;47;-5.68672408174195;56425.5482431489;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;864;True;41;-0.811542680915228;182249.735023721;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;1622;True;52;-6.99086200319086;170646.643057017;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);46;5213;True;52;-7.25182824850785;91034.8636282351;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;1272;True;51;-2.13650656690882;274381.891657018;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;1471;True;45;-3.76107871862672;174241.243547002;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;1215;True;48;-3.11668083462475;293922.658696516;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);49;2442;True;63;-9.39605915640149;361680.778663907;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);103;2238;True;71;-7.14960936435096;1000104.01332506;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);98;11167;True;76;0.624264977161594;93422.1819305758;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;1900;True;60;-1.72644602829067;577533.299499559;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);124;2477;True;63;-4.69773246150106;1140060.63510409;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);101;2576;True;74;-2.19656614328633;858759.314820479;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);249;12308;True;105;-4.25261419294082;373592.359890453;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);163;6768;True;80;-9.07797474405666;423785.452467834;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);109;2327;True;72;-11.5784081292705;1139820.3995481;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);254;4148;True;91;-13.9467114080485;1469047.66992917;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;16951;True;157;-11.247402288631;215.320427337741;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;19651;True;175;-6.79288992596623;255.607877772326;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);14;27614;True;185;-11.6341610569608;223.48822659577;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;29452;True;191;-9.24026288194597;303.181905790019;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;33945;True;187;-5.39822426564133;303.972834037496;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);29;37958;True;213;-6.49004142831831;329.725869255838;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);34;41572;True;209;-10.1241929540138;347.371975827972;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;20887;True;122;-9.71969296995777;90.7470753540058;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;18766;True;107;-10.386809671376;51.7421025942327;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;23535;True;84;-10.3215216157346;40.0587809534993;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;15208;True;115;-9.91141658901169;89.7363330450353;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;18229;True;104;-13.1618785930663;65.391796346654;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;8770;True;55;-7.82266251101549;35.9486711743973;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;7321;True;62;-8.06791395538534;43.1050314908913;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;5030;True;42;-5.89954280319756;21.1133492984367;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3783;True;63;-8.28071111624713;35.5398191310886;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3853;True;57;-7.55894728348295;30.7010621552372;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;5354;True;41;-11.9663459605263;21.0042983769505;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;28887;False;-1;42.6296848186695;157.471110469094;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);77;125597;True;56;-15.499817701196;24.9380699166547;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;52895;False;-1;953.376619134091;1204.27723028307;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1404;False;-1;2589.26931633123;2828.68647937336;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);901;261;False;-1;4716.13976488734;4736.31366292779;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1705;False;-1;9303.16097661934;9844.5661244647;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2880;False;-1;1400.897867138;1539.40870986334;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);53;147155;True;52;-14.5049127485045;23.0366745983157;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1868;True;49;-11.496122176652;26.3310571319811;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;2587;True;55;-6.27915751600274;36.0357925833548;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;5923;True;97;-8.81914259716718;70.8644917590231;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;8235;True;96;-13.0268802626604;46.1884145949543;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;6349;True;101;-12.2875595489175;71.9267900657637;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;7146;True;96;-12.6364041267971;66.5731444381413;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;9913;True;103;-10.939070099578;53.4133194060882;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;6832;True;98;-11.0034456239738;75.9971257497141;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7878;True;108;-9.23377498569356;64.1754586842028;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;6940;True;105;-9.98954559563456;79.8739696598827;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8798;True;111;-11.9518277542032;68.9579788616237;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7080;True;99;-9.95088261175302;72.9540189942063;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;8970;True;113;-9.9978251132811;67.6658235981576;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;9379;True;112;-11.011421176932;64.3912819275993;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;9318;True;116;-10.6617626122982;76.8737654411751;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7090;True;105;-8.99409056958817;79.4269635706292;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8566;True;97;-12.1188044394558;74.3774658231439;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;10345;True;117;-10.626479086635;68.790949664836;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;14969;True;115;-12.309009406678;48.9781747949573;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;13256;True;113;-12.205463840826;62.0329569812248;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;15699;True;113;-13.1947611047451;48.3461818952375;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;12260;True;119;-12.554578918928;61.0715354527373;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);14;9641;True;119;-11.5772487376248;87.2182452278156;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;11287;True;120;-6.79003158738873;77.2814367981968;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);14;9541;True;118;-8.39923686866973;85.4854267900093;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;10800;True;122;-13.2432985883285;76.3983273021044;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;14536;True;124;-11.678318976208;61.9461253122239;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;10199;True;120;-10.5057489655181;87.460255126355;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);25;15493;True;128;-11.7092592652254;58.9743368950713;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);15;9759;True;130;-10.3309942702526;82.6836317534099;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);26;14544;True;122;-11.9718952146739;74.4664010772018;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;12760;True;136;-13.1599926661247;82.0634691956106;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;13977;True;123;-11.1275497626955;74.3732367536494;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);26;15544;True;134;-11.3833495824193;76.5051816291493;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;918;True;34;-8.98189553347303;33.5045701576148;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;661;True;30;-9.24758183126515;33.0396448564662;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;943;True;38;-7.63826600249029;36.6345553780216;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;821;True;36;-4.4182464043112;28.5454535819642;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;573;True;30;-6.03127164013681;31.5510099810279;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1381;True;32;-7.15853599066957;31.0333330655064;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;866;True;34;-7.45844282197614;38.719485730301;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;702;True;34;-4.63647874336313;37.5089834908627;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;793;True;32;-3.48381622624052;29.7270285292926;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1607;True;38;-8.58411562513318;33.6780510582087;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;999;True;40;-9.90008145426023;29.3045225730477;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;890;True;34;-4.40434525436563;43.5634930121294;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1606;True;40;-14.0903034503368;36.6387523362781;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1365;True;42;-10.7003440597175;32.6172204277331;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1828;True;40;-9.54220218763453;29.5403099505124;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1111;True;37;-3.76293700642121;40.8162686943164;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1500;True;42;-6.00462477949256;41.2689633223809;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;2625;True;48;-7.83997496288494;40.9980004288568;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1454;True;42;-9.72140444282761;43.0737502711358;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1306;True;44;-6.34636456280704;29.1639075830049;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;6907;True;66;0;38.1651163458967;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);135;33299;True;73;0;42.6776946185359;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;9877;True;62;0;37.8690672573482;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;9178;True;58;0;34.085121025654;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);78;1353;True;101;0;12282311.5436121;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);262;3359;True;111;0;88375891.3646942;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);673;16807;True;101;0;1136432.22223713;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;17939;False;-1;0;13.3291753820433;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;31597;False;-1;0;7.07707754499603;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9054;False;-1;0;10853055.5691453;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;12824;False;-1;0;13.694088094257;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;18786;False;-1;0;2974871.65422615;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6996;False;-1;0;6865601.93300412;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;7849;False;-1;0;92722321.8079613;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;5240;False;-1;0;66889857.2094181;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6579;False;-1;0;51556450.5565991;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3748;False;-1;0;40062994.1780715;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4911;False;-1;0;79894954.1479097;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6716;False;-1;0;13288662.9124945;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;721955;False;-1;56.1919038396939;209.150133270947;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);152;165138;True;55;0;90.651304133999;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);79;38634;True;103;0;338.989417302189;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;373439;False;-1;137.254766676826;404.638391432279;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);36;18788;True;73;0;391.862165615534;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;268988;False;-1;118.414734576625;382.251035309183;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;403111;False;-1;89.0415864875405;280.651504732323;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;320135;False;-1;117.866394470784;324.81413292129;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;152715;False;-1;333.875399446611;929.600277668051;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;196767;False;-1;183.109286351354;568.710691143875;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;133295;False;-1;173.028310921802;586.912286143267;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;120992;False;-1;419.710586278043;1038.98832323748;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;133326;False;-1;476.579404162149;1146.81523129438;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;82208;False;-1;306.038174623085;998.61388572926;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;79257;False;-1;248.729459700295;1050.49127922248;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;77387;False;-1;475.257707974728;1321.38881596992;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;93484;False;-1;867.471343168655;2052.06837619458;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;61669;False;-1;982.145858782326;2160.62624202998;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);123;319701;True;66;0;74.3225571209725;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;103650;True;42;0;60.1546491869536;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);273;904120;True;74;0;68.0679098254223;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;31796;True;42;0;26.3705711334323;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;15092;True;70;0;107.408923877906;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;101930;True;39;0;46.44832053235;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);96;421028;True;60;0;62.9060549478297;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1437;True;25;0;28.6958235866495;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;125770;True;33;0;37.7865895384579;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;96152;True;341;0;81.4492061438535;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;6293;True;118;0;117.763485056843;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;17428;True;93;0;118.561614715436;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;118389;True;271;0;149.583921098762;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);41;320126;True;76;0;59.3532348585453;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;12686;True;129;0;85.604373974194;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;113432;True;109;0;49.6532778887041;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);69;645461;True;119;0;35.754375583274;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;113601;True;112;0;47.9604865565932;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);100;426944;True;326;0;74.1332209192372;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);19;58388;True;74;0;110.767053719076;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);76;338030;True;205;0;70.7421752440722;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;45380;True;126;0;52.4894472733126;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;397056;True;105;0;60.5328207925261;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;22728;True;73;0;95.8387421443192;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;273866;True;148;0;43.6546759538778;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;50131;True;112;0;68.6919567064501;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;48693;True;262;0;113.273515226584;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;8959;True;149;0;132.237128996427;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;28520;True;112;0;139.829744658363;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;72682;True;329;0;149.561420304762;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);53;346118;True;136;0;50.8730613413844;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);147;557644;True;371;0;98.5312996110309;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;13085;True;141;0;93.8341667107742;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;614;True;49;0;61033.2791918766;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;2572;True;64;0;129772.923604088;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);27;2486;True;99;0;146808.568193243;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;1265;True;69;0;289472.041666486;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);45;1714;True;78;0;1326077.36413279;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);76;2314;True;90;0;1836422.10873947;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);289;5729;True;147;0;2197542.70182489;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);356;4202;True;149;0;3569335.51302435;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;1634;True;46;0;66079.7656575221;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;1122;True;46;0;119194.066654265;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;1323;True;56;0;218969.713013333;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1827;True;59;0;191873.882448975;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;1448;True;44;0;161984.342261568;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;872;True;39;0;181409.82064329;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;1834;True;57;0;228940.815439873;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;1116;True;54;0;663187.582914843;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1117;True;51;0;321381.539619043;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;1386;True;56;0;185187.219016261;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;1951;True;76;0;400006.612521869;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;2685;True;79;0;496464.47251309;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);49;2645;True;84;0;918830.956302367;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;1581;True;63;0;593501.772367469;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;2043;True;65;0;319745.795767446;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;1393;True;59;0;516140.299930329;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);58;3364;True;95;0;901736.792971632;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);89;2910;True;90;0;1551829.29114746;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);26;1570;True;78;0;754096.119139689;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);35;1928;True;74;0;898707.658412845;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);82;3265;True;85;0;1265626.06645712;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;44152;True;193;0;242.495396485138;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;66736;True;231;0;255.133772401402;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);24;86951;True;225;0;263.221035776303;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);39;125217;True;235;0;292.308509042359;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);52;153561;True;267;0;305.366558782984;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);73;196511;True;277;0;323.002106315188;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);94;228644;True;313;0;368.521320644604;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);25;57079;True;126;0;99.1238837871486;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);26;48006;True;119;0;86.8744250378172;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);19;45873;True;107;0;109.287642573509;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;31914;True;125;0;126.191309491016;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;42845;True;123;0;118.796926047092;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;5513;True;46;0;42.9453793597421;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;25325;True;61;0;54.9636758194633;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;2247;True;40;0;35.4289939034111;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;5359;True;59;0;51.9922103791123;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3315;True;50;0;46.9245441890701;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;4121;True;38;0;38.4942309497264;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;49442;False;-1;100.942735883244;276.550787833464;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);66;68227;True;104;0;281.632484296736;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;129880;False;-1;444.276063852615;1516.04221788011;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3550;False;-1;1509.21333784484;2887.48250932166;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;825;False;-1;2380.56694238352;4735.49444193988;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4481;False;-1;4653.90687493193;9798.83339693472;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;7585;False;-1;743.809637801717;1574.22232653342;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;80195;True;46;0;33.4275932259194;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1201;True;42;0;39.6859292808281;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1590;True;46;0;43.431906817532;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;8212;True;94;0;78.6039249102794;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;9097;True;100;0;74.8585118008195;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;13879;True;107;0;82.9649153659974;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9746;True;101;0;82.3715212980066;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;10556;True;99;0;89.350276109109;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;7984;True;96;0;88.4450728152746;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9767;True;98;0;81.3346153638018;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;13185;True;107;0;87.0938748361107;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;8224;True;98;0;89.203433850653;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;8445;True;103;0;96.0756275165734;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9788;True;111;0;90.0855854141054;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;13539;True;111;0;86.6473996600868;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;13971;True;117;0;101.506861440584;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;13490;True;108;0;82.9642587793971;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;10667;True;105;0;95.9118971339915;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;9829;True;120;0;93.7423100830769;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;14447;True;108;0;106.479789632366;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;12313;True;117;0;98.8923428340202;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;10152;True;116;0;96.0827376555194;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;13686;True;126;0;103.385848047291;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;12755;True;117;0;110.264208623699;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;14248;True;116;0;98.7963188199515;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;13231;True;120;0;92.1371767329583;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;27088;True;130;0;97.6623439422359;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;20534;True;121;0;107.655377646923;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;18546;True;124;0;111.973749215845;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;16406;True;132;0;103.316840379249;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;16132;True;126;0;112.123406311444;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;17931;True;125;0;107.212073457783;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;16573;True;130;0;98.2671689022791;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;15707;True;128;0;88.4759840000751;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;18133;True;127;0;95.2897566735628;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;709;True;32;0;35.4545706704396;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;657;True;26;0;33.8365242001374;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;771;True;34;0;39.5400365348968;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;938;True;38;0;32.7098579745431;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;596;True;28;0;31.9503292943743;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1093;True;34;0;33.6051066601458;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1154;True;40;0;38.9941034963534;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;747;True;34;0;36.141933627787;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1176;True;38;0;40.6773608254853;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;892;True;36;0;40.3933660219865;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;964;True;40;0;36.0742356496355;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;959;True;38;0;40.4192610321988;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1009;True;42;0;34.508366726469;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;905;True;36;0;36.794598834701;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1193;True;40;0;37.2700199364643;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1274;True;40;0;36.4871850703263;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1449;True;46;0;37.6638292997772;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1870;True;47;0;47.7192618347403;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1169;True;32;0;47.9574437068318;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1173;True;43;0;37.5613817115133;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;6817;True;64;0;37.7639865792459;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);131;33510;True;73;-1.04106088471372;43.3052228846988;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;9371;True;62;0;37.9183825691341;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;10339;True;58;0;33.9301959709414;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);104;2037;True;101;0;5910819.70972492;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);280;3835;True;111;0;28258712.8685954;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);544;12860;True;101;0;4220865.86754617;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;17675;False;-1;0;4808282.86822196;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;35252;False;-1;0;5.41199443940949;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;15203;False;-1;0;197281.14773819;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;12990;False;-1;0;15.7609787488647;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;17289;False;-1;0;1212488.33011661;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;10552;False;-1;0;3134999.40741622;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;8206;False;-1;0;93730633.953689;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5365;False;-1;0;79828162.2949282;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5056;False;-1;0;75575767.3514157;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3606;False;-1;0;60648776.8835322;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4277;False;-1;0;74416534.6796169;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5166;False;-1;0;22093792.7079594;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);114;95232;True;87;0;216.621481784946;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);66;78180;True;60;0;93.3188940822542;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);293;142311;True;120;0;289.848072180133;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;360893;False;-1;19.7432420254765;411.927644639044;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);57;33025;True;86;0;377.476243513463;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;295142;False;-1;23.5322765394307;209.788472841043;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;359266;False;-1;6.76247099527797;290.738531165529;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;291267;False;-1;-0.800701745330457;317.961685946638;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;169950;False;-1;148.263899405133;919.544319881457;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;237405;False;-1;69.5109891489763;455.054216356874;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;134277;False;-1;68.3261483562806;787.166331887493;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;122999;False;-1;170.68284556751;1148.34803483934;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;132760;False;-1;165.447853240685;968.220652773846;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;84400;False;-1;190.882455252035;1006.26831830454;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;81188;False;-1;159.247337537638;1081.37044136707;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;68725;False;-1;248.448522795143;1522.60431942234;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;92602;False;-1;437.301363369618;2038.93723878908;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;61727;False;-1;314.57628907619;2030.61095210449;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);42;112560;True;60;0;77.4853576112002;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;16613;True;46;0;61.3100254198185;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;91554;True;46;0;71.1212023319834;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;21713;True;46;0;25.7517013260789;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;15011;True;65;0;108.211716682309;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);44;223503;True;35;0;40.1045085532292;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3122970;False;-1;-3.47080986768329;58.4655491125108;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4210;True;32;0;28.840260367118;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;23614;True;33;0;38.9966388495164;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;178836;True;192;0;73.195196238455;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;6761;True;142;0;124.586610307381;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);22;127073;True;113;0;111.3171100451;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);40;160086;True;265;0;147.903702495015;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);41;314625;True;94;-1.06254537262906;59.2868292037289;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;11801;True;93;0;98.9721195636726;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;149130;True;88;0;48.1446233186396;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);85;670527;True;171;0;56.7652483675597;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;89614;True;147;0;34.7879536950872;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);295;1008033;True;371;0;84.5332197393263;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);37;80905;True;101;0;83.7407042538628;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);168;759165;True;246;0;67.7298310431328;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;129452;True;100;0;47.7516873049747;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;88487;True;76;0;53.4413516436364;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;57302;True;74;0;111.063883336037;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);116;932813;True;156;0;40.210964073304;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;15036;True;92;0;100.086541072764;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;8980;True;188;0;740.815534500678;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;14051;True;141;0;112.606289801298;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;19860;True;113;0;129.311107044222;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;169008;True;303;0;156.577130486187;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);116;694792;True;146;0;51.5815475108585;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);315;971915;True;316;0;92.5987749620338;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;31358;True;130;0;98.5667848373405;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;3149;True;67;0;42063.40844797;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;1968;True;64;0;152385.433544515;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);93;9434;True;144;0;98853.7474788644;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);51;3266;True;102;0;346485.707424423;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);63;2774;True;92;0;1178040.94894188;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);71;2282;True;94;0;1630911.48058313;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;8680;False;-1;0;3866266.55759675;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);560;7910;True;174;0;2530666.95585;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;1518;True;43;0;68090.1970515228;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;1289;True;40;0;129986.853153667;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;1794;True;59;0;305824.578486787;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;1420;True;47;0;196143.048936134;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;2175;True;60;0;235520.681818087;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;1187;True;50;0;128757.827024611;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;1561;True;51;0;266290.452397248;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;2553;True;70;0;249074.513804163;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;2526;True;75;0;293247.511381365;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;1223;True;51;0;193293.619564385;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;1893;True;56;0;668678.51942025;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;2162;True;62;0;656449.745315968;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);43;2341;True;79;0;889323.769019041;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;1811;True;73;0;465129.26016498;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;1950;True;59;0;322761.070805038;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);43;2392;True;72;0;868291.530142344;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);97;4592;True;104;0;1053360.00736747;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);78;3101;True;102;0;1255005.44281364;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;1226;True;57;0;1175859.45082266;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);63;2628;True;75;0;1218616.21412162;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);103;3859;True;98;0;1500753.38909362;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;125271;True;189;-6.31353657350758;254.07500054257;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);61;222527;True;231;0;279.324341907964;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;101058;True;211;0;259.672461753304;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);56;178429;True;241;0;290.559812747331;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);123;348555;True;249;0;302.756408208767;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);225;556620;True;277;-7.17923257543782;347.428041129433;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);295;649503;True;291;0;345.143549038431;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);109;222416;True;149;0;105.056101182546;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);32;84154;True;121;0;77.2668165588268;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;58972;True;124;0;120.340656047244;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);48;95739;True;129;0;114.352395012457;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);48;96199;True;129;0;126.999557591646;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4051;True;44;0;36.1641198747561;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;52309;True;58;0;52.3180109155;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;3964;True;40;0;33.8122480752125;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;15347;True;53;0;51.1745543673828;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;7875;True;45;0;44.7720263249575;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;10030;True;40;0;37.1725498648611;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;50033;False;-1;47.2123989675556;235.182653648438;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);179;169977;True;84;0;126.952510780607;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;127498;False;-1;289.953675290739;1493.62026409569;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3548;False;-1;775.969816381591;2793.63459598757;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);901;825;False;-1;2169.70639392134;4700.1376614078;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4603;False;-1;1992.99286574039;9990.58988194421;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7689;False;-1;293.810087459297;1570.36716370097;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);775;2437356;True;47;0;45.6493929461438;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1568;True;47;0;39.880713539128;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2556;True;52;0;42.2668844825737;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;13838;True;88;0;74.6428320061419;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;12241;True;99;0;69.4864431330208;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;9822;True;99;0;83.360655097135;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;10838;True;103;0;89.7602261056077;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;11793;True;102;0;87.1926210001679;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;15527;True;103;0;75.8346751525076;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;12144;True;108;0;85.2390116291435;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;11722;True;109;0;83.4818390008405;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;16137;True;113;0;83.297509376261;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;15116;True;107;0;93.5235107251618;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;11759;True;106;0;97.7205006170859;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;15251;True;107;0;82.842052305911;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;18148;True;120;0;104.532256794449;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;13183;True;113;0;89.3557456010802;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;19528;True;115;0;87.7599376824088;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;12203;True;111;0;97.5939669948614;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;16174;True;118;0;92.7296975908192;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;14480;True;109;0;91.1015734016167;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;15123;True;112;0;88.090915326431;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;13608;True;116;0;102.527310772858;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;19243;True;121;0;94.2882036387418;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;17274;True;117;0;81.2840231782726;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;20784;True;123;0;96.5443082466423;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;21785;True;128;0;105.088400127438;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;21796;True;116;0;98.8832294736524;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;22353;True;131;0;108.735683833827;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;17139;True;125;0;101.442182777232;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;23185;True;118;0;86.9053115751947;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;16824;True;116;0;96.6212745444535;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;20856;True;123;0;108.880252985152;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;22782;True;127;0;100.548578689608;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;18880;True;125;0;109.376320897082;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;642;True;30;0;37.1779640528437;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;585;True;26;0;32.4643368534423;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;835;True;36;0;36.8488655282719;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;754;True;34;0;31.0111265939413;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;735;True;30;0;31.6879527261673;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;983;True;36;0;32.8158214269646;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;979;True;34;0;39.5794391739486;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1016;True;36;0;39.8494433272253;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;829;True;36;0;34.8109035115441;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1084;True;34;0;42.0581463187296;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1245;True;38;0;33.6987559066611;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1066;True;36;0;37.515716034787;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;960;True;42;0;35.2331517491863;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;989;True;38;0;37.8499946644613;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1304;True;35;0;40.4854226670311;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1109;True;40;0;34.1237448138457;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1954;True;44;0;44.4272544807102;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2210;True;47;0;49.2073470113941;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;974;True;38;0;41.4356404731749;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1914;True;42;0;43.9949696768578;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;7085;True;62;-5.36122803253728;37.0977762914486;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);136;33509;True;73;-5.52148951225774;44.036403893016;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;8936;True;60;-6.3943043243552;38.2101740606895;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);30;10515;True;60;-12.7068058457812;34.5553899827205;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);66;1224;True;101;0;61.289904993628;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);201;2499;True;109;-4.24436874767897;118763761.879803;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);615;13817;True;101;-6.69350612893724;10019255.735315;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;18729;False;-1;-38.483555935212;12.8343311734406;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;37779;False;-1;-8.09697207437266;5.70929197497132;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;12386;False;-1;-7.90867982117575;4768806.76325823;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;10976;False;-1;-6.26504346059063;15.2036561476565;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;18206;False;-1;-10.4865639472922;1213584.14084359;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;6432;False;-1;0;18558850.979169;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7912;False;-1;-57.9157233724609;89477345.0677264;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5317;False;-1;-0.361405672484906;67435449.2802205;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7290;False;-1;-1.03530341294689;48273843.5507053;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3632;False;-1;0;29638213.3690719;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4237;False;-1;0;68962470.8661023;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4975;False;-1;-7.47528905083564;23477410.0268576;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);380;320615;True;70;-80.3726680335065;207.206668913237;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);94;111243;True;56;-24.9382244628943;100.79673212588;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);254;103261;True;119;-170.224484926304;428.744621129976;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;372467;False;-1;-184.591882730319;411.460821980242;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);95;58800;True;105;-34.9185716345302;215.628105957839;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;262770;False;-1;-106.46379196108;342.273632333193;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;393385;False;-1;-162.847686671406;322.630282705302;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;350066;False;-1;-103.442397004027;283.0983172094;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;167303;False;-1;-321.757693404755;1012.9071891596;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;238997;False;-1;-107.672589560479;476.245782393988;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;119914;False;-1;-331.673015140413;976.668810911885;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;132269;False;-1;-285.347876119163;1070.52310192831;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;146991;False;-1;-254.607270991534;959.079675939978;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;82040;False;-1;-383.157646739738;1222.60997764246;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;77202;False;-1;-712.686775657579;1417.08690007305;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;68536;False;-1;-435.790760268277;1944.9338193006;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;93421;False;-1;-977.295372296954;2095.34463556711;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;59405;False;-1;-630.510832449832;2276.62287966352;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);128;392125;True;50;-48.927328673798;85.190375594877;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;82934;True;46;-28.6091922039942;66.7251892815506;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);32;128446;True;54;-39.0549567345537;79.1207493872163;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;4897;True;41;-0.333989991717122;36.9331240901539;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;9111;True;60;-4.39599528678774;78.7496280059959;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;115784;True;33;-22.5939195434004;40.2369754662104;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);264;796959;True;64;-50.5658446824402;73.4812533406431;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;13440;True;30;-0.0998121766544955;35.9142485906883;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;33559;True;37;-12.599079235149;39.6330682476595;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);68;444661;True;261;-45.2125315675397;82.1763484799648;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;18910;True;126;-10.6095125274349;141.894381569797;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;29887;True;94;-72.3132559174945;144.431861532132;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;28296;True;247;-47.1952018221075;166.498643689407;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);33;262050;True;85;-40.2191761773051;57.1975153850435;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;57947;True;117;-30.2811886418095;99.4206888208878;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);20;198780;True;131;-13.3548975074112;50.1554244853701;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);49;417540;True;157;-9.94455414708331;37.5015239554918;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);161;978815;True;129;-65.8169535793142;44.6057142260365;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2660442;False;-1;-91.5277333199255;81.3706339837355;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);32;66730;True;86;-32.2011289102845;90.1257567765746;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);139;657256;True;196;-61.2687483541455;61.6868363256382;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);33;262421;True;123;-49.8276381080042;52.2423724194212;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;183834;True;92;-24.0410240918883;57.3636233789979;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;73677;True;84;-34.5043434717211;102.764173560216;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);76;645226;True;122;-38.4250228839797;42.3593649024353;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;29342;True;118;-8.11620139046443;118.089431636371;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;49924;True;388;-28.6086391735854;179.794898114608;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;66729;True;123;-102.063366164156;161.349574865278;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;60425;True;133;-23.6582313837286;142.383781555718;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);36;124848;True;349;-126.222922891809;180.072471306601;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);193;1031408;True;135;-74.0900591920322;55.1077593083473;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);887;2627243;True;239;-98.3104780626795;78.0242560597144;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;25005;True;118;-20.3374997887725;120.014342719162;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);46;6501;True;87;-8209.50490458892;40667.811997026;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);15;1786;True;86;-2674.94126544336;182636.675109198;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);34;3243;True;102;0;154938.174840803;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);179;6872;True;84;-20687.5754979518;337978.410380828;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);81;3329;True;105;-17066.109863829;1249282.4400906;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);232;6382;True;116;-501.924749182493;2089130.40151117;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);130;3525;True;115;0;2042648.208571;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;6549;False;-1;-33123.3253938425;5233154.24749369;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;2852;True;63;-4126.79027633873;95016.0258564832;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;1238;True;37;-11481.1463237933;106899.804516684;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;2301;True;69;-467.181563095692;301809.794969972;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;2690;True;66;-8325.97450352191;214871.491655299;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;2744;True;59;-67725.9024713367;227103.579419576;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;1621;True;40;-14307.8622572956;171169.230471679;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;2260;True;63;-6855.41193398612;225746.28046309;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);48;3871;True;98;-153344.997178906;554137.503464838;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;3490;True;71;0;347850.161428226;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;3410;True;78;0;279886.448751146;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);30;2762;True;80;0;481253.820477411;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);36;3816;True;92;0;410060.700181971;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);56;3834;True;100;0;677317.632698483;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);46;2610;True;63;0;796248.129222;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;2257;True;74;-110593.721128165;360327.933082878;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);52;3472;True;81;-2619.78403973377;739771.378957621;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);95;6032;True;115;-20226.777875352;798082.700414639;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);226;8556;True;145;0;1506940.26247376;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);50;3006;True;98;0;730211.119453061;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);69;3050;True;87;-118.15478993623;1175385.77539693;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);234;6796;True;97;0;1918353.75628927;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);48;192108;True;187;-66.9772283619688;230.074696046931;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);134;469231;True;179;-95.0962080332473;270.021996296368;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);247;760514;True;205;-134.336081568047;247.695778433227;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);813;1971906;True;231;-142.07200983088;319.389296888111;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1738924;False;-1;-138.302116892998;319.180687804836;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1552668;False;-1;-162.869378014706;366.406484859802;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1443576;False;-1;-242.919377016273;418.78680301832;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);794;1121105;True;123;-86.7895468859376;151.625942383409;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);305;669776;True;105;-36.3249276673997;67.5451856375301;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);221;479321;True;96;-46.5652045214396;87.2739117411703;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);449;732123;True;121;-53.5733225947895;135.504790166145;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);401;688527;True;116;-60.9684951339946;118.711215854807;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;236539;True;50;-13.8092277339228;42.3723254715984;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);73;504746;True;54;-20.6245156032024;57.1616395393394;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;29466;True;41;-11.0558460600486;35.078194259134;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;225233;True;56;-16.9113722891228;50.4113138027785;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;54115;True;44;-13.1159115213368;49.3491403462271;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;23073;True;40;-4.26464334887383;36.7382544244942;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;48670;False;-1;-37.6650964347234;347.38989043711;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);240;443547;True;100;-91.4547447070255;123.09762292109;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;121001;False;-1;-641.265046557356;1602.86266666531;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3498;False;-1;-3.08602812834715;2879.43851941311;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);901;841;False;-1;1041.35318797863;4769.08625050913;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4519;False;-1;-385.257315918918;10049.5759968106;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7585;False;-1;-155.414264610354;1570.48589160341;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3553377;False;-1;-29.8534230573526;50.9012062777122;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1318;True;43;0;36.4653973444919;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2545;True;52;-4.46770926189997;47.2104543500339;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;21430;True;99;-3.65616355741999;72.089211491484;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;26176;True;92;-6.30841058496377;76.7741167473048;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;27948;True;104;-10.6106457489521;73.6718863823314;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;14191;True;101;-12.6875077308741;80.8314436246078;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;36933;True;95;-17.8765615406651;76.5900914272232;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;22445;True;101;-8.381879981683;75.4831694112262;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;21406;True;95;-7.39588050714173;81.6153069745047;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;27089;True;107;-10.9746802595012;88.2774015587646;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;14460;True;98;-11.6723529963509;82.4121897767428;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;29699;True;110;-32.5696113152806;80.8193240865025;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;15125;True;104;-8.87991089782052;81.6207696320598;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;31235;True;107;-26.6355682146512;91.1793416754638;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;24019;True;116;-17.0556042913726;85.2379274417164;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;26187;True;110;-5.47333974559093;70.9007463620121;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;23774;True;110;-25.5155017598453;90.448229035609;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;18308;True;114;-15.780585888597;96.0455392297417;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);34;45004;True;117;-26.3660084785383;98.1150624569286;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;33021;True;115;-4.1283998214553;89.8441707624198;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;31107;True;117;-16.4517988451855;77.6806626790267;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);20;25146;True;123;-12.8763653408997;100.330620122249;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);22;27777;True;120;-28.8223654742587;78.8748535714974;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);41;51709;True;117;-33.286798718759;81.1134075179814;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;21320;True;118;-12.8955173399048;92.840309658484;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;28841;True;117;-10.1737349069017;87.9643963463387;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);40;46003;True;125;-22.5202759824228;81.5038228470017;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);43;49328;True;129;-23.9734986930686;87.6081320016871;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);55;62772;True;123;-16.5211963313583;94.8346179100128;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;27600;True;130;-14.216368861244;101.515739396512;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);62;64965;True;127;-16.6553702845928;85.5798338848323;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);59;61671;True;132;-20.2060893805421;93.7893891518793;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);64;66889;True;132;-41.8144361586357;77.0187414249188;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);57;60215;True;132;-23.0319178428914;75.4427735446701;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;859;True;35;0;41.937179254549;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;944;True;29;0;31.1632641503509;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;698;True;34;0;35.1562176448104;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;808;True;34;0;32.7437461802293;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;739;True;32;0;30.0241533737078;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;991;True;36;0;33.9885506736143;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;819;True;38;0;32.2416663470951;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;875;True;35;0;38.5566503506553;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1056;True;32;0;40.4687749938463;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1727;True;36;0;42.645509593138;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1171;True;40;-7.72061994600781;35.0424043046261;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;931;True;36;0;41.5571590344052;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1423;True;40;-0.109433711402061;39.442823205229;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1026;True;38;0;35.5467214948155;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1473;True;36;-2.20080115138446;40.3094352970292;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1362;True;40;0;40.4731223405507;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1363;True;42;0;41.618054536576;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1832;True;45;0;48.1521070441859;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1610;True;36;0;43.8855342549321;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2587;True;44;0;38.3578562493715;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);19;6867;True;66;-15.9959399139024;38.3251058793039;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);216;51956;True;73;-58.1114745447614;47.1405037846392;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);27;9888;True;60;-33.1276561477269;37.9231558537027;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);30;9731;True;58;-54.6166184415469;34.4761824897205;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);100;1959;True;101;-36.8095396889652;7128755.02823233;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);100;965;True;109;-26.020826212005;261511426.864375;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);754;16131;True;101;-42.8442546245956;5761859.8630032;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;16798;False;-1;-150091023.856163;3809986.80214284;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;26925;False;-1;-25.8559376470815;11.7053159466346;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3357;False;-1;-518769730.628507;531753182.773668;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;11824;False;-1;-10.0613785924244;15.8222199667303;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;18233;False;-1;-16.8059764233145;1131376.01459745;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8432;False;-1;-17.3539082284878;18120470.0382344;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8964;False;-1;-80558059.7437043;82985750.4011675;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5456;False;-1;-441828878.314355;96758450.6824946;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5735;False;-1;-36.2740622014683;99929308.4152683;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3473;False;-1;-39827532.7925963;107068604.25775;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);901;3426;False;-1;-278526753.52258;216016551.60552;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5627;False;-1;-10.980495948561;22172851.3451854;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);648;499144;True;82;-229.376142929768;209.221971500893;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);130;146552;True;63;-83.8907084158935;102.314813288813;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;389004;False;-1;-324.447882961481;203.097114605309;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;343767;False;-1;-342.68817348139;402.479253317929;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);110;68483;True;91;-274.479130763737;200.336859271686;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;269163;False;-1;-443.275728744386;402.137412318374;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;386317;False;-1;-242.77364054688;253.393159999051;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;310649;False;-1;-331.866691157736;401.060378778926;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;165479;False;-1;-736.442919308479;1051.70950292581;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;201859;False;-1;-419.426529955615;571.98929762401;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;136689;False;-1;-786.846159836129;789.749898605591;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;127549;False;-1;-1007.16209078893;1015.21060617453;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;138591;False;-1;-1004.37277583674;1152.82790028132;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;78549;False;-1;-821.567492986807;1473.7737092979;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;75399;False;-1;-1025.59724608642;1490.50058361862;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;70982;False;-1;-1401.71609206493;1835.08415142406;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;91299;False;-1;-1820.59383509157;2106.56171647454;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;59475;False;-1;-1502.76083314989;2086.15601489898;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2628722;False;-1;-203.130841805617;99.5450721099344;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);39;154719;True;48;-77.3418142702355;71.779621730879;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);146;600821;True;56;-131.217485688746;87.1493440774598;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);9;14705;True;39;-50.1203716353095;56.4884279460528;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;27796;True;46;-170.681913275535;94.9328826569317;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);20;105541;True;29;-57.4565075041058;46.5993475389154;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2685365;False;-1;-623.810101041317;79.4388928657482;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;204714;True;30;-38.8921304588226;35.0124481387788;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);18;109669;True;33;-46.521285768402;43.497681496087;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;162219;True;179;-743.762242951794;84.3217832029625;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);19;64814;True;140;-172.019272405808;163.814396698513;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);40;237698;True;140;-192.386308541783;128.35190063629;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;85330;True;275;-310.017457709168;202.298183712556;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;261873;True;86;-300.908899810259;60.2845937816039;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;93761;True;86;-173.714372668183;138.123057039442;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;210471;True;135;-247.597913975859;54.0416934722383;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);20;184482;True;105;-222.862700990382;44.5656767432591;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);127;661539;True;143;-256.320364981722;72.454561540621;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2375633;False;-1;-496.69471657062;106.248132096451;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);285;584212;True;73;-199.817124218587;110.025276002288;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);36;140997;True;225;-165.88668498905;101.192928829361;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;196116;True;119;-154.520388191191;55.7914628522547;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;210733;True;86;-182.278587157246;60.7917340829581;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);148;371064;True;76;-203.242284998161;109.859199947389;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);110;889729;True;117;-166.839010649326;39.6752972632001;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);14;42285;True;112;-129.049734884969;130.325001050933;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;329349;True;214;-748.294148843695;104.214009892362;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;36547;True;140;-189.206990149901;149.866049277811;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;278501;True;117;-233.905480818237;126.880784292508;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);27;128831;True;310;-294.596950021748;194.504823267447;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);78;450882;True;117;-179.028291242009;58.7401067192322;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);183;466193;True;263;-725.941259899922;106.104834084826;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);96;293132;True;142;-523.099511174145;125.848117477261;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);8;1632;True;63;-14682.2792807479;64666.7297040281;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);16;1969;True;68;-94292.2898783219;173386.259679254;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);55;6670;True;130;-61648.6265249278;102960.152558984;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;41799;False;-1;-222558.148198838;335479.758452069;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);500;9150;True;143;-1100291.46697261;2376699.98503447;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);195;6315;True;111;-507336.696396834;1672178.18932029;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8288;False;-1;-2465753.8726468;4630550.11972588;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);653;8180;True;181;-2005715.64983425;2999523.09751501;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);8;3007;True;56;-18064.2082262361;72887.6725485464;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);9;2801;True;47;-32652.1658316528;107239.103601545;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);19;2623;True;54;-27173.6328121815;291136.986814766;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;1984;True;52;-114512.025269623;226437.544564973;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;2875;True;57;-36205.9996701431;121645.444083059;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);13;2630;True;57;-450323.645048982;180100.301964163;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;3653;True;64;-231844.374407775;257249.940793655;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);46;3564;True;80;-205478.928843243;557756.435833413;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);36;4414;True;85;-305530.415682659;312661.462281648;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;4199;True;76;-74953.1638779198;284894.947138537;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);65;5014;True;86;-247619.540436668;588120.341434424;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;5097;True;95;-398039.936247155;569027.74427652;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);191;7919;True;123;-652877.399798696;1185542.02784009;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);46;3711;True;95;-439565.768201142;546510.030051429;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);30;2676;True;70;-251031.674219851;454802.206278488;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);172;6799;True;119;-1082543.42123267;1283106.79210464;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);222;8869;True;111;-1188711.46480726;1266669.90352834;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);375;10186;True;141;-929237.520735455;1771218.36565512;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);89;3928;True;93;-409651.813690984;1113196.37486662;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);111;4419;True;96;-513980.288377841;1277915.27370161;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);451;9880;True;121;-1350582.71001795;2349270.37666956;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);683;2327942;True;175;-296.68715536111;214.230244975024;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2171412;False;-1;-249.307419093227;283.715924141135;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1962701;False;-1;-295.208119998142;303.055988620697;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1844679;False;-1;-329.673043773414;309.452917606352;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1742694;False;-1;-317.944292551772;324.873833604939;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1548728;False;-1;-365.745863621992;387.466071924663;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1483484;False;-1;-347.063220558923;394.066019140686;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1127881;False;-1;-177.46737603098;207.936037968768;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1288999;False;-1;-194.09981783581;180.165682989993;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1382637;False;-1;-132.177186645113;130.731893234647;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1245167;False;-1;-180.36136643492;205.773201203697;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1284381;False;-1;-200.292002972354;201.665140210542;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);273;1681966;True;49;-44.7504236502723;45.8288525692515;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4510463;False;-1;-50.9821149436803;53.8865324981192;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);86;420349;True;37;-36.6704084360017;40.0358159393877;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);695;3862545;True;54;-54.2281223760119;54.9664029768231;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);111;566286;True;45;-40.863059713312;47.9826418813578;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);18;108166;True;40;-30.0787197209192;41.2481806800834;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;48242;False;-1;-234.173789842798;365.990202907257;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;378231;False;-1;-513.667534136625;475.448520596961;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;117324;False;-1;-1550.80679054682;1654.10651857528;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3524;False;-1;-1685.7275132652;2836.00885300602;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;801;False;-1;-1917.27678144242;4661.13996184032;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4506;False;-1;-4678.99138195619;9722.68277568945;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7446;False;-1;-525.657447991303;1569.15896728013;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3269826;False;-1;-62.4333694076595;54.870779930463;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1842;True;44;-6.76494035417998;33.5751092871327;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;5917;True;50;-31.221960733701;38.5660237990839;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);28;44468;True;97;-45.7939850526504;65.0604456512377;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);25;48747;True;95;-76.4558982974032;76.1092763093378;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;54661;True;103;-68.313615886515;73.3813376583338;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);16;26253;True;99;-68.1381581866933;86.0355668772478;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;100412;True;100;-65.1997779684422;64.7639200207955;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);43;69405;True;104;-46.6368828737388;74.6120623450266;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);34;54131;True;99;-74.8289982464977;76.3974288891978;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;71976;True;101;-81.0746217745341;78.6041197804451;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);41;64350;True;105;-62.8852205451786;54.5156126079268;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);38;56137;True;101;-68.2639012858494;72.9077154521096;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);72;102878;True;108;-58.2839777287376;88.1750088964972;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);48;66524;True;104;-50.5838241286119;72.6165682914806;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);70;96889;True;110;-82.8101055450547;80.6661944038245;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);24;36699;True;112;-86.4856329266662;80.6501938919547;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);70;78316;True;103;-75.2292412807622;97.4312607883142;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;79276;True;113;-109.181590281014;90.7964853856407;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);44;54054;True;113;-79.7281459084795;82.197571391188;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);50;63547;True;113;-92.0042831327779;83.5086065629179;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);44;56123;True;110;-93.5669663312181;92.8433877494108;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);78;94978;True;120;-91.8676610831716;85.7093620458984;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);70;79450;True;119;-94.3679708686889;65.3226765010204;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);118;135425;True;110;-78.3217451255775;74.5161875386194;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);162;184149;True;108;-59.3273800278158;89.5800245817885;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);238;245457;True;122;-109.696090179849;92.934222102035;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);180;182641;True;112;-76.0581951311891;88.5327983113432;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);540;542906;True;122;-104.608673342244;101.7133559341;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);81;79669;True;116;-112.971745073914;84.3732587447819;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);57;59778;True;120;-64.7016620616658;89.2130502661959;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);167;163403;True;113;-75.4514234859283;89.1097895305546;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);308;298330;True;120;-105.722046789734;94.9799154783599;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);170;165475;True;123;-101.168929711271;107.756808186199;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);160;157270;True;123;-88.5541668110129;94.9998500091341;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1549;True;38;-17.4521751127451;48.1402299135179;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1412;True;28;-11.5278084167587;35.6199614540394;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1264;True;36;-9.32849831622102;36.374309738748;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;888;True;34;-11.2988320316636;32.5527370493994;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1262;True;32;-13.2078962858698;40.9397483759624;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1630;True;34;-11.0156658470509;30.6207905597473;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1218;True;40;-1.74518348057884;38.6069416705264;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1155;True;40;-10.3513188247963;36.5129197984506;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1074;True;34;-7.86774576495064;41.0316759635226;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1528;True;38;-18.6948412392084;44.2032050895403;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1379;True;42;-2.22504728078117;38.5306013973325;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1238;True;36;-13.2946039636625;42.3046800985922;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1901;True;44;-18.6190188534942;38.455406102168;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1570;True;38;-7.69553850350829;39.0007090292146;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1339;True;36;-22.1352072355431;32.4507275170542;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1872;True;45;-2.16644354294364;39.6950194491871;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1775;True;44;-11.7622897401055;41.1627232473277;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;3234;True;50;-20.9584462267294;43.872858529808;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;983;True;34;-15.2887745224008;40.9448743128146;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;3356;True;46;-12.7240663180681;48.7030451020012;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;6308;True;62;0;38.9124589062076;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);242;58609;True;71;0;50.6790935400625;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);26;9414;True;60;0;39.1809450644364;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;9157;True;58;0;32.3491908030749;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);70;1253;True;101;0;3628238.50787484;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);107;1116;True;109;0;79287799.3519126;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);597;17113;True;101;0;1268526.42291003;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;19879;False;-1;0;11.4465731134668;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;46823;False;-1;0;1.96496815751274;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;13170;False;-1;0;1826420.33171799;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;13297;False;-1;0;13.7633825631219;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;19344;False;-1;0;3265614.77795266;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6909;False;-1;0;17457571.4067591;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7282;False;-1;0;124043012.021609;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5396;False;-1;0;85452295.2530365;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5227;False;-1;0;86607415.037262;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3751;False;-1;0;41844566.2830942;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4358;False;-1;0;92324835.095265;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6674;False;-1;0;15571656.9704888;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;665998;False;-1;167.204924570771;204.359210862858;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);208;141275;True;40;0;95.1361008351422;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;383630;False;-1;494.00012717396;523.23667194654;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;288849;False;-1;340.100120328926;381.375595183557;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;448971;False;-1;509.200410108641;538.433819951716;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;237945;False;-1;302.100175238214;330.385090077752;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;326851;False;-1;271.700231971406;310.689666707426;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;359224;False;-1;296.400618483871;321.961676233811;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;156442;False;-1;712.507091020237;836.410983697739;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;218306;False;-1;457.90073242113;512.997025562627;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;126130;False;-1;497.803742620723;592.072187453377;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;100877;False;-1;1039.68358540376;1150.42420448887;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;147601;False;-1;995.994473717545;1179.93638634068;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;67561;False;-1;1219.49399153925;1344.88819649629;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;82292;False;-1;837.900585225318;987.335698626175;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;70200;False;-1;1295.80235321168;1459.57804972792;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;99017;False;-1;1894.42528747922;2103.25856905223;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;59492;False;-1;1917.10888706716;2153.25503491533;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;46353;True;64;0;69.2815306336693;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);27;121928;True;68;0;57.786586998823;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;102836;True;56;0;65.0097350741921;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);93;194833;True;30;0;41.7057546387059;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;35972;True;41;0;141.014567150032;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);188;1009199;True;34;0;34.0056018493102;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);815;3146404;True;53;0;64.0680186327742;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2460;True;26;0;26.0699306453185;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;22053;True;26;0;41.0651188427914;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);58;150257;True;215;0;1849.97626593455;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;18313;True;146;0;160.880505008023;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;18280;True;103;0;134.167542977217;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);13;70742;True;221;0;135.507042371964;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);31;265405;True;76;0;58.0174119762117;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;5387;True;100;0;58.6124405132757;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;111730;True;93;0;53.4457061588477;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);49;481232;True;88;0;50.2735263683087;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;85865;True;98;0;28.5056329174291;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);20;54334;True;229;0;841.469759699515;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;12916;True;77;0;79.6171553133793;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;105580;True;188;0;49.2165471733019;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;126729;True;95;0;51.5813439570601;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);42;346957;True;95;0;60.6410904535904;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;12829;True;77;0;81.1939075422701;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);80;772419;True;100;0;40.1090237801941;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;4781;True;100;0;59.7033193761696;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);57;161488;True;226;0;1718.81936626982;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;10702;True;117;0;187.873755626257;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;19804;True;97;0;122.03042915441;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);34;174455;True;210;0;162.352208376887;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);10;64696;True;127;0;51.5880294617987;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;68821;True;214;0;690.87155095275;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;3200;True;97;0;59.4107514331706;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);21;3851;True;44;0;40324.0818809031;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;1214;True;63;0;149824.21718564;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);32;3137;True;108;0;128683.845531047;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);43;3189;True;57;0;247942.069445289;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);39;2248;True;87;0;874200.569728675;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);75;2510;True;89;0;1696206.89858843;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);46;1779;True;84;0;1406678.91446765;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);165;3013;True;114;0;2455543.74808251;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;1658;True;43;0;79134.2085352203;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;1090;True;38;0;126129.450841477;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1742;True;50;0;111591.833837249;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1166;True;43;0;188801.287654518;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;888;True;40;0;249379.914450144;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1530;True;59;0;104700.938145119;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1594;True;57;0;139707.03127391;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;986;True;54;0;485656.71399784;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;2033;True;61;0;223839.181126349;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;1409;True;51;0;231798.744056749;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;992;True;51;0;302915.937545931;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);17;2713;True;72;0;269957.865682533;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);30;1534;True;65;0;975372.146616449;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;1628;True;61;0;333468.987736244;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;3554;True;68;0;267351.304321323;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);32;1567;True;50;0;1060814.82639243;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);40;2693;True;76;0;765961.40720976;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);39;1688;True;78;0;1267076.17780231;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);34;1599;True;81;0;1108113.46446406;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;1718;True;68;0;868345.499104317;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);50;2456;True;74;0;1088232.00061155;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;16739;True;145;0;252.217073709786;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;18508;True;171;0;270.54408024324;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;23001;True;165;0;290.857426751581;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;25731;True;197;0;302.188363802485;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;31636;True;193;0;328.441299139297;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;35988;True;215;0;326.432013369381;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;46044;True;233;0;362.947590081299;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6496;True;107;0;105.958811976235;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;4349;True;81;0;90.8793094176313;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;3480;True;68;0;87.9318964224163;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5141;True;91;0;119.621205234529;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5099;True;84;0;109.095085498195;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1082;True;38;0;36.1326454252653;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1410;True;48;0;40.3943855769173;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;954;True;43;0;30.5534713150388;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1317;True;49;0;42.8937184347507;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1056;True;44;0;34.4851558744297;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;808;True;34;0;29.7694428548044;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);325;26470;True;59;0;128.238412062832;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;10259;True;46;0;216.653508501031;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);413;86454;True;85;0;1007.43939783816;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3682;False;-1;2452.3111266614;2703.70364827576;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;861;False;-1;4496.52828025475;4766.70619668515;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4805;False;-1;8433.58246514158;9483.53370331129;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7715;False;-1;1205.7176371873;1449.92497882231;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;7309;True;38;0;25.9697142830273;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;971;True;39;0;39.1840315925389;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1393;True;45;0;42.8995458431787;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5030;True;83;0;85.4132028380979;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4343;True;85;0;79.9885135387391;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5069;True;90;0;83.1427789613875;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5378;True;92;0;87.5050972487366;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4617;True;89;0;82.282516681605;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5200;True;91;0;89.2121586786211;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5399;True;90;0;85.8162655620596;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5539;True;98;0;90.0081300737093;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5604;True;96;0;91.6287554214224;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6468;True;99;0;99.1909272200332;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5988;True;102;0;93.3126217468704;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6033;True;97;0;90.9537385852407;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6400;True;104;0;95.4899670763106;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6094;True;98;0;92.4112914534276;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6470;True;101;0;88.8559151710934;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6942;True;105;0;97.9129059409647;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;7161;True;104;0;95.9000065816715;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6369;True;105;0;94.9009775367149;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6270;True;104;0;97.2287330460783;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6595;True;109;0;99.9202114534873;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7175;True;109;0;105.470067795046;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;6877;True;107;0;92.9610939261859;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7742;True;107;0;104.694016102971;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7902;True;114;0;106.368883280648;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7482;True;111;0;102.740211383922;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7221;True;114;0;103.619234634849;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7762;True;117;0;103.184822878774;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7881;True;114;0;113.867510570553;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7606;True;115;0;105.569576103863;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8999;True;115;0;114.396435185873;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8935;True;111;0;112.387527420843;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7912;True;117;0;107.562136522029;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;783;True;33;0;40.7904881847236;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;527;True;28;0;28.3296215156015;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;781;True;36;0;35.3564193359689;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;723;True;38;0;29.0158810932125;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;554;True;28;0;33.5343957078926;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;753;True;32;0;32.4615960993318;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;797;True;38;0;33.724795491447;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;731;True;36;0;35.4478396509545;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;725;True;36;0;34.1027896101675;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;846;True;36;0;35.8391595379899;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;999;True;36;0;24.9046784177839;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;837;True;38;0;38.0819667530837;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1223;True;40;0;42.8011349807376;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1115;True;36;0;34.3348168276743;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2343;True;38;0;34.5786728456069;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1004;True;40;0;32.8994639770815;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1546;True;42;0;41.8398532453887;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1202;True;45;0;39.7372621341847;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1577;True;38;0;44.6256884897864;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1351;True;40;0;32.1092780548581;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;7277;True;64;0;39.1322900216273;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);130;33099;True;73;0;44.1097535173565;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;9226;True;60;0;39.4634250852596;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);28;10329;True;60;0;33.4000212181035;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);82;1488;True;101;0;36918140.179799;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);160;1942;True;109;0;90512061.3950892;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);590;16756;True;101;0;2841683.74807399;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;18830;False;-1;0;12.9726173963862;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;46698;False;-1;0;2.06322640026214;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;16685;False;-1;0;247121.885750949;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;13577;False;-1;0;13.7862520665753;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;18443;False;-1;0;2112140.2028899;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4353;False;-1;0;11092012.982805;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;8035;False;-1;0;79736258.0501055;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5282;False;-1;0;78175900.7276666;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;7780;False;-1;0;37700982.8701854;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3766;False;-1;0;36763267.792331;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4929;False;-1;0;70164437.6445543;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5826;False;-1;0;47591000.9374906;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);233;208534;True;59;0;225.917790888554;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;20353;True;33;0;141.623775522426;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;387724;False;-1;468.000295173377;529.029739332826;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;255508;False;-1;324.00221195072;416.788991437828;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;452071;False;-1;482.400450517982;540.359037805587;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;246518;False;-1;315.014294874861;390.520528969268;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);308;112808;True;109;0;419.549606010874;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;332015;False;-1;266.406552876535;312.02661688426;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;164898;False;-1;680.40365375206;839.38705853652;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;230618;False;-1;451.820489142845;564.83655945962;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;143494;False;-1;426.778371696816;603.739551367999;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;112897;False;-1;953.013723430975;1126.96430352301;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;151302;False;-1;944.071691410649;1184.3798165689;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;85127;False;-1;1018.80124254748;1370.09949780855;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;84597;False;-1;805.462438696745;1092.66594801401;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;67071;False;-1;1072.81897467525;1468.19778856652;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;96458;False;-1;1771.55604056965;2020.45767846247;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;62443;False;-1;1431.19729033122;2065.46763806613;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);40;89135;True;58;0;69.2007487979968;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;82239;True;40;0;58.3350369792263;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);73;248897;True;66;0;65.3268844507631;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);66;107589;True;29;0;47.6893758478119;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;35884;True;55;0;106.724786780612;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);202;1341287;True;36;0;30.9284548078035;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);428;1734264;True;57;0;47.7421083547111;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1943;True;26;0;22.0955026865534;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;176654;True;37;0;40.4916458447988;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);27;91751;True;271;0;1410.1884425728;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;16476;True;131;0;163.218852901553;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;14611;True;118;0;109.555688045099;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;69931;True;274;0;139.479632856691;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);36;300239;True;103;0;59.2983267597436;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;11581;True;114;0;71.3527889947255;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;93713;True;88;0;47.9216377064356;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);64;607531;True;208;0;39.4598809316357;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;96508;True;105;0;29.6531435693071;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;68142;True;184;0;585.291328206559;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;19542;True;72;0;90.6039454316185;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);101;478151;True;203;0;70.9812892081409;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;139942;True;104;0;48.8894619330218;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);29;249993;True;76;0;57.2055341771851;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;19111;True;75;0;87.1513855673812;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;99152;True;199;0;84.545135791927;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;14009;True;115;0;67.198881247454;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;189763;True;320;0;980.676935861882;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;17834;True;119;0;161.467752812861;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;138352;True;150;0;102.02528170726;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);16;76424;True;234;0;141.087493844219;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;141075;True;117;0;35.601967504062;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);26;70521;True;229;0;654.883820805066;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;6743;True;111;0;86.4800388373468;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;4019;True;45;0;39020.1890169131;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;1197;True;60;0;153098.792274511;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);149;11183;True;123;0;131020.084585405;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);333;18730;True;73;0;304476.438201284;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);67;2093;True;82;0;1666027.08830256;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);92;3035;True;95;0;1674180.74085933;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);71;2598;True;91;0;1302911.16351978;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5011;False;-1;0;5514674.01576905;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;922;True;37;0;83492.0407136235;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1426;True;39;0;133042.355975323;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1001;True;44;0;191509.120255448;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;1295;True;47;0;196703.869923622;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1345;True;42;0;124095.19076257;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;1398;True;48;0;136493.934560164;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;1351;True;49;0;210862.997346027;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);15;1680;True;66;0;357748.814218756;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;1316;True;55;0;285849.360157459;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;934;True;42;0;294978.834515895;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;1767;True;65;0;275039.753711594;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);24;2061;True;75;0;548136.879239722;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);20;1098;True;58;0;861241.879646843;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;843;True;49;0;542462.438427965;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;1612;True;61;0;292309.528681478;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;2239;True;60;0;1101238.09208067;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);45;2752;True;77;0;816530.589824735;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);42;1681;True;74;0;1283308.56663853;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;1212;True;64;0;900223.862392591;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);66;3447;True;84;0;984102.850286909;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);86;3175;True;79;0;1527786.72374438;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;18411;True;185;0;248.898600333137;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;20788;True;181;0;263.319342978933;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;25495;True;185;0;276.137575284193;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;34667;True;227;0;298.347131269127;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;38707;True;239;0;322.348839368804;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;41070;True;263;0;329.447727421092;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;53957;True;279;0;348.896617554243;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;7298;True;99;0;121.801135581961;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;7968;True;95;0;77.0407943011923;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6206;True;87;0;101.931661822643;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;6121;True;99;0;120.716961184103;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;7121;True;96;0;108.215990410837;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1086;True;48;0;35.5811007131201;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2124;True;52;0;45.2097643464015;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;939;True;34;0;31.2085252334731;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1769;True;55;0;46.6153684196379;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1137;True;46;0;34.500836415752;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1007;True;37;0;29.8292884862979;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);651;49030;True;69;0;126.469476550933;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;12982;True;47;0;217.811484352649;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;206565;False;-1;992.002202195768;1159.54326803331;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3564;False;-1;2342.381702644;2732.6510436085;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;853;False;-1;4291.56503925098;4746.40145113813;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4663;False;-1;7989.97688002976;9500.46760117755;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;7711;False;-1;1186.02731633113;1482.27152704425;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;12682;True;49;0;25.8610774214999;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1252;True;41;0;40.9922764474987;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1635;True;49;0;46.6113446255289;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;5351;True;87;0;80.3178336478753;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;5025;True;94;0;75.8099281962774;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6686;True;95;0;90.2553857161411;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6161;True;91;0;86.9832640415128;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6034;True;98;0;79.7734780846344;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6690;True;98;0;90.9169165210694;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6294;True;98;0;81.1796603579886;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6559;True;100;0;93.090249103981;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6503;True;101;0;94.4467449675661;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6414;True;98;0;95.8265667418318;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6642;True;95;0;89.2065606320613;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6865;True;98;0;96.0735059445458;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6998;True;101;0;97.8610891420708;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6236;True;105;0;90.9201509715942;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;7727;True;104;0;87.3313522838049;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6981;True;102;0;99.1588173866578;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6670;True;102;0;93.7514097284929;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;7887;True;106;0;97.2956291176012;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;7246;True;104;0;97.4141588514084;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8445;True;114;0;108.915491801129;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8453;True;113;0;101.512792989327;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8646;True;111;0;99.1827921579861;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;9736;True;111;0;102.82693870712;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8879;True;118;0;105.906247445004;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8008;True;114;0;97.0290917979692;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8552;True;113;0;107.855843760823;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8584;True;113;0;105.845303232709;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8649;True;114;0;101.410093358412;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;11421;True;119;0;106.611777982379;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9711;True;118;0;108.397254286943;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;10013;True;122;0;112.409370061578;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9589;True;120;0;110.194702437353;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;801;True;34;0;38.8678360969251;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;614;True;28;0;29.8738774188974;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;737;True;36;0;34.721849148286;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;586;True;32;0;31.0552297114212;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;596;True;30;0;33.0037916768476;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1000;True;32;0;34.2016919984512;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;812;True;36;0;36.3428955560396;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;887;True;37;0;38.5755214405004;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;927;True;36;0;38.6619628252326;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;798;True;38;0;35.0319609325317;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;814;True;36;0;29.5851300610046;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1043;True;36;0;41.0810596983796;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;865;True;40;0;33.1983178785323;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;889;True;40;0;34.8619183521711;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;962;True;38;0;34.7825950408723;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1136;True;39;0;34.9980704388166;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1944;True;40;0;35.2582996322917;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1487;True;48;0;40.7391305292309;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1217;True;40;0;41.4156065592183;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1110;True;38;0;37.7912711666181;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;6877;True;64;0;38.5456006445022;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);255;57349;True;75;0;49.1823112343223;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;9495;True;60;0;40.667007256907;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;9182;True;58;0;33.9359014810317;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);80;1471;True;103;0;59.2308349531021;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);190;2494;True;109;0;111924742.738465;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);610;17050;True;102;0;1028312.45449591;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;18609;False;-1;0;3055537.0568343;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;40485;False;-1;0;4.26158995096677;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;10831;False;-1;0;365196.15220714;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;10336;False;-1;0;17.682245184075;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;20089;False;-1;0;1121056.04166395;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;6613;False;-1;0;6866431.91168571;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7030;False;-1;0;157100314.299062;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5350;False;-1;0;85150179.0495399;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7324;False;-1;0;36499235.5817864;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3518;False;-1;0;24019396.8266269;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5013;False;-1;0;72788151.1149922;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5182;False;-1;0;18728328.5712176;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);147;131421;True;68;0;224.550845494237;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);213;194292;True;56;0;89.3552871272325;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;373510;False;-1;442.000540900976;527.617862203211;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;269168;False;-1;341.715424506467;452.473905996874;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;486712;False;-1;265.200134767592;317.910329919661;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;211353;False;-1;311.329618218369;405.313011368286;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;321301;False;-1;243.105910716115;305.156670750881;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;302993;False;-1;251.602434854583;326.672282056456;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;174208;False;-1;637.556121347033;818.412302120572;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;198094;False;-1;430.103444878945;560.881064174044;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;145884;False;-1;430.267490503456;590.766358172208;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;116074;False;-1;898.438607481512;1111.74517995442;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;146599;False;-1;879.02616692033;1165.18260246818;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;84180;False;-1;974.425934111013;1348.95789833075;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;86546;False;-1;590.548318165377;794.16242238048;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;71590;False;-1;961.005266496216;1284.25783796613;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;95050;False;-1;1580.68970958096;1927.05027954838;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;63312;False;-1;1149.20693406575;1759.61158728072;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;57935;True;54;0;69.2990571911982;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;41203;True;50;0;58.1369638999608;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;114535;True;60;0;66.1601034092549;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);158;229506;True;31;0;48.3909416084239;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);53;118919;True;42;0;110.675632938619;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);133;699756;True;31;0;33.9738606686075;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);327;1275565;True;53;0;68.6025810206302;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2210;True;27;0;22.9098308935699;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;136528;True;35;0;37.5055248951112;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;108901;True;345;0;380.057317357549;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;11170;True;120;0;163.684665532444;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;92077;True;176;0;114.232366492116;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;152058;True;238;0;134.905005182497;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;263955;True;91;0;57.176990962722;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;12381;True;114;0;61.5001922283668;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;133853;True;95;0;47.8596585525954;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);62;588510;True;112;0;40.2502453690454;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);56;371234;True;111;0;40.1613186406128;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);32;82899;True;255;0;434.921860324031;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;56090;True;68;0;88.9431588923947;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);35;173616;True;188;0;66.7906226995809;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;64837;True;88;0;47.5894078670686;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);43;339061;True;103;0;60.1232328324495;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;38289;True;72;0;96.5261603021328;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);146;1172152;True;180;0;38.6588658653782;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;4760;True;107;0;101.016364060079;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;29275;True;235;0;926.743293913893;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;18402;True;136;0;156.703629318911;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;20717;True;95;0;136.844365175971;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;126396;True;240;0;162.545182011641;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);123;726846;True;129;0;48.3112963402498;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;26105;True;289;0;1299.73678593732;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;12680;True;98;0;100.697041012544;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);39;6453;True;39;0;39755.7240297887;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;90113;False;-1;0;175215.155086538;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);51;4059;True;79;0;131504.792906699;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;32890;False;-1;0;314139.637151581;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);46;1705;True;81;0;1349026.49903342;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);54;2447;True;94;0;1123540.0569829;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);140;3186;True;125;0;2247969.09159819;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3036;False;-1;0;3678749.59459016;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;1574;True;43;0;80257.4603554442;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;1367;True;46;0;101836.587163186;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;887;True;47;0;194343.241738088;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1330;True;41;0;217076.218609253;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;907;True;37;0;191488.33900724;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;1176;True;44;0;187806.492908363;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;1612;True;50;0;206168.060288342;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);22;2184;True;64;0;425650.858497932;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;1454;True;53;0;325635.956408689;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1151;True;43;0;276113.706561463;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;1941;True;62;0;212621.047498926;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);26;3210;True;82;0;341114.392704427;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);72;3130;True;77;0;1158329.3817537;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;1229;True;60;0;435672.249677537;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);14;1289;True;60;0;443589.604459876;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;1764;True;73;0;687118.966509318;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);53;2975;True;89;0;881092.354285431;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);63;2176;True;79;0;1599756.87667195;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);25;1424;True;70;0;811045.67325073;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);32;1752;True;77;0;879000.379499117;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);54;2127;True;73;0;1338309.48191168;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;22025;True;179;0;243.599377187806;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;26169;True;199;0;254.175361887766;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;34365;True;229;0;291.301844247098;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;42480;True;237;0;301.451799912003;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;55489;True;235;0;336.978852947883;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;56861;True;259;0;329.898813052148;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);24;62663;True;283;0;354.457630390544;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;12089;True;114;0;119.018743306728;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;8845;True;94;0;103.025563468302;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7411;True;97;0;86.5353497389738;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;11027;True;112;0;122.237420502227;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;10764;True;109;0;129.563053420439;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1833;True;47;0;40.2032664173966;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;5057;True;54;0;50.7205039888473;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1650;True;40;0;31.3478147741198;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2994;True;59;0;51.1281446018853;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1674;True;50;0;41.7044803097286;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1639;True;44;0;36.6729977793143;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;51042;False;-1;109.034704876055;185.446795958869;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);26;26750;True;51;0;210.928396819972;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;179022;False;-1;583.178394345044;981.961636686658;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3470;False;-1;2277.02686338622;2747.40243642894;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;843;False;-1;4031.11563712713;4768.7910182913;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4705;False;-1;7725.00428413758;9550.18950359998;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7653;False;-1;1132.63759091778;1484.76145292865;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;15509;True;47;0;20.5538297307865;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1369;True;43;0;38.1711563083583;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2024;True;48;0;41.1574024129383;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6481;True;85;0;88.8050247049864;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;5184;True;88;0;81.768188299455;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7118;True;99;0;90.8453256543358;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6735;True;97;0;87.6088931131293;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;8694;True;96;0;89.0779724405936;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7145;True;90;0;94.6513794029616;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6957;True;95;0;90.8384981068305;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7379;True;97;0;99.3349713354464;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7271;True;97;0;92.4769722287467;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6474;True;99;0;95.8800149069348;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;9130;True;106;0;82.6751818866256;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8565;True;106;0;92.008337917501;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8630;True;107;0;96.5228480746019;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;7884;True;108;0;94.927244933903;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9947;True;103;0;97.3232199657257;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8096;True;111;0;103.222729217618;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;11391;True;111;0;97.1588416629997;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9167;True;111;0;99.63680054887;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9137;True;109;0;98.2547133300498;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9893;True;117;0;103.376589344151;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10592;True;116;0;105.696578233474;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;11171;True;111;0;99.4671628100203;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;8639;True;116;0;99.9670581288212;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;13734;True;124;0;111.222044852216;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;11090;True;115;0;91.9816980436768;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10677;True;117;0;100.107282688172;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10602;True;119;0;102.484638190362;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;9651;True;120;0;100.389900643608;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10619;True;117;0;106.790416264086;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;11281;True;128;0;112.614052401919;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;12996;True;123;0;106.579404941491;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;13869;True;123;0;119.391647016129;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;921;True;36;0;40.4757375439242;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;662;True;28;0;33.2541081147883;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;811;True;40;0;36.8620236226421;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;650;True;32;0;32.0746841646765;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;592;True;30;0;32.5457839443438;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1020;True;34;0;32.7729566330728;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1009;True;40;0;36.3913720507382;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;749;True;34;0;37.0274192955936;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;848;True;34;0;36.1658235902812;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1004;True;38;0;35.984600768435;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;947;True;36;0;32.6981563134923;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;836;True;36;0;36.2003098518429;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;969;True;40;0;35.9651781841238;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1115;True;38;0;38.8097021874999;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;757;True;34;0;37.1182334564912;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1353;True;44;0;38.4025219528497;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1644;True;42;0;42.852755450215;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2209;True;46;0;51.0724513081881;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;930;True;38;0;37.3845055987172;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1173;True;40;0;34.3874309977331;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);38;82401;True;47;0;290.610554405414;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);297;1395273;True;16;0;0.463201566195008;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;3107;True;41;0;197.341263144412;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;2810;True;4;0;243.614243179822;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);112;300380;True;45;0;114.844542542469;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);130;352681;True;19;0;244.654533513401;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);80;570790;True;7;0;62.7842607434431;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);25;22101;True;9;0;66.8369114414951;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);705;2231405;True;19;0;1.18652686483927;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;8611;True;37;0;170.663212396879;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);36;3557;True;5;0;222.951927418249;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);659;1147288;True;10;0;0.0840592853427296;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3528133;False;-1;0;62.1170154749157;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);32;395489;True;22;0;8.94783976637058;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);31;369787;True;19;0;8.35221867905593;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);22;385002;True;22;0;6.19516228934643;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);166;2538859;True;24;0;7.11781229591249;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);54;741500;True;19;0;8.05972127236198;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);121;2064090;True;24;0;6.10788991862978;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;259007;True;23;0;5.6341346333423;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);206;2840715;True;24;0;8.01766821539703;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);42;23676;True;170;0;2288.17452152811;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;3556;True;50;0;215.789645687855;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5747;True;50;0;146.666126795379;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;462;True;38;0;365.819037627582;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;578;True;44;0;402.606054263761;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;875;True;45;0;444.288587578169;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;916;True;46;0;464.530916976276;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;13003;True;143;0;1942.78236898688;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);21;18448;True;138;0;1867.37443081834;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;10431;True;139;0;2143.53662269773;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);41;24093;True;172;0;2457.08798307894;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);40;21589;True;177;0;2823.92380242388;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);237;180151;True;207;0;1630.67937284902;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);60;47457;True;171;0;1912.39765095614;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;6593;True;50;0;247.563066581928;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1732351;False;-1;0;10.2604629302964;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);251;389999;True;100;0;144.246051775057;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1577171;False;-1;0;173.679923313411;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);148;165829;True;125;0;346.675322432517;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1075895;False;-1;0;129.643606022089;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);168;701420;True;18;0;5.6878447286185;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3583679;False;-1;0;5.41750895232015;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;13257;True;25;0;52.6025656448751;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;18647;True;33;0;49.0499297077508;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);47;94257;True;37;0;63.7971128257644;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);21;40607;True;27;0;60.1619749927676;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);18;41736;True;30;0;55.8059798191289;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);47;95748;True;37;0;65.6087544418888;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);27;46798;True;27;0;61.2490514886568;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;3074;True;33;0;50.121100973264;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);30;79371;True;37;0;66.3528146947076;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;37749;True;27;0;60.0246917513837;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);36;44056;True;31;0;337.616533328371;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;5434;True;47;0;937.145046516697;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;4291;True;48;0;239.541206567753;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);92;22570;True;63;0;425.815531622402;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);22;3560;True;102;0;897.98759782703;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);202;14951;True;54;0;1139.42087100647;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;343422;False;-1;3.20527693400821;70.8974161438239;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;67077;False;-1;39.5353664397573;341.662773521605;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;41581;False;-1;70.3185988286627;1224.64316970828;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);482;1036;True;64;0;6114198.234779;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);523;1016;True;66;0;6323977.28891696;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);23;184401;True;18;0;4.69322232333682;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);51;357945;True;33;0;14.6411512102671;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);207;1929699;True;23;0;7.88829791604487;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);747;254243;True;25;0;524099.691042591;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1100477;False;-1;23779.2897985797;32806.7136542342;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);35;328311;True;23;0;7.52923503167584;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;366434;False;-1;7.70750762864468;524298.17887838;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);21;205582;True;21;0;6.56339762238344;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;121555;True;21;0;6.07987113774448;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);12;66184;True;36;0;46.0962028302922;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);56;536008;True;28;0;8.60800501355765;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);40;292573;True;21;0;57.2487680307372;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;1952607;False;-1;5.95467648907496;62.2418499610862;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;3203;True;45;0;142.639405094786;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;807106;False;-1;27.0515776703022;207.204052762913;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5029;True;30;0;32.5907552296761;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;107041;False;-1;30.9302617839373;156.401272691276;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;137409;False;-1;107.356921706478;228.79696106198;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;1838;True;38;0;206601.346781507;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;13195;True;56;0;3504.66011650329;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);55;3153;True;46;0;515668.658748513;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);216;5971;True;54;0;696.057440550821;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;10;True;1;0;3.45182079171076;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;3124;True;43;0;73.6846806898228;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2942;True;22;0;27.5110601759768;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5290;True;38;0;78.5334879299309;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;11312;True;46;0;104.548310457327;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);36;16630;True;47;0;222.212104774653;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;233027;False;-1;35.0615779887003;331.125858918102;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;167309;False;-1;57.9807435407386;514.013188531831;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;110956;False;-1;114.134235795072;672.650552640823;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;87507;False;-1;81.9784959316367;811.368168962342;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;60532;False;-1;104.830822240128;991.16516420058;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;59;True;6;0;7.26693969981847;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;55490;False;-1;120.328102217577;1127.94135631518;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;181;True;10;0;23.658059765161;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;221;True;11;0;16.1826266172144;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;232;True;16;0;30.3088379452491;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;398;True;17;0;33.343801645695;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;773;True;17;0;24.8230868746905;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1102;True;20;0;31.5623846950283;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;8556;True;36;0;62.374824041527;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);55;114664;True;49;0;292.062383434335;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3543625;False;-1;0;4.92488502713655;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;17965;True;48;0;158.013424166139;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;3857;True;6;0;183.137392677696;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);108;279168;True;32;0;109.968869172355;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);235;602655;True;16;0;231.748115169798;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);91;674067;True;8;0;57.5016622645773;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);36;32346;True;10;0;51.7501554628659;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;2035316;False;-1;0;15.6549264242641;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);47;34288;True;41;0;147.20803794029;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);21;2970;True;4;0;269.036404654974;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);39;105801;True;14;0;0.806047032903684;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);20;159891;True;7;0;62.010638486095;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);52;992492;True;23;0;11.0976236429639;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);41;828919;True;19;0;10.4434949177043;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;348788;True;25;0;6.12919308654938;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);185;3426944;True;34;0;9.12835698573381;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;458395;True;19;0;5.84199307099234;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);135;2386968;True;23;0;7.78896743936692;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);29;506499;True;23;0;5.73443687140861;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);333;5008280;False;-1;0;8.05345036231253;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);25;14626;True;173;0;2763.11004098832;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;24615;True;50;0;89.2015229398173;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;5542;True;50;0;120.745993184798;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;589;True;41;0;324.193360335318;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;798;True;44;0;365.221841904543;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;881;True;43;0;467.400566903977;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1003;True;49;0;474.965537825844;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;11072;True;135;0;2000.56619099729;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;10825;True;138;0;2052.44170961712;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;8635;True;135;0;2177.60943465312;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);20;15590;True;171;0;2252.92360112836;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;17564;True;169;0;3112.77323447669;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);56;26321;True;210;0;3535.50488047465;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);22;15091;True;176;0;2545.70536418455;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;7762;True;50;0;203.748148747071;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1795743;False;-1;0;22.6770497289309;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1618213;False;-1;0;109.558229380808;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1789729;False;-1;0;110.563625382761;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);144;242583;True;125;0;237.235762539778;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1255533;False;-1;0;133.015236837844;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);689;3006090;True;19;0;5.63611762451983;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4174026;False;-1;0;5.32437777689209;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;6447;True;27;0;68.6749451734588;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;17668;True;33;0;52.0171076323103;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);58;118433;True;40;0;67.3598320075082;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;16709;True;27;0;56.0214678306644;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1889;True;33;0;67.8985489355593;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;12507;True;37;0;57.7113850077635;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;40055;True;25;0;59.5411669036618;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3374;True;33;0;51.4527570918965;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;63846;True;37;0;67.5173474371218;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;19855;True;28;0;53.2870486352646;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);25;36617;True;39;0;336.752503076537;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;1137;True;36;0;1113.23564334394;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;2918;True;49;0;238.772074393611;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;3159;True;66;0;423.511487273445;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;7013;True;122;0;601.663811966509;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;516298;False;-1;3.20003287792207;38.0422979091597;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;144482;False;-1;9.60153290033412;244.666813693963;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;89431;False;-1;36.8010969482367;314.011959412374;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);828;66776;True;103;0;811.472651812491;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);355;657;True;50;0;9432994.17053191;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);423;1076;True;62;0;6164858.61031579;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;154292;True;18;0;4.86040953607464;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);32;366342;True;33;0;14.4897394753674;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);207;2429478;True;24;0;8.22036121442128;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;410755;False;-1;4.95520932160095;524234.631788709;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;1289990;False;-1;26225.1210830105;32800.8463015656;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);29;333316;True;23;0;7.48989122626029;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;514296;False;-1;6.56889290817496;524424.62153062;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;213645;True;22;0;6.48977925596755;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;119710;True;22;0;6.00533685881508;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;63094;True;35;0;46.2894669327796;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);42;520538;True;27;0;8.51087219034796;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;90517;True;23;0;52.9166432592651;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);788;1820695;True;52;0;150.825239276395;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;10388;True;59;0;151.534235041921;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;14052;True;75;0;141.854646660605;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2457;True;27;0;23.6587757579446;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;130571;False;-1;36.8284902628644;117.761767869875;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;182377;False;-1;65.9678019465729;166.817428818173;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;1627;True;36;0;235420.857132423;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;11080;True;66;0;3432.64172051393;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);35;2584;True;42;0;643290.256211221;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);173;5490;True;68;0;842.247214962236;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;10;True;1;0;3.68595956921855;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;6044;True;43;0;71.8720941522087;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1305;True;20;0;45.4191140561253;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;13353;True;41;0;90.9603701222207;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;30019;True;51;0;98.6028970847012;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;683154;False;-1;20.8068402640553;103.508089748865;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;293688;False;-1;35.3259356752624;394.72345463045;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;224972;False;-1;46.4721061952748;459.465360510671;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;137120;False;-1;86.2578368853116;767.846887975272;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;112879;False;-1;75.4581165545891;770.792635915541;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;81929;False;-1;100.318126660361;953.282558170017;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;59;True;6;0;7.27021563310485;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;71618;False;-1;113.344169259697;1121.19542696204;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;176;True;7;0;22.8476857636751;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;647;True;13;0;15.3279284106696;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;317;True;19;0;23.0692375790683;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;580;True;20;0;35.6442698351779;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;379;True;17;0;24.3303522659013;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2456;True;25;0;47.0693587478554;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2672;True;32;0;48.1166142797131;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);88;194499;True;53;0;278.23627329452;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3018975;False;-1;0;10.6347428584249;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;17032;True;42;0;166.909384130079;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;4790;True;6;0;146.287282825496;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);91;225789;True;23;0;115.761597473663;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);206;534360;True;19;0;225.023695714869;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;98;True;5;0;55.2952826372093;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;2557;True;14;0;410.606617697068;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;2714678;False;-1;0;5.20208123884114;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);201;179307;True;42;0;124.240043984154;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);32;4473;True;6;0;185.495174021696;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);94;244024;True;9;0;0.938134870238218;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;574;True;6;0;76.447347435174;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);22;450288;True;23;0;10.0372893795067;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);25;584133;True;24;0;9.15586669169186;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);26;579043;True;21;0;7.00909896196126;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);295;5008442;False;-1;0;9.44001124991698;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);37;397201;True;18;0;5.14999557368239;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);263;4422898;True;28;0;9.28949070554927;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;335725;True;23;0;5.70795038879423;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);301;5004818;False;-1;0;9.20762728737534;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;15629;True;173;0;2740.00469584501;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;8551;True;50;0;118.915732965621;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;10933;True;50;0;109.420336462485;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;677;True;40;0;329.18162583857;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;756;True;44;0;392.776391943071;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;671;True;50;0;373.512734499545;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;729;True;48;0;428.899341370898;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;9096;True;140;0;2024.05164444036;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;10973;True;137;0;1851.44881215095;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;12414;True;140;0;2147.58929463338;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;12969;True;183;0;2637.84372203486;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;15215;True;179;0;2722.47140654784;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);41;31170;True;211;0;3049.60752300083;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;17168;True;177;0;2712.43233002095;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;15560;True;50;0;146.962657173282;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1824230;False;-1;0;60.3018142060383;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;2245772;False;-1;0;141.493062208041;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1996098;False;-1;0;145.27583982014;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1943460;False;-1;0;115.611627254285;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1228166;False;-1;0;53.233703255033;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);652;2768403;True;21;0;5.65596715039646;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4893162;False;-1;0;5.06495984793404;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;40357;True;25;0;58.7997464505672;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;5212;True;34;0;51.9022166434758;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);38;77473;True;40;0;70.8168251564031;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;27788;True;26;0;56.1229369196766;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;21393;True;31;0;51.147046677185;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);48;119411;True;38;0;61.267905307556;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;5590;True;27;0;71.2298886966229;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;4235;True;33;0;63.2298971200766;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;6223;True;38;0;54.0091490555249;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;3690;True;26;0;59.813254704519;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;8182;True;26;0;340.456865436213;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;2431;True;33;0;658.693994649241;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;1401;True;32;0;241.022416206884;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;1668;True;62;0;333.158373962552;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);41;9726;True;148;0;547.335407169745;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);31;2923;True;46;0;949.804009020666;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;130176;False;-1;18.2141941031507;351.231194770156;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;84706;False;-1;29.4051399590471;323.497972763236;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);111;9505;True;71;0;784.219692623363;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);373;978;True;54;0;5914108.3867426;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);479;1088;True;60;0;6381978.14256802;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;166080;True;18;0;4.83896345028904;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);27;289424;True;33;0;14.1487286799427;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);219;2248495;True;23;0;8.26159054682456;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);826;359082;True;101;0;524668.672155168;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;1211829;False;-1;22947.4700311285;32815.4071751469;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);22;229737;True;23;0;7.44093741314086;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;480907;False;-1;5.793035943151;524013.550848218;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;215552;True;22;0;6.48841618390446;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;98414;True;21;0;6.03585790307297;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);27;187758;True;36;0;46.4406109045687;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);36;430984;True;27;0;8.52214906143655;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;468;True;21;0;61.3109033729869;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;1843;True;43;0;106.036595588727;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;3926;True;59;0;181.281818813708;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;942501;False;-1;23.8000705337152;132.247807874957;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;6380;True;29;0;22.0509144967264;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;119016;False;-1;24.6982084664042;115.958077800457;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;160014;False;-1;95.2509689830481;392.317286862115;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;1627;True;36;0;240253.613974948;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;10573;True;80;0;3595.90228892723;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;46840;False;-1;109.071488881889;83651.4855534016;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);38;401;True;30;0;3433.34278647787;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;10;True;1;0;3.27121156752321;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;3160;True;38;0;79.8340130445702;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2195;True;22;0;37.6408150307849;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;9230;True;34;0;69.8177987513624;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11944;True;43;0;105.643946272167;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);33;24741;True;56;0;105.365238370246;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;399774;False;-1;16.3004814513496;209.122639984851;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;218986;False;-1;44.9400322676357;455.728969123972;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;139179;False;-1;84.0105573423256;733.855713395743;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;113142;False;-1;69.4043570766246;766.691256833053;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;77056;False;-1;87.6289833018691;941.53050994453;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;47;True;6;0;7.07594826682016;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;69401;False;-1;92.4079186392053;1139.60555131167;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;382;True;11;0;22.447286872534;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;733;True;15;0;17.5186970140913;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;226;True;15;0;22.2367214797433;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;330;True;15;0;35.1029419859664;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;850;True;20;0;22.9621112767093;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1236;True;21;0;31.6956327673209;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;6231;True;37;0;68.6089313253046;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);92;191629;True;65;0;249.520948664972;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);35;144646;True;20;0;23.4426338355077;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);76;125476;True;42;0;201.417477424421;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;3918;True;6;0;181.231909434574;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);121;311791;True;33;0;99.0817452898696;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);258;649948;True;19;0;208.668515608463;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;136;True;7;0;59.4401164121673;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;4516;True;13;0;252.079941285053;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2897627;False;-1;0;1.73302406510589;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);637;441041;True;38;0;147.669626817561;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;2677;True;5;0;288.120560157433;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2270725;False;-1;0;1.43706215690792;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;913;True;10;0;75.1295792119199;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);89;1480543;True;20;0;11.8419476061474;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;679319;True;24;0;8.91531151276283;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;459881;True;23;0;6.39867968601947;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);292;5014971;False;-1;0;8.10667760130121;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;736447;True;18;0;8.3796983021831;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);317;5004471;False;-1;0;9.53471837489875;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);40;626893;True;26;0;6.6665125609477;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);300;5007982;False;-1;0;9.1760369931064;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);19;14160;True;175;0;2704.91916538702;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1795;True;50;0;493.974226860644;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;40519;True;50;0;98.775773409019;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;579;True;41;0;311.627720685862;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;750;True;46;0;354.054188336834;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;886;True;48;0;400.715023566817;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1088;True;52;0;420.472632863388;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;7858;True;145;0;1926.75753704126;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;12108;True;139;0;2182.90042434409;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;12790;True;146;0;1698.68697814879;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;17433;True;180;0;2531.48692388302;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;16639;True;178;0;2818.01414090228;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;22279;True;207;0;3446.91151722428;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;14428;True;173;0;2613.49179283018;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;7699;True;50;0;205.348557923992;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;1823872;False;-1;0;149.201473626086;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2127166;False;-1;0;175.114656922894;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2006846;False;-1;0;168.749820893495;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2038273;False;-1;0;140.989933341537;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;1554083;False;-1;0;170.946456760414;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);81;592940;True;19;0;5.59903484374969;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4587206;False;-1;0;5.54020839295972;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;4223;True;25;0;60.1573868867756;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;10250;True;29;0;50.5939632237511;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;70471;True;40;0;57.9005630518426;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;9912;True;27;0;50.5545604548757;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;16369;True;32;0;53.1370059998872;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;10240;True;36;0;60.7183509554661;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;13654;True;25;0;53.2443624422245;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;5917;True;34;0;48.0818433499269;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;11722;True;39;0;57.8074433576219;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;9110;True;27;0;48.0810945172124;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;18932;True;22;0;339.079301822477;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;1243;True;32;0;1254.33300415674;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1676;True;41;0;230.368676389672;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);67;10186;True;58;0;330.267234843114;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;174422;False;-1;4.80096342861697;149.785131525079;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;271688;False;-1;2.40001777410508;29.4370715399945;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;205251;False;-1;2.40026335865271;69.3119900524021;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;43085;False;-1;25.2375834860083;310.443452491915;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;53212;False;-1;4.80057612061527;204.578748983389;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);747;1125;True;46;0;6057243.22079591;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);411;383;True;35;0;9294387.94360258;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;85001;True;17;0;4.63302629659592;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);78;314480;True;33;0;14.3145926099521;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);276;1516597;True;23;0;7.71790702272763;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;185691;False;-1;7.93784855135616;524593.863476372;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;592366;False;-1;19669.3040361293;32817.7734339032;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;222971;True;23;0;7.46262597902427;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;194251;False;-1;6.68864277391166;524526.75683903;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);48;209729;True;22;0;6.533414484147;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;94089;True;21;0;5.94802675509493;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);84;163434;True;41;0;46.7314988925703;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);95;520137;True;28;0;8.53336387920963;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;801;True;24;0;72.0243873522654;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;7210;True;52;0;88.4697783037114;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);118;91261;True;57;0;148.767067469043;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);163;82552;True;89;0;227.570940219898;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;19283;True;29;0;25.0672295212042;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;52435;False;-1;77.1736678602051;303.166539670735;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;72018;False;-1;80.4000782728196;701.86688772417;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;1627;True;36;0;232097.48545524;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;8249;True;84;0;3349.17809667103;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);103;3243;True;46;0;528575.22291877;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);96;1262;True;72;0;1549.67079983067;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;10;True;1;0;3.8426172717052;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;9257;True;50;0;62.8770718562178;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;4173;True;26;0;44.9099774261156;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;3088;True;32;0;82.5690832232709;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);24;37215;True;54;0;47.9685719035694;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);816;268693;True;75;0;185.993969910248;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;132759;False;-1;24.2635838539636;339.993412809826;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;108910;False;-1;39.8361806118098;398.700500006414;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;68319;False;-1;82.0474399747548;612.684965885497;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;55175;False;-1;61.4108101041107;723.914198420391;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;37172;False;-1;87.9769370021191;887.400792067693;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;67;True;8;0;7.60386658663576;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;31811;False;-1;81.3164814109525;1088.35150470062;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;673;True;11;0;19.88806310123;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1213;True;18;0;18.4684585705387;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;309;True;14;0;28.495104610875;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;586;True;19;0;36.5959832928873;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;332;True;18;0;23.1592252170415;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;2193;True;24;0;46.2170003644297;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;3479;True;35;0;52.6806668476299;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);28;69141;True;42;-0.983629605725235;333.239440819058;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3527254;False;-1;-0.99999997485429;1.1445494260965;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);16;29754;True;33;-0.999991106800731;59.4066468865169;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;2491;True;6;-0.537484922230935;267.221694763149;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);100;273971;True;47;-0.953124797881173;120.101490446787;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);155;415994;True;18;-0.999914076179226;238.42690050923;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4862132;False;-1;-0.999999867752194;65.697675103468;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;5820;True;12;-0.531209137072418;186.886355137652;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3218121;False;-1;-0.999999068677425;2.4484922279389;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);29;37710;True;41;-0.999817703850482;32.7664959167001;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);18;2228;True;5;-0.569102680109955;340.791340667777;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;2134427;False;-1;-0.99999909568578;0.0257332408175593;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4533055;False;-1;-0.999994478188453;64.940266287606;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;108936;True;22;-0.99999674130231;7.03325165399863;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);22;318968;True;19;-0.999979488551607;8.04673946334739;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;232507;True;23;-0.999974816106248;5.76457288719874;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);65;1458572;True;24;-0.999997589737176;6.59686987595352;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);15;347699;True;20;-0.999983392655842;6.84272581870795;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);121;2296588;True;21;-0.999999519437551;7.63692322133452;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;228047;True;21;-0.999963560141606;5.85700884968226;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);121;2489616;True;24;-0.999996921047567;6.84418875132851;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;7992;True;166;0.86189808131284;2346.9921767033;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;4041;True;49;-0.996692187151263;292.860849172991;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3204;True;50;-0.991365918885621;335.804451274776;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;689;True;40;0.777274084173736;321.203692287831;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;799;True;41;-0.85959350869972;297.913948875591;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1840;True;44;-0.277702303266945;351.189967962766;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;649;True;45;0.707157276434431;435.765683604145;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;7405;True;133;-0.179517785636484;1482.53375592283;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5934;True;134;-0.860811206447338;1564.13671157203;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5442;True;130;-0.79185854633891;1661.10433731382;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;7355;True;165;-0.659322615554241;2286.39701699909;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;11128;True;163;0.773551314032428;1838.32266663646;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;28852;True;197;-0.504878757290951;1839.17955184197;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;11855;True;164;-0.97053587807833;1923.25286633783;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2536;True;50;-0.997396898454706;579.609769193242;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);175;360676;True;95;-0.999988183379168;179.284039482898;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;61905;True;96;-0.999953079037346;290.913362912893;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);44;119881;True;93;-0.999967669136807;197.332367800102;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);24;18101;True;113;-0.99973821826267;1904.19785254987;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);193;300061;True;139;-0.999983231537036;283.447423952228;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);142;1039255;True;19;-0.99998585507273;5.690774061799;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;5445315;False;-1;-0.999988907948131;5.05229568125591;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);22;46737;True;27;-0.99986231885844;61.5896337548364;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;18970;True;33;-0.999905091710344;49.3316267286027;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);43;95647;True;37;-0.998910957946866;65.2268872691498;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);12;43529;True;27;-0.99963034596277;61.8811859132753;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;17844;True;33;-0.999064077622753;48.6622071056363;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;96439;True;37;-0.99972819630044;65.2891528847647;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;43417;True;27;-0.999778698198394;61.8522772824552;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;18423;True;33;-0.99913676548709;48.9742234388018;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;99949;True;37;-0.999590018763947;65.3789827273968;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);10;46764;True;27;-0.999486004933476;61.2805679282754;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);31;58816;True;27;0.854667493074512;342.401754482808;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);23;15372;True;29;-0.360908789262599;1893.58180688215;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;4263;True;44;-0.570165701941664;242.003069724646;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);37;17879;True;64;0.303528943706084;324.388990335567;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);35;8446;True;86;0.513465859700677;966.255412037704;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);174;22291;True;56;-0.231081058844496;989.246475380001;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);280;100023;True;51;-0.30463966136083;118.731407684019;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);152;19460;True;46;-0.344772780008974;887.538855083351;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);423;57644;True;83;0.576423398021806;480.075944014625;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);274;1003;True;62;-0.831655840311039;6355432.39100811;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);319;1000;True;62;-0.673243305493725;6297827.28103755;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;136376;True;17;-0.717180447521238;4.79703783118519;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);29;359976;True;34;-0.838755657821314;14.6214240978351;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);142;2115349;True;23;0.921873942912498;8.03242700808654;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;4961;True;19;-0.262516597873772;518427.166681332;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);31;65146;True;22;-0.934497710286871;32761.6953625761;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);24;382697;True;24;-0.15426680220024;7.55960011857905;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;7857;True;20;-0.0794584961046737;521638.066598893;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;205577;True;20;-0.833425763916888;6.55587494626091;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;109362;True;22;-0.875191273109611;6.01236371122578;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;51647;True;34;0.088467554696122;46.7389841164753;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;621421;True;29;0.583042780674548;8.65347110758946;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);118;1119628;True;18;-0.14924466756603;57.9954386047017;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);34;57426;True;40;-0.881890069638328;84.2629028844163;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;2560;True;39;-0.749282796750443;168.10033913511;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;985533;False;-1;133.000054563396;302.593068604061;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3197;True;28;0.0670146919167669;19.8806859245098;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);176;34565;True;58;-0.421950493670046;213.117614307923;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);127;35055;True;87;-0.855774226531281;232.711552945678;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;1627;True;36;0.322457238716286;236548.571961069;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);44;71574;True;50;0.466081938457714;7113.86971221685;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);27;2584;True;42;0.461706707934712;646636.071915269;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);38;454;True;32;-0.743660834498546;7158.99456958563;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;10;True;1;-0.441198635586164;2.95580731260395;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1135;True;33;-0.95723778938746;57.1735429212511;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;914;True;21;0.264428474597832;54.6106536802864;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;7242;True;33;-0.77147151053486;84.8297526465121;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1488;True;35;0.0199131104256554;88.850300296901;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;816355;False;-1;25.0017778649934;109.279761412593;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;401596;False;-1;39.5116116788758;371.866031063771;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);228;88469;True;68;-0.582284313432073;364.400221773346;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;201485;False;-1;93.3545017057818;769.280034457539;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;165610;False;-1;84.0873429323953;769.967489974607;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;113634;False;-1;97.3207844758037;954.985561213784;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;62;True;6;0.305268403750504;7.39296969524516;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;100096;False;-1;117.175326925784;1162.7931720221;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;185;True;10;-0.372585503092308;23.4857011353911;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;241;True;14;0.290210585710691;13.7518473561721;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;192;True;14;-0.610721719269977;25.1708082545207;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;321;True;15;0.22526850329026;32.5857236127357;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;871;True;16;0.756961766517238;24.4537840794885;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2663;True;21;-0.0116468560936147;52.115288782512;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2982;True;30;-0.68221252117409;70.4900266967032;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);29;72105;True;41;-1.9770247284216;318.729949231814;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4225389;False;-1;-1.99999928101897;0.238246258313447;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;2241;True;32;-1.99705468490583;207.218551531724;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1727;True;4;-1.33100768147549;381.079883522207;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);98;271735;True;46;-1.95010582169057;118.175218470123;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);145;403649;True;19;-1.99975124560285;235.55406668071;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5000251;False;-1;-1.99999450705945;62.3351740327991;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;2064;True;14;-0.806373752097773;512.687224017666;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;2937064;False;-1;-1.99999940395355;2.35646486185642;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;10740;True;35;-1.99451008811337;153.900309584941;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);20;2647;True;6;-1.75005529436751;293.337017894407;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;849;True;7;-1.83292288697926;438.146237977564;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5085447;False;-1;-1.99999578483403;62.1599380021855;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);68;953409;True;21;-1.99998006410896;10.3799659451004;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;427418;True;22;-1.99999363534152;9.00694738183242;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;228197;True;21;-1.99993310682472;5.76918113158704;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);79;1586119;True;24;-1.99998836405575;7.1100970085035;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;341528;True;20;-1.99999295733869;6.771617626562;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);39;936769;True;24;-1.99999759532511;6.58280407614169;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;229897;True;21;-1.99998398311435;5.84030516774532;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);316;5005555;False;-1;-1.99999963119626;11.1502870732376;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;18989;True;166;0.256756887890751;1468.99872195062;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4678;True;50;-1.99772402644051;292.629796142784;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;7257;True;50;-1.99886038713104;174.332105451488;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;506;True;38;-1.91316129449437;328.81598563671;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;629;True;42;-1.90454979981508;346.54345550674;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1244;True;46;-1.69036068380361;397.026841671804;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;641;True;45;-1.60466123726436;422.41402257115;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;8143;True;133;0.152137054201279;1421.88677861321;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6152;True;136;-1.05515181229224;1561.576207365;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;4969;True;130;0.0950388480420405;1622.66163008439;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;8490;True;165;-1.4278439709115;2121.33322758658;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);11;17914;True;168;-0.353676146992332;1517.76420493835;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);27;36940;True;196;-0.208124484032451;1502.12164478257;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;12332;True;163;0.873124095086532;1813.20344423676;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3112;True;50;-1.97942887431915;435.340481581036;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);181;396455;True;95;-1.99999909102917;182.918557950739;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);44;127711;True;97;-1.9999464638531;185.370318201333;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);44;128200;True;96;-1.99995130859313;186.327642481919;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);21;16008;True;111;-1.99904567934528;2222.15202486661;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);518;919832;True;141;-1.99999773316085;162.092067442996;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5513700;False;-1;-1.99999484792351;5.12599737233684;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1199;True;21;-1.9913228731562;4.87328078913101;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);16;37792;True;25;-1.99999480694532;59.526912953378;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;20108;True;33;-1.99722134694328;50.0160981028443;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;97479;True;37;-1.99956721439937;66.7335313171533;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);20;44205;True;25;-1.99684056080731;61.277267671756;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;19658;True;33;-1.99990380555387;49.3205705301062;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);49;107220;True;37;-1.99968585185692;66.1280232027877;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;38794;True;27;-1.99878432787898;59.9854682429592;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;18682;True;33;-1.98283148742413;49.3036824383923;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);43;90564;True;37;-1.99823885224678;64.8047858122549;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;45003;True;27;-1.99945380166148;62.1659656074583;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);30;60955;True;29;-0.830961100212746;343.46811964414;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);22;17576;True;51;-1.90348496469831;1722.34176233883;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;4265;True;45;-0.312942276854507;239.942995996333;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);34;17821;True;60;-0.236262126935768;325.200925340524;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);31;8459;True;87;0.201236682106385;964.39596940237;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);159;22420;True;56;-1.29544098828707;986.112888520373;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);150;55916;True;51;1.30358094317074;154.176355027388;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);190;24142;True;47;-0.0733314594595373;1040.44991506708;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);341;47811;True;89;-0.891561107193847;555.555164325461;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);259;1001;True;62;-1.82729159287517;6331838.10363435;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);301;1018;True;64;-1.9986868072295;6219324.13932916;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;139149;True;17;-0.751992379665371;4.62893333532486;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);28;348086;True;33;0.00174072012386328;14.4214417206374;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);128;1940628;True;23;4.03802842090517E-05;7.93544863704165;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;7277;True;21;-1.00834741024689;520279.056331002;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);59;138918;True;23;-1.59251469354728;32772.8574526205;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;429668;True;24;-1.2943746965818;7.55332386818268;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;4505;True;21;0.214864491585113;519514.929214932;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;203610;True;22;-1.68243692986781;6.48835235001759;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;112554;True;22;0.00180843100035966;5.98016442821403;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;48212;True;35;-1.59780572522329;46.5281923489096;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);27;463156;True;28;0.00085501559118506;8.46428365850907;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);75;799662;True;18;-1.50416805385806;56.3562432059531;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);194;355615;True;44;-0.373660520824446;84.8509093649919;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;2503;True;44;-1.0842397543994;146.616599621461;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;1027604;False;-1;184.000018866733;332.678213164164;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;5410;True;33;-1.9795601274723;25.9172534245073;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;161743;False;-1;24.0000956971199;67.239815380996;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);189;46640;True;91;-1.52285210766031;188.94883258183;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1627;True;36;0.6185688332741;236548.563948798;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);54;77777;True;48;0.798442297986914;7298.08641042708;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);31;2584;True;42;-1.44545002628372;646636.045174073;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);451;18676;True;44;-1.1108864504429;601.527825364561;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;10;True;1;1.07974247777823;3.65417265394742;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3058;True;36;-1.96543144991874;92.7057440993374;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;782;True;20;-1.9863990526583;60.4879942973338;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4463;True;36;-0.867630799704991;82.4729787338982;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;22536;True;41;-0.129977027946141;99.2290078812652;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;719854;False;-1;22.0011459775274;107.707101977826;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;349626;False;-1;42.003076391296;364.712828024758;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;284462;False;-1;42.2025428703998;386.445231975205;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;171943;False;-1;88.1877685460205;760.417738899149;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;140761;False;-1;82.1687705387216;781.098326837606;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;98374;False;-1;102.599757327046;921.908733463304;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;58;True;6;-1.97454669697888;7.51355570801675;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;87707;False;-1;116.066576287181;1111.27427204363;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;296;True;11;0.126713685750362;19.4597774962212;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;465;True;14;0.0885397214854786;12.2603369471546;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;296;True;16;-0.580775096351642;23.7051105481803;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;295;True;15;0.469614731366567;32.4461021200646;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;614;True;16;-1.01476586936729;27.6491466622824;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;2606;True;18;-1.0370116378353;21.7730820632202;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3503;True;32;-0.965000450129155;69.7635924256232;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);30;71348;True;42;-2.95461140198382;307.300655919642;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4675738;False;-1;-2.99999759439379;0.757912267058224;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;14854;True;37;-2.99960527103376;20.7791717625101;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;4849;True;7;-2.66082659813614;141.823201747076;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);112;282529;True;47;-2.81841530735531;114.560073228417;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);121;314811;True;19;-2.99993037432429;258.437498167287;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4837312;False;-1;-2.99999134149402;60.5697996481651;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);68;35615;True;14;-1.93499484608648;47.2769829777451;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);59;162434;True;14;-2.99999901093543;6.99455822732973;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);14;11753;True;36;-2.89379456168683;157.61342829503;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);35;8346;True;6;-1.97833451022316;99.6547762336676;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;2239044;False;-1;-2.99999852199107;0.0840778213213566;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4028936;False;-1;-2.9999647932127;60.5289185294989;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);86;1045732;True;25;-2.99998912028968;10.1243114237262;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);36;529381;True;22;-2.99999501835555;8.37023262103938;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;335048;True;21;-2.99998202640562;8.00713617506375;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);180;3187175;True;24;-2.99999860022217;8.85849900784921;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;359145;True;20;-2.99998350441455;6.95491487417765;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);164;2943007;True;21;-2.99999599065631;7.68744593403288;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;249822;True;20;-2.99988416209812;5.85751833255239;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);69;1439039;True;24;-2.99998597707599;6.48543295012574;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);11;11230;True;165;-2.00345515506503;2165.22112119906;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;6727;True;50;-2.98642957861835;193.962285729405;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;3712;True;50;-2.99561023246293;281.672381988172;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;550;True;38;1.44629688581745;307.757567490228;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;708;True;42;-0.210433810581655;365.521338286695;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1179;True;47;-2.8596312682422;358.035352748719;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;753;True;49;-1.64398380678333;418.933014314393;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;5209;True;135;-2.62042219267246;1733.36762356476;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6106;True;133;-1.24794759333504;1654.52026714912;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5013;True;131;-2.21221411750289;1851.36136973874;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;7411;True;169;-0.223040508675874;2261.4878442835;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);18;27754;True;168;-2.93890151378648;1347.8099590408;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);23;14026;True;203;-2.38922354271134;3022.35997241184;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;45782;True;177;-0.963345965353467;1209.69114324277;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;3268;True;50;-2.99028805363471;426.330573180156;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);190;384044;True;95;-2.99990109074856;182.23015984857;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);236;610405;True;100;-2.99998477846383;123.147973964691;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);76;197470;True;100;-2.99986788444215;160.809303110649;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);24;16445;True;113;-2.99442162830123;2268.37972015629;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);117;148855;True;142;-2.99997779075055;474.07875603598;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);483;1063706;True;23;-2.99998431466519;5.6921149160992;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);123;866201;True;23;-2.9998454935848;5.68722007318146;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);11;46087;True;25;-2.99897226970595;61.3170001108765;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;19993;True;33;-2.9948475882387;48.8486083886718;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);19;100342;True;37;-2.99921669159048;65.8999964558947;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;39590;True;27;-2.99941742978963;60.2968859210186;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;7738;True;33;-2.99830827489417;48.2026640952067;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;92997;True;37;-2.9993699239564;64.1166855325842;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;37599;True;27;-2.99979156721374;58.9946826193799;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;20195;True;33;-2.99283315706664;48.7269606132146;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;92442;True;36;-2.99942786246512;65.2309067156415;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;42697;True;27;-2.99899661913467;61.6292882330877;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);28;59868;True;30;-2.98706590476775;342.764325119315;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;15398;True;28;-0.655301363046887;1909.78988095074;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;4258;True;45;1.26763030247187;238.212662160372;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);34;18046;True;66;0.221219795393394;323.886554087137;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);31;8749;True;88;-0.649333752528454;946.201327250248;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);174;22560;True;58;-2.18813657257154;995.119918545787;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);145;55090;True;52;-0.823303002781842;158.075331652231;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);123;16916;True;53;-0.126297662559104;1027.07641837904;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);310;45852;True;87;-0.608830787059306;556.678597778982;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);253;1008;True;62;-2.73196919715589;6296253.26972369;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);290;1004;True;62;-2.6290646836297;6275867.25715588;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;133025;True;18;-0.999515011906398;4.43469661352293;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);26;342585;True;33;-2.13337401446578;14.3946124110579;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);71;1181267;True;23;-0.999954424798467;7.22641969403676;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;9448;True;22;-1.22883554372417;517895.354041832;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);76;183984;True;24;-0.926860535483277;32766.1366930047;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);16;297010;True;25;-2.86170989920465;7.34171001666323;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;13324;True;20;0.661067649564272;523062.99280543;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;175654;True;20;-0.999847549945045;6.44506874055545;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;104224;True;22;-2.94234463476685;5.91951554689185;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;78128;True;35;2.40484800534549;45.9357355099664;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);39;412863;True;28;-0.998412196523702;8.38415519682946;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);23;270386;True;21;-0.823666752233946;56.0541751687176;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);58;117497;True;40;-2.16780429108432;83.4454023610274;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;3152;True;45;-2.95950757617108;158.222714911635;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;1074318;False;-1;183.000032611191;315.305312517068;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;3193;True;36;-2.35529031015713;29.1838864491572;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);224;52545;True;72;-2.58693480472403;145.325456759565;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);228;76637;True;100;-2.8379167634239;133.989958640807;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;1627;True;36;1.34612919499452;236548.55617375;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);34;61331;True;50;1.41085254699497;7184.84494770854;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);25;2584;True;42;2.51767366077643;646636.079715661;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);31;290;True;33;-0.6038696391526;10997.6949608425;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;20;True;1;1.65859986965479;4.60761507330041;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;4363;True;39;-2.06923593723645;52.9880337291741;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1284;True;22;-1.5042077733689;48.5172077688136;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;8674;True;34;-2.39389626932978;86.662195926282;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;17294;True;50;-2.94027856827727;99.2898416133816;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;883956;False;-1;23.0045049488565;108.732651365373;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);129;73654;True;60;-1.74971515068305;358.817980617572;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);505;227321;True;83;-1.68354708267541;364.100120767029;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;224032;False;-1;87.425117271219;774.223466402938;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;181803;False;-1;83.5016753564131;763.111140441717;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;121447;False;-1;101.194102011711;988.70126081803;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;53;True;6;-2.48705507139073;6.83470070617783;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;106633;False;-1;119.103178500246;1099.57487288044;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;262;True;12;0.255927077148076;22.0938397001564;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;226;True;12;-1.20873372825269;15.4287454863911;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;384;True;17;-2.47973039722058;20.2902054174106;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;412;True;17;-0.853382602265748;37.857916542111;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;572;True;18;-1.37710153980977;27.2416880301723;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1832;True;24;-2.93055073541149;48.0095065465508;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;6441;True;35;-0.860863075526833;69.2867645452665;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);40;84496;True;53;-3.96016656233006;297.246165826255;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);611;2023644;True;23;-3.99999974668026;13.0227013371984;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);10;25617;True;39;-3.99978031218042;56.7368100596845;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;6183;True;7;-2.07545214801815;116.675638028601;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);150;385405;True;42;-3.98531021549614;120.842518671488;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);134;351223;True;18;-3.99965142086132;242.267719966616;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4924739;False;-1;-3.99998630583286;59.6847377408021;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;2332;True;17;-3.95358585191592;449.363938714406;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3215266;False;-1;-3.99999636039138;0.600131319300905;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);76;55342;True;35;-3.99855377897553;78.6298058005271;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);28;4046;True;6;-1.99691020697211;196.002464112709;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;1243379;False;-1;-3.99996251240371;0.216675065587548;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4551751;False;-1;-3.999994661659;59.3698657275738;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);73;916761;True;22;-3.9999760724604;11.7990706167064;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);18;277924;True;24;-3.99987536296243;8.77927018519702;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;232368;True;20;-3.9999963529408;5.83676793957765;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);41;900699;True;24;-3.99996882677077;7.22712022960437;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);23;509237;True;19;-3.99999372288584;6.77518581969119;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);100;1887052;True;21;-3.9999842904508;7.58067232376457;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);19;378079;True;20;-3.99998231604694;6.80402874545975;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;321594;True;26;-3.99996123835443;8.91506132253687;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;16547;True;165;0.548675393009873;1643.96064543586;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;3788;True;50;-3.9629558063871;270.883689303767;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;2416;True;48;-3.98205959051012;372.036593828238;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;520;True;41;-0.271243232428675;304.969850452781;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;841;True;41;-1.90945146880553;374.875038679623;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1438;True;47;-3.13880137314033;402.192730826555;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;804;True;50;-3.99117397889084;403.951003251174;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5519;True;133;-1.89050002297875;1755.03115761099;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5168;True;134;-3.4851852056967;1786.74044823868;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6076;True;134;-3.48179940855214;1557.15262316128;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;51226;True;168;-0.451182676689319;1065.92414018144;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;18246;True;166;-3.14155041758975;1577.44393559255;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);23;22298;True;196;-0.842677602936829;2229.62268073513;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;8560;True;167;-0.183230205524354;2353.3419392583;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;26131;True;50;-3.99748091399552;126.18099323066;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);179;384344;True;95;-3.99980884417883;183.801915516079;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;15260;True;99;-3.99690116569256;1145.12604785802;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;15138;True;96;-3.99868587031899;1108.44154335237;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);30;43569;True;122;-3.99987107887858;653.419080083992;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);637;1101449;True;148;-3.99999695643782;153.727566215189;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);66;535730;True;24;-3.99989679828281;5.60409054719316;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;6245622;False;-1;-3.99999275803566;4.77939699246566;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);24;48635;True;25;-3.99952029064275;62.4067698596565;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;20942;True;33;-3.99938291683764;49.4365881911246;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);33;86419;True;37;-3.99819230288183;65.7540507038619;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);10;49778;True;27;-3.9989131130273;61.8727506559246;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;27546;True;33;-3.99903645366385;52.7251882829667;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);21;109489;True;37;-3.99933028966157;65.9503301082274;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;36680;True;25;-3.99926121160354;58.6831070784174;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;30374;True;33;-3.99481291323659;52.7054751200165;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;106135;True;37;-3.99924058094585;65.8161749055585;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;45669;True;25;-3.99873445928038;60.9715399802066;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);29;57487;True;27;-2.34916822907942;341.714962545223;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);23;18020;True;49;-3.37987252295943;1701.19619393538;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;4305;True;48;-0.299121623998099;240.218736803724;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);45;20102;True;62;-1.61665590834648;362.807021131855;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);32;8657;True;88;-0.448201856784617;940.392144583398;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);161;22042;True;59;-1.45048020661365;975.850426929698;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);232;86278;True;62;-2.36935670225385;126.204419721439;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);306;36228;True;51;-0.637681814207547;1051.22182278068;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);283;37651;True;86;-1.42857785403197;585.387200876849;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);262;1000;True;62;-3.30229826611574;6275862.62861489;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);309;1020;True;64;-3.91757132481671;6301572.61375684;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;162720;True;19;-3.10221064048922;4.45411742935004;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);31;383192;True;33;-1.97691261767266;14.4643412192616;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);151;2348474;True;24;-1.9998978003859;8.11404591286569;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);16;12134;True;22;-3.77131171141347;521086.656421786;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);43;99948;True;25;-1.03253350734363;32756.7111018092;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);16;292794;True;24;-1.99170373007269;7.32165159491094;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);24;23204;True;20;1.12206521682537;523385.986869274;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;193058;True;22;-2.31261594142421;6.33984747728083;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;64310;True;22;-2.98110759210824;5.63291502659464;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;72510;True;37;0.0553711373616803;45.9783309136445;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;242575;True;28;-1.99065231531423;8.18124508616896;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);55;600025;True;21;-2.05497209264663;51.8174677903519;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);234;422403;True;44;-2.73372630716009;82.4130759420783;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;2412;True;47;-3.37224992707942;172.931478985575;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;1036256;False;-1;182.000046171248;316.621637302474;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;6831;True;37;-1.98861981182761;26.1644607463565;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;184818;False;-1;22.000127516687;64.410415216993;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);236;68574;True;106;-2.23549254156439;152.607829550785;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;1627;True;36;0.3097168711525;236548.497923632;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);41;68937;True;52;-0.917817926461724;7210.36785747772;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;2584;True;42;-1.84519665215406;646636.042227302;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);33;310;True;33;-1.93250795450644;10450.6415112907;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;10;True;1;-0.168549442742276;3.58842676424193;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;10162;True;43;-1.48636074619664;42.6340379365649;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1670;True;25;-1.50232353783321;40.8886615452433;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;9361;True;45;-2.45405557307138;84.1390381983955;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;18328;True;46;-1.26351182780392;95.05154582522;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);589;687861;True;51;-3.69332805261637;73.0591152335836;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);496;255861;True;68;-1.87169130885587;287.72224594655;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;368704;False;-1;40.3797496186475;404.112221650199;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;204629;False;-1;91.4742492816757;745.918147192775;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;164886;False;-1;82.1327705719195;781.789403768037;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;116400;False;-1;99.9467907408005;936.009208534843;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;64;True;7;-2.91310930946521;7.53088123211372;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;101580;False;-1;114.112501763791;1148.54075208456;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;247;True;12;0.152264878224705;21.3817036634476;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;290;True;15;-2.74943758116543;11.768181251705;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;653;True;16;-1.29485190533793;26.9235538085227;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;264;True;17;-3.81931027389099;38.0290567229873;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;709;True;20;-0.591269752286034;25.3631233874663;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;2654;True;29;-3.72579652058231;49.1983520108944;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;9314;True;36;-2.55569691516259;61.1449661318626;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);32;76355;True;49;-4.70857379944463;298.940218058601;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3094772;False;-1;-4.99999578576535;0.225255805296835;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);33;50925;True;44;-4.9993489542973;89.1635806491345;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;8390;True;8;-3.76775150129933;84.7718804107107;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);115;297677;True;41;-3.25912201230373;109.025478996642;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);125;344624;True;19;-4.99968810472623;235.337367716815;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);509;3125332;True;9;-4.99997446313499;59.8445882147275;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;24833;True;15;-3.81397254709805;85.2493017150631;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;2944860;False;-1;-4.99999821186066;0.892547640672349;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;17278;True;34;-4.9966442631542;107.810618474906;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);26;3511;True;7;-3.76811394876247;224.959773616148;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);607;1190076;True;9;-4.99999911524355;0.0577352179284074;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);656;3714018;True;8;-4.99999431427568;59.3217738452745;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);52;779244;True;28;-4.99999783467501;9.78965947168982;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);21;368198;True;22;-4.99999528285116;8.18622669764774;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);10;246065;True;23;-4.99989497940982;5.77333297003306;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);30;433383;True;24;-4.99999369960278;6.96201312426801;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);21;490807;True;20;-4.99998105224221;6.77974673771177;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);154;3001492;True;21;-4.99999846331775;7.510623645033;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);24;421175;True;24;-4.99999339692294;6.98753506290955;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);344;4842460;True;23;-4.99999987427145;9.31966272968386;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);20;19094;True;173;-2.03236898082884;1497.29104449369;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;7100;True;50;-4.98015743213713;174.973118860834;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;2652;True;47;-4.99677790794372;386.101061273478;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;458;True;40;-3.47375963277824;317.611277606448;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;903;True;47;-3.90558373132049;314.327920923517;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1771;True;45;-1.97500785485609;405.869282035403;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;715;True;45;-2.83814917217854;435.931624628878;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;5919;True;136;-3.313097133447;1760.04294123378;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;6393;True;135;-3.62794909096693;1546.71528399633;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;5000;True;129;-1.01031404734138;1794.22118769964;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;12566;True;165;-4.75985680695617;1683.34410424217;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;8525;True;168;-4.73372847760735;2515.10853481809;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);50;50321;True;205;-3.1103634359829;1456.32978508323;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;10378;True;163;-2.67579227391434;2028.92831440083;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;81920;True;50;-4.99989369418467;170.410888720044;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);55;96943;True;95;-4.99998512677848;226.662318550078;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);81;187353;True;99;-4.99997921288012;155.060678489476;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);32;64377;True;97;-4.99882517382448;272.983721615725;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);31;20329;True;115;-4.99994362704453;1593.57269735981;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;1160960;False;-1;-4.99999474734068;118.266748043592;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;5522559;False;-1;-4.99999959487468;4.67581920944248;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);767;2104950;True;23;-4.99997178558259;5.64413289401208;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);20;40779;True;27;-4.999447581358;60.5192576584747;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2206;True;34;-4.9429601663458;52.2199278078165;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);45;91916;True;37;-4.99902152921959;65.9162766852229;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);22;42368;True;25;-4.99913211911876;61.0296907888927;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;10354;True;33;-4.92275494612882;48.121405319592;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);44;90212;True;37;-4.99875328969152;65.7696657429814;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);24;45587;True;27;-4.99623822048131;61.2297543235784;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;18711;True;33;-4.99818877316927;49.1493774447482;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);24;99921;True;37;-4.99975875020016;65.5767909818386;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;20188;True;27;-4.99426940921427;58.6995993892307;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);38;55165;True;30;-2.41841186183431;341.321639435151;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);30;15921;True;31;-4.58715724273918;1868.61754608683;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);10;4302;True;45;-2.32189714597626;240.989544863784;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;3670;True;74;-0.117398331462125;424.41923681653;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);44;8414;True;86;-3.1474512480886;965.685583197406;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);236;23003;True;65;-0.935318959846775;978.967638922372;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);216;55333;True;59;-3.91149479379481;157.127709955875;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);270;23271;True;50;-1.88894996274679;1069.33581382882;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);378;35596;True;107;-1.50495540467322;616.731825906102;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);347;1003;True;64;-4.48600009991135;6237204.53129787;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);419;995;True;62;-4.22317266893721;6362117.52649945;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;138340;True;19;-2.99852616339853;4.30477536090474;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;329273;True;35;-2.98020249417992;14.3237512453682;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);150;1126598;True;24;-2.99959430191647;7.14954935297499;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);31;18983;True;25;-2.72889833605331;520182.824153162;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);102;168359;True;23;-2.87693982193104;32765.2793796057;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);16;218187;True;26;-4.8701187129459;7.39228043228625;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);18;13232;True;20;-1.73979278502045;523045.298789154;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;195710;True;23;-2.99981635715804;6.22457685936895;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;98493;True;24;-3.86322605836355;5.8256450813876;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;70616;True;37;-3.87470781285069;45.8727319964724;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);28;384247;True;27;-2.99784189276297;8.32271221605041;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;118311;True;22;-3.08348432559682;55.9819114464907;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);59;81429;True;47;-4.88118649454843;78.4697937015328;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;2835;True;45;-3.81451086085965;226.365092083975;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;796367;False;-1;129.00016074162;283.195759689688;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5519;True;37;-4.59613757654845;23.8894532382517;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;129873;False;-1;21.0000352831558;82.4709766721819;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);450;96428;True;112;-4.28825944628951;118.68006747766;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;1627;True;36;1.73127854556371;236548.68456378;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);57;64567;True;48;-4.90758916358817;7197.18533403954;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);38;2584;True;42;-2.24126892035886;646636.099461849;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);281;9637;True;54;-1.57278862156569;763.017729897676;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;11;True;1;-0.50577944959783;3.94368927257973;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;12952;True;42;-2.97538667822973;45.2625345412979;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2183;True;25;-3.68691764710793;40.0195161880883;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;4405;True;35;-2.67005221344067;43.3352029736418;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;18207;True;51;-4.57254543880585;78.9553289981487;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;682289;False;-1;21.0009805057202;100.975273415712;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;283038;False;-1;38.9595799417978;371.621366595169;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;227322;False;-1;45.9696953189418;410.868911976421;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;139020;False;-1;82.0332480450316;747.827972201088;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;116852;False;-1;85.2963253093401;774.250066380249;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;81268;False;-1;93.0783588737614;878.667757090581;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;77;True;6;-3.77606994881112;7.62018422863138;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;71016;False;-1;117.099482741253;1174.36227738436;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;283;True;14;-4.39589455695632;20.7560200008711;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;349;True;15;-1.62143198150277;15.2317615164235;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;582;True;18;-0.818752793510795;21.1705200089827;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;889;True;25;-2.99996521230785;30.1122909748539;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;510;True;22;-1.93209800260705;27.2702283871522;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1249;True;18;-1.70673583294579;32.0884387065716;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;7004;True;35;-3.67901032729028;52.3253155999487;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);29;70684;True;40;-2.24002185436409;321.968835416102;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4267326;False;-1;-4.7368988388352;0.422341149128442;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;28727;True;36;-4.10081937814573;31.5392627318482;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);13;3245;True;7;-0.669243137935088;210.6339500661;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);99;266987;True;47;-2.41078570106123;119.224369065908;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);144;389457;True;19;-3.89658883489261;236.60398664539;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4825112;False;-1;-6.03664662705769;64.1942851720687;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);42;22302;True;13;-1.47351518887869;62.9452101649577;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);66;170641;True;16;-4.79094693667499;12.2922544921513;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;6772;True;41;-1.67542276414626;182.749125710439;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);30;6328;True;7;-1.11741968392012;129.807523526495;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);373;1002481;True;8;-4.5764315867996;0.155762480728015;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4687691;False;-1;-4.95394041286722;64.1531423545974;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);24;345807;True;22;-4.33805168087308;9.05374117026301;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);19;327572;True;19;-4.21235991600045;8.02274916676463;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;249470;True;20;-4.4298060731209;6.00235580588463;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);327;5005821;False;-1;-5.03602935966436;11.0451776856387;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);28;342152;True;20;-4.72949262718746;6.83843783260836;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;1007357;True;24;-4.73602882232701;6.96488409720593;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;228714;True;21;-4.55493266490077;5.82168176830273;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);24;549948;True;24;-4.36202456201225;5.47716579710921;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;11007;True;165;0.0540626020482686;2087.91705045356;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;6445;True;50;-2.82129208219169;155.956325633056;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;3482;True;49;-2.68132454318782;275.230302917762;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;627;True;38;0.431096054926214;322.106860757439;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;894;True;44;-0.726357260347327;365.203053090199;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1293;True;47;0.861486249786136;338.935788675033;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;755;True;46;0.426010984862012;425.010397621672;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;5157;True;138;-0.981148842632618;1693.75127971267;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5122;True;129;0.527020786330211;1836.67362336682;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;6034;True;132;0.122608364988556;1490.00059971016;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);14;23941;True;167;0.882673210994478;1241.99447208918;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;12389;True;164;0.246450558597487;1849.72317118281;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);35;46045;True;199;-0.766492485024188;1489.32152991917;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;12645;True;166;0.120454604934739;1726.48155388699;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;5496;True;50;-3.38249319923322;260.99273037685;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);182;382583;True;93;-4.25644731997728;181.685658197136;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);46;124401;True;98;-4.38351589299424;189.739569182013;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);46;128018;True;97;-3.97015937481779;184.874608660394;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);23;20762;True;112;-3.13368805102926;1592.2876736806;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;1397679;False;-1;-5.01999047752217;147.573988106742;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;5375429;False;-1;-4.55285968204578;5.15668824881667;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4140312;False;-1;-4.31164919816926;4.9686804008463;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);21;42971;True;27;-3.18639256054316;61.6754986982302;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;8046;True;33;-3.28592396978603;48.9040775155347;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);47;96299;True;37;-3.42186021003484;65.2786086946136;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);22;43501;True;27;-3.61811716345249;60.1092537078394;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;18236;True;33;-3.69664470916992;48.6596429775378;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);19;101799;True;38;-3.28454199006228;65.338722982296;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;38576;True;25;-3.92502068975263;60.2966809832769;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;19091;True;33;-3.07826094898324;48.9542398880547;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);19;97585;True;38;-3.96656820703051;65.307811313196;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;37318;True;27;-3.5784094007339;60.0962424594783;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);29;57557;True;28;-1.1992602162772;342.074939113992;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);23;17491;True;49;-2.66396419789482;1725.95675956218;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;4282;True;45;-1.50117869098799;240.423138947072;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);35;17867;True;60;0.0265493709819337;330.042155381527;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);33;8650;True;88;-0.782662679980639;944.559850621105;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);165;22325;True;56;0.14445134998755;989.109055832419;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);217;79799;True;55;-0.695704856302075;129.615460738048;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);215;29064;True;47;0.628058853009104;892.887200807269;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);382;53141;True;87;0.911759352243028;515.803758723762;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);269;1004;True;62;-1.2269516355463;6267844.77534978;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);310;999;True;62;-1.83493376829759;6341530.20719808;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;118040;True;18;-2.03852583013215;4.67937440067268;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);29;350173;True;33;-0.563396985154381;14.4677016250898;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);102;1483479;True;23;-1.73004030077624;7.57970223164646;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;8710;True;22;-0.893044812789847;519835.069620878;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);77;176916;True;23;-0.568367724163461;32771.4076791297;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);14;246835;True;25;-1.23810675891103;7.38879175990029;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;2431;True;20;0.991545119398015;515557.339270451;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;204335;True;22;-1.75968931546881;6.50579629885625;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;84790;True;21;-1.60956611039547;5.89897601157603;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;62231;True;36;0.329152456852169;46.8831310770212;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;413320;True;28;-1.52891392877178;8.39655720148199;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);131;1303598;True;22;-0.144416125780096;55.6178767496353;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;2720246;False;-1;2.86315254677012;55.4161240704709;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6847;True;43;-1.06281973921454;115.610320304947;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;1046807;False;-1;129.863809751987;304.87865557201;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2103;True;30;-0.624325401571378;27.8264866201207;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);268;57505;True;70;-1.17853957094628;131.836777175124;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);198;56985;True;94;-0.505621097993065;168.137937388145;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;1627;True;36;0.750841358647649;236548.586674917;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;75950;True;48;-0.0254238178725095;7266.62847725329;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);26;2584;True;42;0.489163488227448;646636.085239284;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);32;293;True;32;0.478278146276023;11030.6054158395;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;10;True;1;-0.365990599061567;3.16499293736111;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2072;True;31;0.677349582991053;84.0220895220474;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1457;True;22;-0.495326815602082;41.3963863003874;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;13143;True;36;0.505377175952963;88.0853359165364;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;21858;True;46;-1.16887090910039;99.2601910405505;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);40;54529;True;46;-0.521907223715237;73.61036300083;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;473063;False;-1;35.8624410597969;353.480085352523;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);879;395447;True;79;-0.87421175290422;219.256366102299;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;201451;False;-1;91.0092303953149;751.524190463426;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;172469;False;-1;80.3518765402478;741.52154180814;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;117444;False;-1;109.023780808668;973.984522877444;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;107;True;6;-1.19548213623646;7.75667134411392;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;97815;False;-1;117.809031131345;1149.34372780253;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;182;True;11;-0.676433536437449;23.7008254825441;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;497;True;13;-0.313078344655872;13.4754911669325;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;239;True;14;0.9199266390742;22.8104026887567;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;329;True;15;-0.423157128830163;32.7580041383724;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;498;True;18;-0.608753506509254;21.7182050826546;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1859;True;23;-1.6699276608925;49.0230963115424;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2010;True;30;-1.35689810445435;66.2119785403447;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);33;74485;True;46;-4.43058961485185;306.19639282386;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3237453;False;-1;-10.0536673504009;9.31839981816205;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;35885;True;43;-7.47379310334449;29.3636984478757;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);34;24023;True;7;-5.52189326580954;36.3370134902763;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);120;301038;True;48;-5.28641451114985;114.865507249665;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);129;315934;True;19;-7.03373820690085;252.914306273016;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4794929;False;-1;-9.51117235202892;61.1456004290653;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);38;21722;True;11;-4.41454367218672;62.2520297452486;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3226296;False;-1;-10.2591222623996;1.42696643230764;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);18;11775;True;37;-6.64439225561028;110.574671522097;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);65;40213;True;7;-4.99102247170151;21.1131740789421;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);701;1587441;True;9;-9.55630597207264;0.150602573577589;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4617278;False;-1;-9.08748210195256;60.8762302009315;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);18;249124;True;22;-9.77063726053613;10.49006377215;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);34;670444;True;19;-9.05887269443354;9.34047745243283;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);18;355583;True;21;-8.65562807597421;7.99895784512021;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);32;717714;True;24;-9.40207788056611;5.35662262323938;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);20;422374;True;20;-8.74211341293106;7.03960675264993;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);130;2397534;True;21;-9.41391783637397;7.72307273875759;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);18;381322;True;20;-8.99141114507285;6.84311366889333;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);90;1809610;True;26;-10.1081308265645;7.11705749895454;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;7836;True;164;-3.27466993520395;2510.65053740821;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;3733;True;50;-6.31018514796401;236.615555050827;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;17207;True;50;-7.24324995412608;113.872687535203;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;795;True;38;-1.75754087110817;326.001638755451;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;670;True;45;-1.19304254761298;347.480328519025;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1256;True;45;-2.47678239615329;364.433915641864;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;702;True;50;-1.67244773104791;430.034339094708;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7513;True;134;-2.46108092760896;1579.27358511853;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;5923;True;133;-1.3987003348775;1771.01682622734;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;7619;True;133;-1.20750815550438;1398.41321943234;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;11989;True;172;0.393902531728548;1765.87859522808;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;8392;True;163;0.0148671240055169;2411.64074429478;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);28;24547;True;198;0.281628695399672;2370.75022220751;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;9171;True;162;0.377899784264118;2298.07326905881;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;3186;True;49;-6.72649275328676;461.812871114953;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);186;384633;True;95;-8.94804844762728;178.542953038172;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);63;173798;True;95;-7.70152770308065;159.263943920696;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;56747;True;97;-8.16061351743528;311.040714467135;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);23;17009;True;115;-6.09504232318935;2053.64199607672;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);413;671993;True;139;-9.74809029057713;190.480563711931;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);147;1046932;True;19;-9.0040059912522;5.66814271306429;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);95;694365;True;21;-8.96949358106757;5.6879159094162;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;44399;True;25;-7.92418709260507;61.7484740374961;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;19163;True;33;-7.62029890046369;49.1564725097305;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);12;68790;True;37;-8.04618129181703;64.7140812926005;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;51168;True;25;-7.83817310529317;62.1188120598884;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;22882;True;33;-8.69705512190811;50.7144057608584;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;83388;True;37;-6.97406861686731;65.0422335835585;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;38154;True;27;-6.42127038671898;60.566091726659;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;17005;True;33;-7.49879314598393;48.1944461742588;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;83039;True;37;-8.87443353000388;64.8912778414492;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;35518;True;27;-8.42745300936878;59.8381145197066;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);28;58929;True;29;-0.911539619021965;342.537186902162;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);20;15345;True;31;0.417405014019758;1911.64915368141;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;4260;True;44;-0.238460700188109;239.937201848047;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);33;18602;True;71;-3.30835649825552;323.386860419078;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);30;8683;True;100;-0.301276969751132;941.974442747617;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);149;22029;True;58;-0.00133315534399214;993.856467905541;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);170;67547;True;59;-3.05929317691684;140.221565368325;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);108;13699;True;47;-1.31861737005461;1101.30236299771;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);293;42341;True;94;-3.69106638887603;586.625979601283;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);255;1003;True;62;-3.43375497888566;6294938.86880511;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);302;998;True;62;-2.06172505998123;6307026.0388838;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;102937;True;19;-5.17859788044072;4.35913983119774;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);32;384489;True;34;-3.59912508752863;14.5437604068299;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);111;1716081;True;23;-6.05534258635344;7.58976836101511;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);16;13085;True;23;-1.32571699037926;519100.699579894;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);77;179972;True;23;-2.1362970259699;32772.3667969656;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);12;227729;True;24;-5.13348568894855;7.26437159382802;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);16;15745;True;21;1.20164357620048;523249.221165447;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;200551;True;22;-6.47530725474925;6.38632581751603;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;97630;True;22;-4.94375441232417;5.83464374369424;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;82394;True;37;-1.65755667362559;46.2441261051093;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;419928;True;28;-5.45039930499511;8.30526665747387;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;69584;True;24;-1.20370848408044;53.5663756661767;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);295;1206542;True;45;-3.41052840976304;49.6826247152912;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5541;True;44;-2.72784313203238;106.901521883917;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;1082914;False;-1;125.658226869889;282.79028005583;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2412;True;30;-3.5044571930394;24.5644086431347;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;189259;False;-1;20.3992885885249;83.1084608781992;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);471;140405;True;121;-2.21156242956911;106.557039805248;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;1627;True;36;-1.45931572094647;236548.55088205;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);40;67215;True;54;-2.5259022899472;7086.38743819338;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;2584;True;42;-2.37984308772649;646636.058813484;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);34;381;True;32;-1.80968629121051;8340.51294898771;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;13;True;1;0.0899224471553148;3.5397334009718;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;4492;True;34;-0.0996510955775198;97.9779770149003;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1388;True;21;-2.02735923608385;41.2372805379503;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;5728;True;35;-0.835107293051129;84.2628892144178;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;25611;True;55;-0.464893017564744;93.1261985505748;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;988345;False;-1;19.5935317874982;101.601539643319;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;428111;False;-1;26.3663629892432;327.628516265886;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;349942;False;-1;44.6611261367242;407.522090855787;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;199997;False;-1;81.6817959635111;747.04084329506;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;173543;False;-1;75.4813973947912;702.314903884507;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;115294;False;-1;106.571178768016;1005.15719046594;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;96;True;7;0.426916430997961;8.34294479569519;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;104630;False;-1;115.129360230194;1150.92469824041;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;230;True;11;-0.600806975788982;21.3651179541336;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;417;True;13;-1.65007463281988;14.5252222079507;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;228;True;14;-0.461148501922656;22.9078727326794;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;798;True;21;0.0365447022275025;36.569928644286;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;786;True;17;-2.25062973497412;25.5688952455337;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1861;True;22;-4.35336836492368;49.3179048056285;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;8683;True;32;-0.424445397766811;63.7375821992831;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);40;86266;True;50;0;297.588801819031;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3267128;False;-1;0;7.1958069743608;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;7720;True;39;0;132.441167238741;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);41;16249;True;5;0;59.1049585125276;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);93;234577;True;47;0;109.470727856887;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);244;600072;True;17;0;230.186583197471;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2625;True;5;0;74.2997575601065;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);30;27975;True;11;0;55.2255566540895;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;2514090;False;-1;0;23.8112701103355;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;7542;True;38;0;172.884098542039;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);58;10436;True;5;0;90.8208134406968;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;11101;True;8;0;19.4128042138203;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);26;196647;True;13;0;62.034996206031;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);68;1213434;True;21;0;10.5751994316996;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);62;610913;True;30;0;9.8344170371929;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;374922;True;21;0;7.29014985468086;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);276;5004323;False;-1;0;7.92724498786911;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);40;743855;True;19;0;8.19367506170908;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);258;4301673;True;32;0;9.73579114047637;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);23;406317;True;23;0;7.27269559153704;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);301;5005654;False;-1;0;9.38703560073565;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);27;24919;True;185;0;2364.15205689651;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);57;201826;True;50;0;150.627975764852;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;17891;True;50;0;95.2857368945961;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;432;True;38;0;359.407199372809;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;884;True;44;0;395.503084984892;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1085;True;49;0;473.167195377035;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;837;True;49;0;435.054535587765;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;15707;True;144;0;2070.76199316337;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;13086;True;137;0;2120.60430885394;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;18942;True;134;0;2319.78299854211;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);44;57075;True;184;0;1922.92031151211;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);21;19401;True;175;0;2787.75488670868;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);55;36943;True;215;0;3415.23604276667;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);23;21376;True;184;0;2682.07789241734;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;42806;True;50;0;152.369933705326;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;2723614;False;-1;0;5.53880442213148;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;1745228;False;-1;0;169.968904143897;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;2029818;False;-1;0;163.839552798767;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);71;78889;True;124;0;707.013956614702;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;1529706;False;-1;0;127.340391469951;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4639048;False;-1;0;5.45238893517483;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);184;694992;True;19;0;5.63753802384701;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;44090;True;25;0;62.2518612417643;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;6752;True;34;0;48.8404128601303;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;16687;True;39;0;56.9104645666379;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;3433;True;27;0;65.1397408755071;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;7118;True;32;0;51.0177392697729;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;74944;True;37;0;67.9906324698511;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;27503;True;29;0;55.0057523956438;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;31697;True;32;0;53.3428816880424;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;40586;True;38;0;62.6864674281193;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;20681;True;27;0;58.8489110547301;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;14043;True;35;0;320.801266526046;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;2594;True;67;0;862.649880816512;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;3929;True;64;0;238.866569832434;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;9134;True;74;0;263.647673854799;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);20;6072;True;126;0;782.159129865358;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);58;8563;True;82;0;951.230042953747;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);393;162905;True;65;0;138.962047214618;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);105;14573;True;59;0;792.638017346426;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;50968;False;-1;231.319302067142;2243.60658452081;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);277;1029;True;62;0;6238002.78904038;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);213;825;True;50;0;5541390.94764824;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;164295;True;17;0;4.85128199701019;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;376367;True;34;0;14.5504910219231;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);91;1371767;True;22;0;7.49014389421323;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;672137;False;-1;6.26045351951784;524167.759082752;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;1627187;False;-1;17438.3228209566;32808.8246574803;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;335223;True;24;0;7.49505745664911;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;595102;False;-1;7.84706352990752;524240.007273573;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;204387;True;21;0;6.5253400887069;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;90509;True;21;0;5.88432933263906;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;94078;True;34;0;46.0742943010033;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);35;489173;True;28;0;8.46848815178003;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;5384;True;21;0;42.9848435533839;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;2481;True;38;0;101.295275089961;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;15276;True;62;0;100.264845065445;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;11929;True;59;0;111.195898004234;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;6398;True;33;0;31.9476059947492;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;141264;False;-1;45.941306188004;207.846359814657;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;188511;False;-1;84.0538256688906;284.199199029865;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;1838;True;38;0;206380.559407238;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8028;True;78;0;5637.80721811887;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;56437;False;-1;118.69671679957;79062.3325757619;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);37;571;True;40;0;3865.46289554365;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;10;True;1;0;3.37601890180902;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;7886;True;49;0;55.8427845877143;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1355;True;18;0;50.2806124845568;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;9464;True;49;0;94.1722072119847;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);49;134761;True;50;0;97.6600016059367;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);120;110926;True;77;0;197.441593578297;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;382634;False;-1;27.2703630399585;297.891584803845;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;281599;False;-1;44.8487034571108;500.28564846212;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;178792;False;-1;90.9923609668511;620.649162079101;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;144855;False;-1;80.4895830405578;749.348798461323;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;98335;False;-1;89.1240096172004;955.922516902474;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;53;True;6;0;7.1996905249;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;89443;False;-1;89.3260165526699;1054.86515474546;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;213;True;12;0;23.6823724372921;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;217;True;14;0;16.9546185152966;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;361;True;19;0;26.0171675475608;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;355;True;18;0;33.2554993204387;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;941;True;25;0;22.7046574688843;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;497;True;17;0;33.2766180188843;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;7522;True;39;0;73.4384516424603;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;78787;True;48;-10.1053790695017;295.824820191123;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1321;True;15;-8.16365979858643;160.983099347282;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;3630;True;36;-8.74321541415262;109.011521584543;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);112;85213;True;11;-9.10224028885817;19.2561569755195;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);96;245612;True;45;-8.71010242116925;114.106178543113;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);177;469087;True;19;-11.7711460938404;225.428298922441;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;42905;True;13;-9.79049801942729;77.4652758398817;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);78;77714;True;17;-6.72239140105722;31.2164105839457;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;2342252;False;-1;-15.0418125426597;1.66700642747802;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;14523;True;36;-4.26151352190613;157.312739703097;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);99;31955;True;11;-10.5947610253524;35.0283539579149;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);138;363179;True;11;-14.5683289429666;0.18410468551417;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);258;1745960;True;11;-13.9282272046847;56.8399118322767;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);43;772383;True;30;-14.4334255191059;9.71069033664936;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);18;350205;True;19;-13.2683405074646;8.02607800839599;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);18;379836;True;20;-14.8222764381571;6.7587644898499;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);246;4407993;True;24;-14.9638769319512;8.7145474446891;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);30;510452;True;20;-13.7087888600712;6.82469859390373;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);123;1816068;True;21;-14.1960731228521;7.64305687459896;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);59;765755;True;22;-14.872784610729;8.50434991794954;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);262;3734234;True;28;-15.3451206869262;8.12083816690434;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);19;10793;True;171;-1.91910222123949;2489.69353168823;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;2338;True;50;-10.1143573961801;337.220395821515;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;3064;True;50;-11.5384356700525;320.900814676857;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;468;True;41;-3.03349988921872;324.331414742392;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1022;True;48;-6.20246107621033;303.269751349924;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1021;True;49;-2.74573454083297;380.85855115687;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;651;True;47;-4.62907357395535;440.900904425346;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;7446;True;134;-0.262403282528931;1586.49953188195;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8263;True;133;-1.71392321474042;1444.55024291569;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;5563;True;133;-0.608956865082043;1743.21833669041;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);24;26751;True;168;-3.75124826532989;1255.53595223939;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);18;12471;True;170;-3.53431753071457;2118.69604119121;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);66;56551;True;203;-2.6028567762348;1524.34034408528;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);17;10725;True;169;1.28020794912006;2386.32833163851;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;5989;True;50;-9.14032319031824;247.396780786793;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);123;199974;True;95;-12.2227504537167;185.461230977042;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);24;31897;True;98;-10.6977356805799;508.662722551209;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);62;122688;True;100;-12.1512744407362;191.024466408403;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;20632;True;117;-12.9529806056561;1571.38943230205;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;1097624;False;-1;-13.7843220912222;152.18388438413;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);157;700245;True;23;-12.4521503140057;5.62331841906227;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);106;553558;True;23;-12.5757866609019;5.68467172862065;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;35068;True;27;-11.3156215380554;59.2721927656038;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;10827;True;33;-9.20362518908032;48.3946079776104;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);28;97801;True;38;-12.0669291561022;64.1565901265339;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;45405;True;27;-12.7505873286723;61.839640353262;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;15931;True;33;-9.2160058251885;48.3459377241203;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;96804;True;38;-11.565322597778;64.2658520947958;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;44621;True;25;-11.2921687549096;61.5564316934112;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;6947;True;33;-8.91334957105322;48.1115658505284;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);30;117520;True;36;-11.4353005429544;66.5609711281134;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;19390;True;27;-10.3090859334004;58.6633947788127;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);45;59232;True;27;-0.0369649611548204;342.989937064393;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);33;15311;True;28;-1.39337974102597;1935.57492953366;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;4294;True;48;-2.53785642161406;237.458624961445;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);59;19091;True;60;-3.26668992154092;344.871551308509;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);51;10264;True;110;-3.7065878277673;775.310349152121;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);245;22038;True;57;-7.21183445545386;981.614715265077;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);243;57649;True;59;-2.47103628188007;154.831649379297;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);614;44311;True;49;-8.33046931128344;1219.48093963839;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);396;34564;True;91;-4.96527443302776;674.163221720711;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);394;991;True;62;-4.11694888232481;6424541.68781719;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);430;1018;True;62;-4.15290696596027;6212327.41307179;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;100176;True;18;-8.8893638566596;4.26669564675155;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);37;275926;True;34;-5.35808158350006;14.0956903163926;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);163;1649880;True;24;-10.0264588454119;7.46788011340288;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);28;14914;True;25;-2.44813338464322;519446.895326748;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);109;157297;True;22;-2.11549994753931;32774.8606807582;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);28;328607;True;26;-9.28879967027729;7.31953053834057;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);67;40864;True;21;-1.27465127753023;523782.810629446;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;196281;True;23;-9.78414187912263;6.21146161799058;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;107571;True;22;-10.0524576955859;5.82324556761902;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;83284;True;35;-0.230850319134033;45.8191811845343;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;321006;True;28;-10.6466814571469;8.24625764549289;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;13106;True;22;-3.29311074925073;44.5860814419405;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);100;314612;True;47;-4.80635998430956;47.4094945815065;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);16;35080;True;49;-4.7936942561781;72.5612236616728;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);242;205949;True;69;-7.08351040576524;228.751119790035;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7909;True;39;-7.82296677853298;20.17037789165;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;138470;False;-1;36.6661341188128;118.78612815636;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;163124;False;-1;68.0552691805469;140.1645723129;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;1627;True;36;-3.09803404784915;236548.765441196;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);51;56941;True;50;0.667430574723023;7341.82150703522;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);40;2584;True;42;0.714916374292308;646636.055552731;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);43;300;True;32;-3.38529596951522;11461.7948492969;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;10;True;1;-5.82587755820398;3.83318500032034;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;14853;True;40;-3.95057922070017;44.4539970809553;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1809;True;23;-3.42622830328944;37.0068308520978;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;10411;True;40;-0.97809118914962;50.0298974409712;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;29131;True;51;-3.43495588440388;87.0540979604805;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;618923;False;-1;7.18688565566712;94.9477849550558;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);342;109934;True;68;-5.91564857731701;241.286385175944;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;196766;False;-1;49.192297066575;439.108539020733;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;120089;False;-1;90.9408387123848;791.099843011642;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;102846;False;-1;79.59496530311;786.494184286883;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;71008;False;-1;101.561148714797;953.634989107497;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;146;True;9;-3.89894543107679;7.58661835722307;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;62272;False;-1;113.202761427941;1137.01809567878;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;461;True;14;-4.21670268892866;18.2891518909682;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;839;True;13;-3.03299145782922;15.0142334062698;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;516;True;16;-2.58146914482009;16.4312831536446;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;961;True;23;-2.52867556584455;28.4762560088058;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;937;True;22;-2.94060752632286;17.6084379157239;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2311;True;26;-2.62096928423407;42.8547271875848;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;6223;True;31;-2.25248484447949;75.7632124112669;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);67;76004;True;44;-11.2389640865915;290.66730860963;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2498155;False;-1;-20.6747828648588;0.165376420600605;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;3893;True;37;-6.7963206411541;178.032427303521;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);57;22248;True;8;-12.4850934004538;33.0182027854807;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);306;267532;True;33;-9.99741673848222;105.91715661339;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);567;485662;True;17;-17.497932368613;224.836849335781;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);136;319189;True;14;-15.3740177393684;58.3441459712916;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);232;66784;True;14;-8.08494085715152;50.6512658675413;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1059329;False;-1;-19.0396602222692;0.725061169824759;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);61;13777;True;39;-7.3198482023009;162.257241564039;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);117;11076;True;8;-15.5361126245045;74.1620667681269;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);702;452038;True;13;-22.3984520241329;0.399925987186916;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;4458;True;14;-8.63748339589667;70.4099769542908;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);29;221599;True;24;-16.9992455915422;9.14311031186555;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);121;892546;True;24;-19.0881548565241;10.1483606186629;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);28;229944;True;21;-18.0982986542317;5.63822354512454;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);173;1326270;True;24;-19.6469079646472;5.40614870073146;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);61;489275;True;19;-19.4847890327958;6.75455003829521;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);395;2906772;True;24;-19.1136174614863;7.1889062512454;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);29;219334;True;20;-18.2964889041852;5.69150675015888;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);65;449632;True;24;-18.1270929247732;7.74861356675466;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);50;22005;True;166;-3.52874513173202;1544.47346860687;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);4;3918;True;50;-12.7933931847979;249.235477568738;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);3;2454;True;50;-11.6237153324686;389.451253324138;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;606;True;39;-3.26394876570867;297.655750147639;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;1658;True;48;-6.13245768462902;370.436626272561;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;1515;True;50;-8.39165853772316;406.921463730156;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;780;True;47;-4.91978099692818;427.565025638585;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;8661;True;133;-5.16756708831814;1554.36593811171;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;10017;True;133;-6.30817857858879;1307.45127102544;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);12;5435;True;135;-5.75903933184419;1658.80811249402;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);35;10379;True;165;-6.45128494743083;2305.91884409099;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);34;10913;True;165;-6.0676087560827;2147.47053014268;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);243;107795;True;203;-9.64889381436411;1354.55149032452;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);43;15324;True;171;-3.12175541918492;1845.36272931343;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;5786;True;50;-13.778816207727;241.245122549879;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);566;408708;True;95;-16.821952855945;188.662379304506;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);176;174167;True;100;-16.8461572461216;185.315647005769;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);442;458457;True;100;-18.3561201372642;137.825690133455;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);72;16233;True;117;-14.9866071143377;2228.23978267352;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);856;519961;True;150;-17.2825698050553;207.821809314122;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2203019;False;-1;-17.7401733120838;5.48188150996031;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2329572;False;-1;-18.1089310739952;4.88519866121163;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;22705;True;27;-13.257741319338;59.0498154912338;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;21055;True;33;-12.5097271465796;50.4749636892368;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);55;97458;True;37;-15.6771798186842;66.5393166773696;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);25;47591;True;25;-15.5354544364331;61.9610304620974;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;17374;True;33;-18.6900706291245;48.0001185425814;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);34;70547;True;38;-14.8009108295254;63.168887472765;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);25;47137;True;27;-13.1909103621423;61.0335869622605;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2416;True;33;-15.266897536116;49.0029534895692;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);49;98053;True;40;-14.4982527181205;66.8342650454799;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;36717;True;27;-15.169107495766;59.055540086614;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);84;54654;True;29;1.30528371597173;340.819128828289;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);69;15884;True;31;-4.67835737726751;1879.61391869574;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);21;4154;True;48;-1.95326927472229;238.765676574687;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);97;15278;True;60;-4.07797315635303;369.786283869679;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);99;8917;True;110;-6.01950422679539;872.042467419298;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);529;22484;True;61;-3.45422077608053;993.138046092293;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);487;55376;True;61;-6.50175156328301;157.896210982706;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;28651;False;-1;368.600947887086;1367.87324455407;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);663;24538;True;86;-4.14650866252218;859.347010679575;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);739;1001;True;62;-11.7519798644446;6294935.10288791;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);847;1043;True;64;-8.31180580668173;6033598.80026013;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);26;163293;True;21;-13.4623348888842;4.260016782474;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);111;389448;True;35;-11.4485103611276;14.4254194725454;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);422;2127871;True;24;-16.5173434383599;7.73915879498543;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);84;21733;True;22;-4.5844120428328;523174.353514957;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);687;515248;True;30;-5.57190577526077;32778.024619737;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);61;337254;True;26;-12.3852180690944;7.32433515894145;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);173;52278;True;21;-3.65945784794667;523859.670615711;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);28;180279;True;21;-14.508924179937;6.05293822231011;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;78398;True;21;-12.9625044260286;5.80051081234107;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);25;82774;True;37;-4.45735709999297;45.9657987526697;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);85;505400;True;30;-12.6757529389833;8.42877659306829;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1747;True;23;-7.45266274762424;47.4777209539044;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);69;43172;True;50;-5.44508559893595;84.6078086293519;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;2169;True;46;-8.45670853286819;188.698004551975;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;2252;True;54;-5.22130012299639;284.087909764845;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;25739;True;45;-8.69224324020094;15.9923724247801;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;53802;False;-1;59.3537669324126;248.209744157967;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;88324;False;-1;111.100693140331;194.614044609465;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);23;1627;True;36;-5.26850274732318;236548.69711999;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);100;57906;True;52;-4.53227820658119;6872.15691096786;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);75;2584;True;42;1.47740020207211;646635.987569697;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);84;394;True;32;0.00890939748958153;8786.89304056391;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;10;True;1;0.367474825204948;3.78683445777356;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;13768;True;44;-6.17281776377656;42.0040823849863;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;2278;True;23;-5.8662403627145;36.0719613400756;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;7863;True;37;-7.82257981990231;77.5495786044576;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;9936;True;55;-8.2523279374403;80.3328492884114;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;384761;False;-1;-3.74851528879865;76.2431034367847;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;143234;False;-1;36.8722960241842;421.508644217486;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;111294;False;-1;58.9200069155752;511.995000322182;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;69524;False;-1;86.7307643468525;759.639272785712;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;58443;False;-1;80.1690222681898;781.076690201775;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;40154;False;-1;103.804653439738;933.867063788278;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;55;True;8;-2.88770288373663;6.69539400949204;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;33943;False;-1;113.357040435082;1179.75011117462;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;324;True;10;-4.80769428005261;21.5229720919994;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;958;True;14;-9.88891541748736;15.1667327705653;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;415;True;15;-1.91020521010449;19.0275522228088;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;869;True;24;-7.63517758988326;22.8744649619586;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;690;True;17;-3.59348371507309;26.3541192902485;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);3;10333;True;27;-10.1308480664118;24.623573823872;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);3;7840;True;35;-5.91475639852487;50.7886382523718;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);71;79159;True;45;-10.4797269448888;289.225586235164;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1431187;False;-1;-23.4274918819398;0.590815289740503;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);43;47041;True;37;-19.8618343694679;55.3132117994287;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);194;51637;True;8;-17.5609290293346;25.4948855120582;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);222;253696;True;42;-3.91714415936778;102.014597249178;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);362;424266;True;20;-19.2746447531721;219.035693050945;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1296;True;5;-4.53188626570614;83.2807563013145;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;5819;True;14;-15.4245621130052;182.367062207867;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;886631;False;-1;-23.4414561964792;7.69942009007705;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);54;20451;True;39;-16.6284554538982;136.132244660648;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);674;54675;True;9;-14.108863676163;34.2654150386201;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;720334;False;-1;-22.8197031580804;0.191918872041464;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;2893;True;16;-9.63299752481307;74.9663678877058;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);127;1139550;True;27;-23.8119904508999;10.6408829839276;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);25;284343;True;19;-21.7312145392196;7.79424827326298;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);49;479326;True;21;-21.8333711117909;7.91985764038172;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);634;5001005;False;-1;-25.2094813614382;7.99959452863521;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;391803;True;20;-23.1393577903087;7.43652481781149;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);272;2200684;True;21;-26.0835005659133;7.78603654389909;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);26;252785;True;21;-23.8320591436078;6.03440825443611;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);722;5002056;False;-1;-25.4389195548446;9.44903772406078;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);32;9969;True;172;-7.18058596959899;2414.46551834801;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;101339;True;50;-16.9995374890513;128.668747666249;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;2078;True;49;-9.53580641871348;423.174434924912;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;616;True;40;-15.6259118917229;289.761652402468;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;644;True;41;-5.84992555753206;364.424594417445;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1114;True;44;-5.76693663333;413.879184006441;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;704;True;45;-4.80633251121291;441.614660583164;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;8075;True;136;-7.65569558201313;1805.36208019293;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;7154;True;135;-6.39593200947138;1630.11557153053;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;5855;True;133;-12.8595043299887;1667.87271866516;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);25;10830;True;173;-8.14761952757644;2287.79816733001;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);24;11445;True;166;-8.44981492405285;2052.53405313226;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);154;100449;True;203;-6.55236032647981;1262.62480032871;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;9293;True;163;-6.41073628934545;2256.79382628705;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;14884;True;50;-17.3843261556176;167.137364861984;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);195;211330;True;95;-19.8826654806805;187.412693095096;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);95;125456;True;100;-21.0047044486683;182.011180255169;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);25;15339;True;100;-22.4997461324598;1066.18563095883;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);52;17706;True;116;-14.6604098744496;1981.60170227537;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);390;296640;True;150;-21.4248987228252;273.111347598425;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2656760;False;-1;-22.8315571271024;5.50258194499208;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;3161915;False;-1;-22.5115205289704;4.60667034318648;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;18210;True;27;-18.0055501283948;57.8634844385758;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);24;39442;True;33;-15.3034605817539;54.1746896410877;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);44;83418;True;37;-19.2589910335387;66.0311107977466;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;20664;True;27;-16.5009688620113;58.1680440027313;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);2;8050;True;33;-16.2841352522536;49.3902437028872;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);35;91632;True;36;-17.8614102853574;64.5132407457698;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;51942;True;25;-19.1238955432874;63.9867989248967;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;13631;True;33;-17.2683099963828;48.0035824100569;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);39;101775;True;37;-19.9004379468415;65.1807646404499;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;40420;True;27;-17.2855670613201;60.3308967551726;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);51;47065;True;34;-12.084428306979;337.379596254369;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);50;16472;True;51;-8.47266426479943;1828.50842146645;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;4261;True;48;-1.85962327809388;237.936030132547;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);77;17671;True;63;-9.50106650868313;335.178036964145;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);68;8538;True;110;-10.3834626089265;875.259940529911;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);382;22528;True;65;-9.26489105349229;990.981729521084;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);97;6420;True;54;-6.6755189061343;864.490271444657;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);260;13820;True;60;-8.01841262883636;1090.45197428932;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);497;25526;True;105;-8.26695230783842;875.065010765095;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);595;1013;True;62;-9.14313454311838;6237586.57212248;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);709;1033;True;62;-9.35382054611931;6077500.12376995;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;161818;True;22;-19.1153710663126;4.20238584988456;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);96;396291;True;35;-15.6492975814657;14.4801108575267;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);363;2331727;True;25;-19.3221093551784;7.96178029556095;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;11031;True;24;-8.30774601430385;515767.372709266;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);209;226108;True;26;-5.64584482700859;32769.2607499167;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);56;425306;True;29;-16.8058129514624;7.3754817367914;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);156;67664;True;22;-6.1472307383318;523993.726199757;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;184914;True;25;-21.0741286359947;5.810081039112;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;115090;True;23;-17.3404943949348;5.81513831308322;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;86755;True;39;-8.04878554739382;46.1399669267293;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);60;486902;True;30;-18.1275280474648;8.42460592861637;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1136;True;24;-11.8355433267904;52.7465253189171;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);51;50539;True;53;-8.58360175689155;75.9565200886403;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;11749;True;60;-10.2405010301716;111.731199036099;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;621039;False;-1;10.9508883739996;176.471538416627;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);15;21583;True;41;-11.0338711942354;27.9316419492209;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;75848;False;-1;55.6091353260883;208.66159486925;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;106667;False;-1;117.933800261348;292.440012735012;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;1627;True;36;0.271841424485648;236548.778132841;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);67;54405;True;50;-4.65611559626187;7370.96172789551;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);54;2584;True;42;4.28481821539334;646636.314385231;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);446;9818;True;58;-8.0392080756043;749.404874986891;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;10;True;1;0.963367368644708;4.06782964085285;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);26;81582;True;43;-9.87247093341983;43.6223846083191;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);3;10838;True;31;-13.2109166432767;31.6707049932247;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;9746;True;33;-14.9251370166218;74.5726951811165;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;19419;True;55;-7.96063154976819;73.0341776278436;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);589;402834;True;49;-8.61393051005965;60.928433867464;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;193564;False;-1;29.9811037439983;374.807687793292;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;150786;False;-1;59.7429733612797;488.316353556096;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;94630;False;-1;80.5243622781699;761.882558797957;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;78517;False;-1;78.3040208912256;803.153513551014;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;55782;False;-1;106.387572374353;1018.92503157306;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;41;True;6;-6.38260815206369;6.62127800704734;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;49525;False;-1;105.705231117151;1123.22026169011;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;380;True;10;-12.5113737952632;18.1589452580709;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1575;True;17;-8.28512540470857;13.3480245306852;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;549;True;22;-8.37314928302713;23.701449022506;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;919;True;22;-5.46414886748622;20.4355050829434;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1239;True;24;-8.95422236551572;23.5931402946495;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;4180;True;29;-8.05228314496646;27.7578385945003;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);3;13572;True;43;-11.5446829365241;44.2192375332678;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);24;57953;True;44;0;292.419444110276;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4073051;False;-1;0;1.70256242458729;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;19554;True;36;0;79.4747525385546;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);42;16190;True;6;0;59.9586510614956;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);116;256567;True;44;0;109.997433913882;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);254;598696;True;21;0;215.049827133233;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;898;True;5;0;84.2091384007313;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);218;184562;True;17;0;61.4123930468353;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;2648300;False;-1;0;1.15373437113042;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);349;244796;True;39;0;142.668460767793;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);42;6030;True;5;0;138.666941414676;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;2191795;False;-1;0;0.0698437423229449;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;642;True;11;0;65.6041913942909;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);38;562723;True;22;0;10.7808289984223;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);32;607953;True;19;0;9.93826214730201;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;282825;True;21;0;5.54474392916338;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);317;5011791;False;-1;0;8.75578752037026;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);51;687704;True;18;0;8.00583507652394;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);158;2621974;True;21;0;8.40747503031313;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;437654;True;22;0;6.48316464759719;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);321;5006800;False;-1;0;9.11053184496337;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);24;18815;True;186;0;2811.83501140778;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;38273;True;50;0;93.2940408087976;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;116762;True;50;0;136.321967840835;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;519;True;40;0;323.170626576322;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;879;True;47;0;353.08494906037;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;894;True;47;0;402.447406073225;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;902;True;54;0;461.994750909389;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;16391;True;145;0;2013.58617934496;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;14260;True;140;0;2098.19110530728;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;17270;True;144;0;2315.04042245494;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);29;23363;True;183;0;2724.09006003107;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);49;38412;True;177;0;2798.4356432917;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);64;39610;True;221;0;3112.52278778795;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;21766;True;175;0;3039.42843177063;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;50730;True;50;0;168.256280448636;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;2403478;False;-1;0;7.23325085458855;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1743759;False;-1;0;112.180187160579;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1845701;False;-1;0;90.2900058642383;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1647651;False;-1;0;115.11773527107;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1399847;False;-1;0;124.445688621605;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);191;1289316;True;20;0;5.65975538261051;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;5327454;False;-1;0;5.05079764760775;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;22967;True;28;0;54.2597539574779;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1662;True;33;0;47.0519042838936;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;34961;True;37;0;57.6912743032582;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;11109;True;28;0;52.3791300214689;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;17122;True;33;0;51.5231607639678;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;52399;True;36;0;56.6175062442628;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;20222;True;26;0;53.7976534368101;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;2129;True;33;0;52.2050774107585;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);48;94023;True;38;0;66.7111994117973;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;48421;True;24;0;62.2112373778922;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;7382;True;29;0;324.298148513961;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;6800;True;41;0;425.263535896002;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;2304;True;48;0;247.000109788288;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;10676;True;65;0;191.737424322665;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);25;6725;True;134;0;873.003222219839;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;3387;True;65;0;678.988470210314;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;179647;False;-1;8.59950829613268;287.459528611469;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);42;6066;True;59;0;712.487535988175;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;48042;False;-1;186.162987730629;1523.15459611971;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);295;1041;True;56;0;5951883.6627446;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);368;1045;True;70;0;6373021.42575321;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;151110;True;18;0;4.83559301060526;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);27;343810;True;34;0;14.4434784603414;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);155;2220961;True;24;0;8.22080977255831;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);499;327571;True;40;0;524061.08550686;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1548969;False;-1;8512.68259080026;32802.2754736953;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);24;306284;True;23;0;7.47269404019412;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;670378;False;-1;6.5229348200943;524439.100556304;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;206958;True;21;0;6.53649635238061;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;88660;True;21;0;5.87511685928612;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;100439;True;38;0;46.6537198548808;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);38;549153;True;28;0;8.57947087573139;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;667;True;22;0;60.1472363197771;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;4860;True;50;0;79.651816178744;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;4581;True;66;0;299.675365501094;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;7506;True;76;0;251.413944106303;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;5824;True;26;0;24.2294013209675;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;167407;False;-1;35.268034209061;214.40927158924;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;180342;False;-1;55.1579737091052;452.354767185052;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;1823;True;38;0;208160.007977355;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;6833;True;68;0;4080.31497744326;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;62844;False;-1;89.7194905893211;77936.6723961092;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);38;1043;True;34;0;1222.32577125824;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;10;True;1;0;3.16285530207417;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3413;True;47;0;72.888626483567;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1146;True;21;0;57.3128326693447;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;13156;True;45;0;89.4602707175053;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);24;80545;True;61;0;88.758237721088;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;1105320;False;-1;3.87571033685045;123.054826664337;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;362578;False;-1;25.5200573779085;345.927949510031;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;312749;False;-1;27.098288229131;414.747351707584;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;197029;False;-1;60.126966104951;616.095544581989;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;155689;False;-1;58.976470280486;661.972758281042;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;105301;False;-1;70.3413602264733;856.707033603521;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;49;True;6;0;7.00343336844943;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;89922;False;-1;69.629906537933;1128.7916838448;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;359;True;16;0;22.7856229252721;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;881;True;16;0;16.6139344965513;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;199;True;14;0;24.0249219172048;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;379;True;18;0;37.5912770508874;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;387;True;18;0;27.1782514448214;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1957;True;31;0;45.1095707537665;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;7382;True;32;0;68.3602998454592;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);28;66530;True;44;0;290.717265429186;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3240192;False;-1;0;0.496268424664522;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);24;30523;True;39;0;127.828987406603;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);35;16394;True;6;0;57.2902027994487;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);166;407618;True;38;-7.81617582140348;105.346221145042;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);210;537171;True;13;0;204.293015432867;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;612;True;6;0;79.4823214044707;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;10467;True;14;0;142.00111789352;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2499521;False;-1;0;17.8429257210562;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);423;315993;True;43;0;148.740395044155;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;3842;True;6;0;207.500659769501;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;510;True;9;0;412.604378979904;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;113;True;5;0;69.0876277374317;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);53;1048375;True;22;0;9.73472422766148;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);24;479118;True;21;0;9.41194002763595;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;474759;True;21;0;6.24587384488508;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);129;2635747;True;29;0;7.62891304525653;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);38;689865;True;19;0;8.20039497416964;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);104;2304158;True;30;0;6.55728602709988;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;262213;True;21;0;5.95895228318974;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);278;5014477;False;-1;0;7.63294081449682;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);32;28299;True;178;0;3117.48895700983;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;47772;True;50;0;117.908820375193;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;10833;True;50;0;92.5003751248414;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;561;True;41;0;308.328249896332;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;718;True;46;0;358.603657188145;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;974;True;48;0;444.95432779984;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;860;True;48;0;442.726518301695;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;15428;True;151;0;2165.9378739836;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;13189;True;143;0;2012.59283222185;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;16081;True;137;0;2253.7343920109;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);24;24381;True;178;0;2612.23512582466;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);35;32795;True;179;0;3143.60694846228;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);45;28732;True;215;0;3823.20656833189;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);28;24812;True;176;0;3111.69312610108;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;111805;True;50;0;188.258208570564;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2117652;False;-1;0;30.3059213396111;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2073369;False;-1;0;8.46082764263823;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2107292;False;-1;0;19.1982999481735;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2397736;False;-1;0;98.9269479731424;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;1448658;False;-1;-0.0811147498728886;177.341757569427;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5178556;False;-1;0;5.19415107840983;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;2425555;False;-1;-0.0022406998172122;5.54378545641614;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;8849;True;27;0;55.0627547717398;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;15681;True;32;0;53.1648371054696;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;82436;True;35;0;65.0548347983304;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;11088;True;27;0;51.4329677942384;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;18158;True;34;0;49.8802517569601;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);42;126317;True;36;0;62.8611764921351;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;7029;True;27;0;55.5650454280483;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;8883;True;33;0;61.282140089449;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;74516;True;41;0;64.0813405395435;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1214;True;24;0;71.5954220903232;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;389;True;15;0;222.699883352118;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;2900;True;49;0;704.93924112164;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;1411;True;52;0;260.723038708623;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;3291;True;60;0;256.470367080808;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);46;7672;True;109;0;508.018585621285;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);65;6382;True;64;0;280.538862351167;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;285299;False;-1;0.251441319534576;65.9606339334318;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;69596;False;-1;4.8342519644195;168.616937406928;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;46078;False;-1;14.5205193632425;276.469639282548;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);545;623;True;46;0;9940317.23740063;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);660;1071;True;56;0;6271892.65768992;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;120048;True;18;0;4.83942775854833;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);51;348664;True;33;0;14.4410268751293;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);264;1465232;True;22;0;7.66532213875722;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;221823;False;-1;5.56286360341241;524470.723683498;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;798959;False;-1;583.730316923033;32802.1399309109;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);52;355856;True;24;0;7.56666342553606;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;239473;False;-1;5.23768738526811;523922.811750956;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);39;209750;True;21;0;6.52942259528051;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;56727;True;20;0;5.84866191065376;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);47;114413;True;37;0;46.7150820828537;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);79;569126;True;28;0;8.56592677233633;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;675;True;27;0;65.8376059470113;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;7573;True;45;0;64.3462368917178;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);24;33641;True;97;0;180.40133107578;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);91;67690;True;97;0;74.9657188049243;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);65;92598;True;36;0;33.6298161739478;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;78849;False;-1;11.415253450756;260.367074695429;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;84248;False;-1;1.13348495115909;720.325999611153;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);24;1901;True;36;0;273089.437433281;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;16469;True;70;0;3915.79723435717;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;28514;False;-1;118.189279661732;177424.208833913;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);53;335;True;32;0;6239.4495724966;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;10;True;1;0;3.39267144528993;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;5002;True;40;0;77.0424177074347;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1192;True;21;0;53.7737926732964;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;8906;True;45;0;88.2808824120045;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;15019;True;51;0;79.0092261233709;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;352586;False;-1;6.93729693681871;209.499699038094;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;170951;False;-1;16.1272840602895;339.148093526675;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;126345;False;-1;19.603551962318;394.801646380514;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;82303;False;-1;37.2256625080887;650.143951349063;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;70245;False;-1;23.3831353440366;605.571232280917;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;46857;False;-1;35.9482204238181;818.370015325053;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;47;True;6;0;6.4822965971029;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;40570;False;-1;51.5620009370789;1067.58626662624;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;266;True;11;0;22.9748561225336;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;201;True;12;0;14.532991235869;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;470;True;20;0;32.7265237806723;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;610;True;15;0;29.6536856486525;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;513;True;20;0;24.6167467391297;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;2218;True;25;0;48.1161957586499;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;3689;True;43;0;68.4397813159601;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);130;294974;True;57;-296.081150718495;263.220065608551;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;5283;True;28;-48.2375404454163;123.58376627383;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);405;658633;True;37;-281.343756670307;177.492945165882;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);322;133358;True;9;-5.25150352003677;27.4629172736245;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);93;243845;True;41;-59.8916647956571;96.3945613752593;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;11399;True;9;-54.9401982723778;185.43499837832;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;668;True;10;0;74.7382418303055;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;4840;True;20;0;504.309686502153;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2597238;False;-1;-91.3601855750093;2.9966617649238;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;723564;False;-1;-476.357704875713;167.450369070085;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);545;93269;True;7;-6.5156745372896;29.189216378648;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1916850;False;-1;0;0.0481233882616991;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;352;True;8;0;83.7024022756631;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;118147;True;28;-16.398140140528;10.0371643033378;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);22;408875;True;19;-18.3780865406044;9.20055890136662;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;151557;True;23;-12.4482845012894;5.09824160565887;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);293;5011002;False;-1;-49.1336526918902;8.99763158530663;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);35;560937;True;18;-21.1111822956216;8.20950256727179;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);172;2798506;True;24;-63.3151690528888;8.49784422610457;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;172338;True;22;-4.06338831915129;4.99093228421918;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);376;5009469;False;-1;-41.0606433525551;9.84355180529273;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);47;28191;True;176;-300.695178033025;2558.29129342912;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;6125;True;50;-3.24836338856476;118.977650586016;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;7977;True;50;-50.9417521899627;99.4472512752871;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;559;True;41;0;278.95673309838;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;946;True;46;0;368.385109687228;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1079;True;48;0;411.730612328135;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;787;True;52;0;411.713179835459;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;11202;True;143;-351.989339485732;1670.71526768894;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;17885;True;140;-392.845270409123;1781.82899670704;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;10611;True;141;-277.619079710532;1664.05471552922;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);26;18953;True;185;-12.8470377397491;2192.03532841245;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;20105;True;179;-475.311451822425;2285.37562223256;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);79;37618;True;215;-1098.13026317215;3317.04839372967;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;21448;True;187;-319.168130845779;2216.73840310345;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;3869;True;50;-41.9040487868765;364.974533825353;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1645526;False;-1;-131.783932779395;91.781663839837;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2058192;False;-1;-204.863809630892;159.300695260979;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);265;703968;True;100;-381.147428138129;135.750820607037;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1968022;False;-1;-361.059670522491;119.557776262748;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1377832;False;-1;-1159.25898378864;164.156605419764;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);219;1219165;True;19;-4.23860336977629;5.57198428106295;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3773209;False;-1;-7.58488155938493;5.59057852523584;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;23164;True;24;-7.28261357987619;60.1160803981456;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;9406;True;34;-3.1351185626037;52.0327882409792;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);20;52354;True;37;-36.3228214297196;60.2681394029864;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;7814;True;25;-33.614896776327;54.3265628604857;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;15705;True;34;-20.7557817282694;52.3003540841384;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);93;189130;True;38;-112.939460465808;72.2794811702576;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;6497;True;25;-1.81317660683449;56.4284722874066;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;10413;True;33;-4.01268511184715;50.2394120264248;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;23205;True;40;-10.7624570936881;50.7335248211314;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2023;True;28;-8.2722026361652;63.8490892305328;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;2084;True;31;0;318.11633890949;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;937;True;28;-300.595387142015;1179.3369179128;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;1909;True;52;0;245.321511531204;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;7756;True;68;-6.98629252351608;150.385508879435;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);35;12053;True;177;-60.3111576328416;286.160985785749;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);114;67409;True;48;-11.6285493106879;79.372941979459;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);142;62506;True;68;-79.1740319028584;87.8233339373487;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);54;6686;True;91;0;649.710815871416;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;45493;False;-1;-312.184612102255;1749.99662933786;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);462;853;True;50;-2559262.64617488;9829934.17209035;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);237;804;True;50;0;4107685.83248874;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;95291;True;17;-1.88875840228029;4.66655426453534;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);40;334210;True;33;-6.00090072565258;14.3436849533825;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);151;1625216;True;23;-7.57229233167096;7.87902560754691;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);423;225867;True;43;-235505.896600811;524885.391126216;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1349639;False;-1;-12262.7758678984;32812.0404966095;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);34;371846;True;24;-2.44182380346395;7.45443798849422;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;508466;False;-1;-139407.186362065;524639.266425571;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;214079;True;21;-2.32205095802486;6.54243651757725;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;83198;True;21;-1.94451211546921;5.95671115340224;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);22;147543;True;41;-16.1007245813435;46.7721837665678;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);39;495555;True;28;-3.71269724907259;8.56598193190824;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1049;True;31;0;91.0364109465487;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;8868;True;56;-14.4225110086257;103.055343686574;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;70080;True;88;-22.1531038799054;106.312828926405;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;9584;True;79;-0.0987214864545649;162.321983726508;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);76;181773;True;34;-13.0475063935157;33.0898096301026;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;86798;False;-1;-394.827689981053;1117.91471584388;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;152829;False;-1;-691.49886095442;647.520379725379;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;2588;True;42;-25362.9235571047;217958.860623716;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;12268;True;108;-1667.83102872471;5118.97227857907;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;50466;False;-1;-10430.7468418605;120507.559987264;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);42;458;True;44;0;6754.52575238082;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;10;True;1;0;3.04902592926968;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;13484;True;41;-5.16345187974363;43.6486669422711;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;8265;True;29;-2.40203570330143;38.3207424701933;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;24444;True;49;-4.34308861242101;67.8030282147438;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;34585;True;49;-19.3073639144284;71.9835244194745;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1032254;False;-1;-87.1907950775045;89.1806584989739;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;321074;False;-1;-162.167593229664;288.355607732999;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;269080;False;-1;-210.719066876237;271.911055120981;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;170767;False;-1;-337.701471169396;565.126989524722;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;140671;False;-1;-238.313134458718;587.331094011345;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;97937;False;-1;-251.238309217467;743.192583707936;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;107;True;6;0;7.79827953691351;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;84811;False;-1;-390.091902354487;899.358459026426;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;284;True;12;0;25.6732608272286;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1187;True;14;0;18.1581337006205;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;399;True;17;-1.23458546908466;22.2878677974247;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1007;True;18;0;28.1885647305839;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2628;True;25;0;27.4663161366549;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2695;True;24;-1.36342581506588;30.9237902797547;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;6313;True;34;-5.30022156058973;67.2705559098585;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);187;356726;True;46;-761.779599031001;268.514151124405;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2875621;False;-1;-248.057900570651;1.10709103864814;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;790576;False;-1;-1121.29920830893;218.646155388183;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;43115;False;-1;-15737.9804393502;18689.4195886666;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);18;36447;True;41;-73.9183214933176;89.0019973713939;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;582;True;8;-33.9784289803292;112.99830034761;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;410;True;5;0;74.9551970652689;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);111;95588;True;11;-238.671158945423;39.89080144492;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2123084;False;-1;-554.292166590108;5.46268386307123;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;606781;False;-1;-1149.16421183415;241.358607973835;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;66341;False;-1;-813.770952792963;1100.616729269;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2085687;False;-1;-29.7484559679605;0.0562730576486103;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;741;True;9;0;102.999511257765;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);108;1654914;True;22;-158.302356096015;10.816854489853;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);57;966708;True;19;-118.873203968211;10.7976188350921;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);9;222258;True;23;-19.9972186987784;5.88094029774846;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);38;838952;True;26;-403.995846829571;7.86887709468837;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;824443;True;18;-69.0534819312091;8.86818810041011;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);250;4067806;True;25;-132.746201706837;9.60782690784744;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);7;150731;True;23;-21.8891240621689;4.62750687767031;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);306;4666743;True;23;-161.435898840467;9.88347560420056;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;19275;True;179;-1997.96387252465;2093.67055438367;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;7896;True;50;-243.854210222129;140.539888969325;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);3;19009;True;50;-275.329235491627;85.9903434158477;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;791;True;40;-91.9265445129678;310.515431012971;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1226;True;45;-286.230748609164;375.866426890548;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2210;True;49;-141.053727359059;460.43013736363;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;849;True;52;-153.278020422124;408.112648942315;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);9;12959;True;150;-1465.19083357961;1613.29607828829;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;17725;True;144;-857.096371885238;1609.15934442154;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);9;14396;True;140;-991.334017636741;1636.25729038092;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);30;32620;True;183;-2121.23128478322;1925.3338240106;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);35;36620;True;180;-1291.59716262678;2135.3233129603;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);60;45982;True;216;-2391.68287317648;2478.37053232022;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);25;28298;True;175;-858.732646174409;1985.2249318805;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;79074;True;50;-445.749055227775;187.011806269757;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2192037;False;-1;-658.998664208136;175.809141126559;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2246969;False;-1;-1618.55672858666;133.330729681747;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2273969;False;-1;-744.250750085332;158.757256935384;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1814686;False;-1;-1820.99590061633;162.150699150139;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);90;98671;True;149;-2320.36738112662;526.078002902218;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4390897;False;-1;-15.9172993112796;5.6773132685048;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5347318;False;-1;-16.7941518845296;5.39325509598859;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);17;38790;True;29;-87.0952289928384;59.8868320769344;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;3349;True;34;-19.6621004583708;48.9274050810894;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);24;59907;True;38;-84.1422164307973;61.4771215342439;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);7;17196;True;24;-61.091418905937;54.678672525616;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;25131;True;33;-70.1384154778175;56.7349453857133;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);67;133100;True;40;-130.915771523531;66.5437203827557;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;3086;True;25;-40.6023274978821;60.9797865841861;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;13872;True;31;-33.1748887904991;52.8645381011688;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);28;82787;True;38;-71.4550265094039;62.932521212823;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1836;True;26;-45.3801853714205;60.0402406375914;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;873;True;19;-42.0664244670793;359.871414815321;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;1261;True;27;-353.407495055347;1322.94608547854;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);2;1696;True;44;-1.00664263143146;218.824444540644;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;2949;True;86;-165.786936822485;304.737190019225;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;5860;True;154;-314.798096842803;733.157816742793;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);504;445034;True;59;-145.922002905687;26.8817336616504;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;213352;False;-1;-737.033595059987;228.397915855516;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;6478;True;63;-101.952018252315;198.84312611976;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;61384;False;-1;-1462.9841804521;1583.69493458024;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);231;834;True;56;-12.133002176586;7117515.85748181;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);160;312;True;26;-56144.5994572078;11074658.6240906;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);7;117939;True;17;-3.94870847694619;4.60267141163545;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;353942;True;33;-15.4324546648354;14.4949166513756;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);61;1078819;True;22;-19.02740796337;7.65212523079051;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);556;414891;True;27;-409686.774846474;524380.404478484;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1603290;False;-1;-27370.6724858774;32799.3030793932;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);25;333421;True;25;-7.75490535427585;7.57603935080768;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);746;602245;True;20;-439274.753031377;524516.557892474;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;207930;True;22;-12.8434729436682;6.58702301338148;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);4;92637;True;22;-6.90712056636195;5.96975206600722;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);17;158179;True;40;-38.0209017524794;46.850899770957;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;519882;True;28;-9.77202275022414;8.58617148180415;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2105;True;26;-2.95347824752272;50.2348654144173;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;64116;True;58;-135.77357979969;75.1803102273276;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);33;80319;True;84;-140.957950168848;166.902335468547;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);48;61293;True;107;-284.848543961772;233.93509880114;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2343850;False;-1;-44.3883821770028;32.5000576840514;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;53423;False;-1;-1900.42961903837;2527.82571894323;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;88361;False;-1;-3077.57781305421;4547.93883848265;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);52;8211;True;50;-60000.6633611615;126485.155234361;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);14;26964;True;68;-3866.93519862315;3525.20497092307;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);346;24850;True;70;-438125.639736733;369866.890294704;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);36;765;True;32;-29.5949049378809;2567.916126463;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;10;True;1;0;3.56030707797648;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;9596;True;35;-29.4273595976745;62.390673642474;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;30682;True;20;-16.0940196871682;40.627802417291;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);2;11798;True;26;-125.066158492411;77.8000479114052;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);502;2038630;True;48;-129.719596875155;61.8788730081289;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;873366;False;-1;-239.867585946403;120.074403070159;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;461902;False;-1;-463.096273709376;289.207585497188;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;386935;False;-1;-497.536873995827;359.152900836839;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;240991;False;-1;-508.987139050786;495.334887025343;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;195261;False;-1;-578.36613100303;540.288554516652;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;133471;False;-1;-952.947416477979;676.18863693368;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;49;True;7;0;5.80436496173957;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;79193;False;-1;-797.213539135022;678.948576346993;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;549;True;12;-6.75351696588264;21.5339437195724;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;566;True;15;-0.729910797675112;14.8970738925053;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;779;True;25;-4.80425347328687;27.3170623739944;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1222;True;22;0;34.3504978453776;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;672;True;19;-5.729487867639;24.4589844009333;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1849;True;17;-10.8274980745434;42.7769621640206;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;4179;True;41;-23.5749387026767;70.7164034058941;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);31;75337;True;44;0;310.606731689162;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3607768;False;-1;0;0.349001600148686;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;3448;True;33;0;195.45241200483;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1727;True;4;0;382.358482382889;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);113;313010;True;45;0;123.788104401438;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);150;413142;True;19;0;236.386138864295;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4944450;False;-1;0;63.9470201821308;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);37;20526;True;9;0;70.5693599370713;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;2123782;False;-1;0;26.623275709292;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);50;67961;True;35;0;54.4788259812441;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;2396;True;5;0;321.928540458358;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;703;True;7;0;346.652286824098;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5099889;False;-1;0;64.7147940338802;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);86;1204654;True;25;0;11.0093136128805;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);28;630363;True;22;0;9.15088550114287;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;234598;True;21;0;5.96058448628519;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);293;4713036;True;23;0;10.4400149176013;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;482032;True;20;0;7.60381065348271;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);75;1602458;True;21;0;7.35700231148396;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);20;417983;True;20;0;7.07938958221725;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);210;3988795;True;26;0;8.62377996621146;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;16042;True;166;0;2595.59974175748;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;3012;True;50;0;343.264347865928;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;6000;True;49;0;158.619646110743;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;474;True;38;0;343.446251306042;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;700;True;43;0;363.678998464876;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1334;True;47;0;402.446865837638;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;642;True;45;0;449.386930600767;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;18244;True;141;0;1285.99045496902;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;8966;True;134;0;1863.56961346394;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;9593;True;131;0;2093.5940738613;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;14182;True;166;0;2294.50714885784;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;13899;True;163;0;2514.21006892512;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);131;194776;True;206;0;1400.70643618934;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;14570;True;165;0;2277.76428151004;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;3136;True;50;0;419.804801973861;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;1649223;False;-1;0;135.47480392448;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);333;879887;True;100;0;128.403877198759;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);62;173191;True;97;0;168.564718909751;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);42;28003;True;122;0;2157.58282259131;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);359;643443;True;150;0;194.594539805547;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);251;1725982;True;18;0;5.71476358104563;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5551240;False;-1;0;5.07212293303323;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;23427;True;25;0;57.4607808213488;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;27146;True;33;0;53.3851288925259;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);44;104752;True;37;0;67.7309836043032;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);21;46045;True;27;0;62.6641235615406;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;27992;True;33;0;53.6396994332744;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);42;107144;True;37;0;66.2244347879716;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;21982;True;27;0;58.4156891839533;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;8011;True;33;0;47.649312344217;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);24;62287;True;37;0;65.6793138101046;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;43859;True;27;0;61.7754506972409;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);76;53309;True;33;0;340.006915817458;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;7722;True;47;0;1820.36856882671;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;4357;True;44;0;233.319994312914;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);78;15925;True;60;0;267.301970303004;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);74;8771;True;122;0;648.719678253147;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;35307;False;-1;550.022918751055;1476.0909810317;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);728;94505;True;50;0;121.522479061784;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;53382;False;-1;15.2004205718638;290.147295180395;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;21349;False;-1;183.219843283677;1593.96136327531;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);645;987;True;62;0;6447758.04817259;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);709;984;True;62;0;6283310.0819188;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);23;179080;True;17;0;4.89088588363378;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);64;369544;True;34;0;14.765013145651;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);518;2280366;True;24;0;8.36237734572109;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;179828;False;-1;6.09506361400479;524226.830421744;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;681842;False;-1;31141.7409450713;32801.9539125283;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);53;344203;True;23;0;7.60593621572489;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;195338;False;-1;8.24235839352122;524288.847298091;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);44;211814;True;21;0;6.5314285953814;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);20;96521;True;21;0;5.98465735045994;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);21;46590;True;34;0;46.6626120539855;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);165;614788;True;28;0;8.70426282403556;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);186;764409;True;18;0;58.7592599534511;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);269;176470;True;41;0;82.5435820214039;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;4357;True;48;0;209.843795191786;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;377311;False;-1;176.700565678161;304.605491902306;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;2594;True;27;0;32.1616970286818;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;62659;False;-1;24.7001565968619;144.360620607586;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);613;66106;True;102;0;169.909655539017;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);23;1627;True;36;0;237089.392563681;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);26;19236;True;68;0;4942.39884683132;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);78;2584;True;42;0;645911.488883999;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);314;6844;True;46;0;681.906699321356;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;10;True;1;0;3.32211080396336;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5036;True;35;0;94.480995622592;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1394;True;20;0;45.7310520246152;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5963;True;41;0;76.9251937879575;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;14721;True;42;0;94.7967971002301;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;335977;False;-1;24.701957992279;104.14061048541;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;136031;False;-1;38.0858623478961;320.666459119399;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;99293;False;-1;55.9994851692112;475.883297222413;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;62629;False;-1;112.367263358956;735.823831389923;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;53256;False;-1;85.4625860409171;789.350174334475;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;35923;False;-1;99.8449562941887;964.563645959484;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;59;True;6;0;7.28719653494592;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;32730;False;-1;118.040408168845;1162.89390360807;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;204;True;10;0;22.679878324733;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;315;True;13;0;15.5542407470387;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;203;True;12;0;23.0891968144386;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;353;True;17;0;31.5574452660596;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;614;True;18;0;26.8766505269597;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;877;True;19;0;28.8073170638854;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;3179;True;30;0;65.2845346984511;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);33;78357;True;49;0;294.700512233321;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3005658;False;-1;0;0.64793301588598;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;27364;True;36;0;53.0456322044965;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;1727;True;4;0;375.678158212245;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);121;295496;True;48;0;123.774735802742;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);134;335657;True;17;0;250.441510448155;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4697307;False;-1;0;62.4772997239274;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;4599;True;10;0;231.985919731574;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;2934968;False;-1;0;0.370715577299805;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);36;19437;True;42;0;164.927312818468;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);26;3054;True;6;0;257.109478438803;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;817;True;7;0;406.077037841747;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4645943;False;-1;0;63.6954180603147;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);45;618690;True;24;0;8.59797727638091;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;288484;True;19;0;8.25786902729681;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);33;512703;True;20;0;7.53289635941893;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);309;5001876;False;-1;0;8.21631521995378;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);39;600013;True;18;0;7.56597873092555;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);110;1991774;True;23;0;8.01392610108238;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;208010;True;22;0;5.62375340830712;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;269385;True;24;0;7.64395296568797;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);16;15350;True;169;0;2452.55320659022;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);39;140184;True;50;0;112.783378988332;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;55499;True;50;0;101.571309102389;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;553;True;38;0;335.834464651687;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1000;True;46;0;392.16799853018;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;713;True;46;0;423.297486137393;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1036;True;46;0;498.263169620174;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;7375;True;132;0;1856.54905495619;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8902;True;132;0;1888.99993989794;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;9589;True;133;0;1794.62619177858;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;19786;True;177;0;1990.70270462054;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);20;21533;True;173;0;2143.38909593217;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);46;41662;True;204;0;2165.43659189946;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;18535;True;169;0;2159.77287407964;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;3214;True;50;0;373.535916773836;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1885783;False;-1;0;6.09083257022763;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1609532;False;-1;0;199.557474080043;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1639932;False;-1;0;216.152902213082;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1824312;False;-1;0;166.492128667627;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1388550;False;-1;0;113.990088848775;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);158;1037691;True;18;0;5.70744036047268;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;174602;True;19;0;5.66286153001992;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;19908;True;27;0;58.878057653782;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;26142;True;33;0;52.5874264031835;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;79674;True;38;0;64.9279266549409;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;22609;True;27;0;59.1766132841904;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;12438;True;33;0;48.7327112600535;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);21;101213;True;37;0;65.9367249396521;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;35996;True;28;0;60.023233062712;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;14498;True;33;0;48.656991547521;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;60852;True;37;0;63.1018203992793;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;42756;True;27;0;61.5165311282248;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);21;41954;True;31;0;335.890491389346;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;5781;True;37;0;1495.87370115639;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;4269;True;48;0;235.029649081048;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);45;22016;True;64;0;271.124145731895;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);28;9198;True;130;0;717.955971446439;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);42;5767;True;46;0;988.500945169898;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);199;77962;True;53;0;109.611755890459;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);127;20000;True;57;0;685.494618275556;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);399;55314;True;79;0;518.474173852183;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);276;998;True;62;0;6304076.75800816;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);307;1013;True;62;0;6144768.15319752;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;141927;True;18;0;4.90974142185183;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);29;384379;True;33;0;14.8055702809956;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);154;2297108;True;24;0;8.49587786165294;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;553714;False;-1;6.16967897953916;524237.856319297;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1594248;False;-1;29502.5627792629;32805.8338728093;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);31;422424;True;24;0;7.67683829002229;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;687417;False;-1;8.00405888147841;524367.829703077;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;201380;True;20;0;6.53109815247941;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;95402;True;21;0;6.04172754959642;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;103787;True;35;0;45.9559526180497;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);21;358512;True;27;0;8.33188044774535;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);68;744322;True;20;0;53.2009431445097;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;2324070;False;-1;7.20000094398856;148.444214894439;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1516068;False;-1;162.000064456835;229.365004915264;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;932066;False;-1;30.6000287359581;181.545284476627;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1899;True;23;0;24.2251161802392;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);197;41075;True;68;0;206.684395694784;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);427;122806;True;113;0;133.316330463675;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;1627;True;36;0;237176.157551632;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;12721;True;54;0;3950.86013695955;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);27;2584;True;42;0;648049.550963073;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);96;4009;True;46;0;575.331491181433;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;10;True;1;0;3.43527480564171;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2081;True;36;0;89.7607456969233;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;977;True;18;0;52.4991900122264;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;8522;True;38;0;89.8388838408316;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;31365;True;49;0;88.6710246427751;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);30;37089;True;54;0;79.4687817718931;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;455452;False;-1;38.3357418651393;388.969250117403;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;326349;False;-1;53.5540074952664;428.808998007025;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;196717;False;-1;101.868429483971;681.485357983041;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;161656;False;-1;82.905378317882;742.574262251971;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;113364;False;-1;107.48487664521;946.187629143971;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;57;True;6;0;7.33189513417249;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;98255;False;-1;117.485747939202;1145.05280434044;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;267;True;10;0;20.0047607710574;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;341;True;12;0;14.7623171583498;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;374;True;18;0;27.5873626008977;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;370;True;15;0;31.1015721888726;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;331;True;16;0;28.4747688662997;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1690;True;22;0;42.1590242003883;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2704;True;30;0;72.7857348710569;
0;0;mprime;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);42;87939;True;43;0;287.380975081014;
0;0;mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;5282;True;17;0;112.786827382017;
0;0;mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;5878;True;37;0;179.214936145207;
0;0;mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;2118;True;5;0;317.099474945493;
0;0;mprime;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);134;353419;True;44;0;113.959928048705;
0;0;mprime;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);116;315293;True;18;0;255.49235929822;
0;0;mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);68;519038;True;5;0;59.8642304983619;
0;0;no-mprime;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;8113;True;10;0;143.472172960362;
0;0;no-mprime;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;2711055;False;-1;0;4.35050928395473;
0;0;no-mprime;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;6678;True;35;0;183.462131619114;
0;0;no-mprime;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;2793;True;5;0;275.497962673626;
0;0;no-mprime;prob34.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;14416;True;7;0;9.19678364684661;
0;0;no-mystery;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);78;532498;True;8;0;62.0284245562989;
0;0;nomystery-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;259988;True;26;0;11.2468199793379;
0;0;nomystery-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);15;332877;True;19;0;8.9351257071347;
0;0;nomystery-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);29;581859;True;24;0;7.80436075230265;
0;0;nomystery-sat11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);101;1999488;True;24;0;7.76813811260292;
0;0;nomystery-sat11-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);34;635576;True;18;0;7.53322668623656;
0;0;nomystery-sat11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);162;3052049;True;26;0;8.19338076529433;
0;0;nomysteryFL;nomystery-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);28;568836;True;21;0;6.27172958199456;
0;0;nomysteryFL;nomystery-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);127;2480616;True;24;0;8.36818965931086;
0;0;openstackFL;openstack-p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);19;16843;True;171;0;2693.7566160541;
0;0;openstacks;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;5451;True;50;0;160.761481079047;
0;0;openstacks;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;75747;True;50;0;125.289781268509;
0;0;openstacks-opt08-adl;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;525;True;41;0;343.219656980754;
0;0;openstacks-opt08-adl;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;826;True;45;0;372.43888449234;
0;0;openstacks-opt08-adl;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1097;True;43;0;483.852681907004;
0;0;openstacks-opt08-adl;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1168;True;48;0;473.091369356569;
0;0;openstacks-sat08-strips;p16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;7911;True;135;0;1886.50575722696;
0;0;openstacks-sat08-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;10055;True;133;0;1851.26656574127;
0;0;openstacks-sat08-strips;p18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;12871;True;137;0;2031.03525509962;
0;0;openstacks-sat08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;15432;True;167;0;2401.47607153624;
0;0;openstacks-sat08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;16103;True;174;0;2675.63744124283;
0;0;openstacks-sat08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);65;68114;True;208;0;1978.69724770539;
0;0;openstacks-sat11-strips;p01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);21;18928;True;173;0;2612.0936051548;
0;0;openstacks-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;8417;True;50;0;178.277189897716;
0;0;openstacks-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;1710477;False;-1;0;78.2898433253075;
0;0;openstacks-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;1980675;False;-1;0;200.454838600742;
0;0;openstacks-strips;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);614;1321090;True;100;0;221.622858522722;
0;0;openstacks-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);199;657811;True;125;0;124.709719106426;
0;0;openstacks-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;1600539;False;-1;0;118.587230124323;
0;0;pathways;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);874;5186899;True;18;0;5.10372899741594;
0;0;pathways-noneg;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;474;True;20;0;10.5882156931772;
0;0;pegsol-08-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;13752;True;27;0;52.5893684771227;
0;0;pegsol-08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;36362;True;33;0;53.3750274130794;
0;0;pegsol-08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;49068;True;37;0;59.72071262695;
0;0;pegsol-opt11-strips;p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;14159;True;29;0;52.749407222873;
0;0;pegsol-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;5773;True;33;0;49.9220169971827;
0;0;pegsol-opt11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);35;174345;True;36;0;69.7088464634288;
0;0;pegsol-sat11-strips;p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;28673;True;27;0;59.3763906688933;
0;0;pegsol-sat11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;22927;True;32;0;54.714072772467;
0;0;pegsol-sat11-strips;p17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);19;97408;True;39;0;66.2405849545304;
0;0;pegsolFL;pegsol-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;37142;True;27;0;58.9419061674863;
0;0;pipesworld-notankage;p08-net1-b12-g7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);31;64651;True;39;0;260.887832754799;
0;0;pipesworld-notankage;p09-net1-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;2037;True;43;0;1185.19404257803;
0;0;pipesworld-notankage;p12-net2-b10-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;4019;True;56;0;239.690377498715;
0;0;pipesworld-notankage;p15-net2-b14-g4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;2535;True;48;0;486.329497539707;
0;0;pipesworld-notankage;p16-net2-b14-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;4886;True;110;0;993.282443318467;
0;0;pipesworld-notankage;p23-net3-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);69;9249;True;42;0;1038.20397379813;
0;0;pipesworld-notankage;p24-net3-b14-g5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;223792;False;-1;10.2001650916413;230.7207266366;
0;0;pipesworld-notankage;p31-net4-b14-g3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;85688;False;-1;130.351749834536;1446.20527110495;
0;0;pipesworld-notankage;p34-net4-b16-g6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;87952;False;-1;163.130925908047;1056.27385908325;
0;0;pipesworld-tankage;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);298;1070;True;62;0;6427277.4570077;
0;0;pipesworld-tankage-nosplit;p31-net4-b14-g3-t20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);315;993;True;60;0;6337246.52502964;
0;0;psr-small;p20-s34-n3-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;175502;True;17;0;4.86968602351754;
0;0;psr-small;p22-s37-n3-l3-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);31;389855;True;34;0;14.6383417862147;
0;0;psr-small;p30-s46-n3-l5-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);127;1956810;True;23;0;7.94623917201266;
0;0;psr-small;p31-s49-n4-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);774;552592;True;58;0;524239.790401562;
0;0;psr-small;p36-s65-n6-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;1624820;False;-1;27864.7136334469;32804.253573159;
0;0;psr-small;p37-s67-n6-l2-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);25;323129;True;23;0;7.46335333505876;
0;0;psr-small;p40-s80-n3-l4-f10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;733429;False;-1;8.07277502886615;524245.955038007;
0;0;psr-small;p43-s83-n3-l4-f70.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;208253;True;22;0;6.4795162613405;
0;0;psr-small;p45-s94-n4-l3-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;107685;True;21;0;6.16227651595055;
0;0;psr-small;p46-s97-n5-l2-f30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;71581;True;34;0;46.2321873204064;
0;0;psr-small;p47-s98-n5-l2-f50.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);28;450077;True;27;0;8.50219789488282;
0;0;rovers;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;89574;True;19;0;53.8456060430687;
0;0;rovers;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);608;1992318;True;41;0;63.6044415302733;
0;0;rovers;p11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;26232;True;67;0;107.564285447913;
0;0;rovers;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;5507;True;65;0;395.437460240647;
0;0;satellite;p06-pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;3887;True;33;0;30.2475249979084;
0;0;satellite;p17-pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);579;119825;True;78;0;86.8993865668249;
0;0;satellite;p21-HC-pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);666;194970;True;113;0;122.69546994512;
0;0;scanalyzerFL;scanalyzer-p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1627;True;36;0;235418.371765321;
0;0;scanalyzerFL;scanalyzer-p03.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;4418;True;72;0;5679.6558825955;
0;0;scanalyzerFL;scanalyzer-p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);25;2584;True;42;0;647980.55368028;
0;0;tidybotFL;tidybot-p04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;549;True;30;0;2025.24855570587;
0;0;zenotravel;pfile1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;10;True;1;0;3.21826810839195;
0;0;zenotravel;pfile10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;4095;True;36;0;88.4298926198884;
0;0;zenotravel;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1944;True;22;0;42.7885517476884;
0;0;zenotravel;pfile12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2942;True;33;0;94.441426184884;
0;0;zenotravel;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;23536;True;45;0;108.243694195216;
0;0;zenotravel;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);52;54326;True;78;0;221.814107960151;
0;0;zenotravel;pfile15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;471823;False;-1;37.7044241787421;372.876294069492;
0;0;zenotravel;pfile16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;353311;False;-1;48.3091253969395;411.230686736444;
0;0;zenotravel;pfile17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;209962;False;-1;88.4407607022863;741.694782685867;
0;0;zenotravel;pfile18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;174477;False;-1;70.9177011967719;758.446935915256;
0;0;zenotravel;pfile19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;123096;False;-1;114.630944092446;901.423525121368;
0;0;zenotravel;pfile2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;59;True;6;0;7.12187227306043;
0;0;zenotravel;pfile20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;104142;False;-1;107.839922953369;1118.71853078008;
0;0;zenotravel;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;267;True;10;0;20.0180547180285;
0;0;zenotravel;pfile4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;310;True;12;0;12.5153140567065;
0;0;zenotravel;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;230;True;16;0;30.3447111142751;
0;0;zenotravel;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;434;True;19;0;36.8745408451589;
0;0;zenotravel;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;301;True;17;0;24.2790389889521;
0;0;zenotravel;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2182;True;21;0;47.7714804503888;
0;0;zenotravel;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1969;True;30;0;75.7889213078761;
