0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;6685;True;62;0;38.8280591863936;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);264;60602;True;73;0;50.7832386950226;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;9688;True;60;0;40.7077814661839;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);29;10008;True;62;0;32.4996901191606;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);67;1156;True;101;0;4191346.68613831;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);206;2710;True;111;0;38972397.3229646;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);612;17005;True;101;0;373016.332498565;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;24390;False;-1;0;12.9247034366447;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;38443;False;-1;0;4.1983450214365;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;8939;False;-1;0;29661173.804486;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;13581;False;-1;0;13.9167986518765;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;19548;False;-1;0;1079238.48485086;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7029;False;-1;0;9474135.88150824;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;8346;False;-1;0;80750730.2167541;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5355;False;-1;0;101053961.107152;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5466;False;-1;0;79041112.5556555;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3652;False;-1;0;29535578.387826;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4699;False;-1;0;56941737.2300686;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5941;False;-1;0;16081216.2944043;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;685511;False;-1;149.917882074445;208.503499731144;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;19736;True;35;0;135.719588817406;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;413063;False;-1;247.686616073524;322.939802458859;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;275165;False;-1;282.249018629803;412.412300192299;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;480302;False;-1;222.01078046361;348.019401671929;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;237490;False;-1;287.410793815991;393.861575654091;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;379291;False;-1;169.575534932456;239.528028707368;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;284385;False;-1;235.728586571182;328.464339322589;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;175646;False;-1;602.789102617984;819.48519710094;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;193778;False;-1;403.634273723706;540.290258522754;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;136076;False;-1;403.858440097122;679.419290722285;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;116228;False;-1;853.75567150522;1094.28110815177;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;143174;False;-1;873.035988567824;1185.20844121104;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;84134;False;-1;554.976089092324;1060.19350530968;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;78473;False;-1;695.208730422555;1147.26942824889;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;74360;False;-1;723.232574057342;1077.29378601426;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;93786;False;-1;1611.92319761708;2087.1331630907;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;58506;False;-1;1375.29165142709;1923.18990320375;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);38;94864;True;52;0;69.1954642039892;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;6409;True;34;0;55.9089239360345;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);67;222360;True;58;0;65.5275560754911;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);79;181782;True;32;0;36.0220024968713;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;34538;True;56;0;106.584000860612;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);45;240528;True;33;0;35.5720010226936;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);316;1459274;True;56;0;59.3537819544101;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2794;True;29;0;25.8231936697964;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;31354;True;33;0;38.9862455510533;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;100790;True;303;0;655.143922498566;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;11469;True;123;0;188.216489204383;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;13863;True;97;0;139.406142999256;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);60;292611;True;227;0;156.103585360883;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);47;364665;True;103;0;60.9181816686344;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;3860;True;113;0;93.0200207226404;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;88204;True;101;0;47.839239592365;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);57;546945;True;94;0;38.0208281613115;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);86;555462;True;156;0;50.9003343811069;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;23613;True;272;0;1178.85295710256;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;41479;True;68;0;81.5180254785553;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);97;547284;True;189;0;55.6928146817051;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;136032;True;109;0;56.3738071884578;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);42;333789;True;85;0;59.2386728447838;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;62671;True;89;0;85.5110833351323;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);51;492362;True;88;0;38.3097700080309;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;9004;True;115;0;56.4743330426594;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);19;81071;True;296;0;902.425831978012;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;9587;True;115;0;191.05815089408;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;21940;True;113;0;131.199377434176;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;77251;True;267;0;134.035775051616;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;155761;True;105;0;36.0878330829679;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;45151;True;260;0;665.752039464645;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;14854;True;120;0;88.0905239182001;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);32;4770;True;55;0;40327.6173480674;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;1313;True;55;0;147625.049996605;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);32;3080;True;85;0;120957.826423805;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);572;17854;True;112;0;319367.418751941;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);59;1939;True;89;0;1550076.66852219;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);87;2893;True;97;0;1536500.25780488;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);46;1335;True;76;0;1788282.22091624;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3104;False;-1;0;3958747.49151399;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;1546;True;39;0;107246.827102737;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;2446;True;57;0;81145.595326398;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;1058;True;41;0;189672.127170295;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;954;True;43;0;201672.504337088;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;938;True;37;0;158247.160216432;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;1454;True;50;0;138173.646791409;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;2295;True;56;0;107155.628472419;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;1434;True;60;0;358293.863379716;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;983;True;56;0;444761.537104952;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;1665;True;56;0;144932.751446228;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);11;1256;True;54;0;344751.572422048;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);18;2226;True;72;0;328915.911525321;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);57;3123;True;77;0;831782.680956563;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);24;1794;True;67;0;567014.846414958;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);12;1943;True;65;0;198464.770353026;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);30;2079;True;72;0;645277.480537974;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);44;2512;True;68;0;844586.527005547;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);96;3746;True;106;0;1228277.6167054;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);34;1576;True;75;0;966533.64739479;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);23;1314;True;66;0;799427.160261464;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);68;2525;True;79;0;1326520.03573343;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;22383;True;177;0;238.342681410258;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;26737;True;193;0;257.303597478732;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;28793;True;209;0;283.165334985444;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);12;39537;True;233;0;303.246009123261;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;44644;True;245;0;313.975167430928;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);20;54861;True;245;0;342.218111290382;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);27;69717;True;279;0;364.857363139599;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;11519;True;115;0;140.881835687045;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;16737;True;106;0;94.5462099100422;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;8642;True;96;0;95.6042486774943;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;12846;True;108;0;138.937047380826;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;9587;True;99;0;128.574762435673;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1459;True;48;0;36.0890221889337;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2513;True;59;0;48.2416567756982;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;987;True;36;0;30.5318977269031;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1455;True;54;0;44.1716323703688;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1068;True;42;0;35.5333849499934;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;788;True;36;0;31.2357202036792;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);829;83663;True;76;0;123.577658526391;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);27;27303;True;63;0;216.64445340448;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;129572;False;-1;788.367404942098;1173.72203978851;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3554;False;-1;2179.00781549265;2743.2929588366;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;821;False;-1;3999.23165399693;4768.02593028813;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4485;False;-1;8362.00720066266;9912.66352848309;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7603;False;-1;1204.83262298991;1545.54606755604;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;10193;True;47;0;32.1788930744786;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1100;True;43;0;40.9807255998093;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1349;True;48;0;42.9837670891178;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6261;True;88;0;80.7949301970903;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5374;True;93;0;80.3670272970491;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5334;True;91;0;89.3008608102008;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5310;True;91;0;82.6718870527385;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5249;True;93;0;85.397825885022;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5470;True;96;0;88.2399570214288;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5252;True;93;0;86.2011918583013;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6180;True;93;0;89.3023295207829;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5884;True;100;0;88.3855503651;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5433;True;94;0;93.0360877623054;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6200;True;101;0;86.8967678097032;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7561;True;109;0;92.5094677509577;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6905;True;102;0;106.699864516723;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7327;True;105;0;94.5685314156266;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7449;True;97;0;93.1619070770071;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6795;True;106;0;95.9760253577486;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;8060;True;108;0;95.8521738734702;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7199;True;108;0;101.634258405553;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7496;True;110;0;103.006463430574;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8458;True;110;0;101.53269675799;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8942;True;111;0;105.179947868263;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8729;True;114;0;105.689897694354;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7240;True;109;0;100.160963297023;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9219;True;117;0;108.520733355782;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8714;True;110;0;107.430520517262;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;9153;True;114;0;105.518641529503;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9539;True;117;0;113.548497960254;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;9015;True;118;0;115.286185314346;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;8863;True;115;0;103.754819016078;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9416;True;124;0;105.369321644316;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;8963;True;114;0;102.307325865819;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;8720;True;117;0;115.720056039553;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;721;True;33;0;39.5177850557572;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;911;True;30;0;31.0793527595323;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;677;True;34;0;30.6096896690763;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;715;True;34;0;27.3784803579496;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;620;True;30;0;33.7778107555115;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;784;True;34;0;31.6431710724807;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1082;True;38;0;37.6331374348516;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;700;True;34;0;37.2947303817553;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;763;True;36;0;36.2551659295429;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1115;True;38;0;38.0059477710533;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;914;True;38;0;29.7269787321726;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;926;True;34;0;44.8069902851553;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1149;True;40;0;40.3014135584578;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1149;True;36;0;37.1824776039475;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1508;True;36;0;34.5623505147916;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1233;True;40;0;33.5002438585982;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1243;True;38;0;42.3695500158925;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1748;True;50;0;42.52034532684;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1395;True;44;0;44.9343540305702;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;992;True;38;0;31.7373840221224;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;6269;True;62;0;37.3997847099363;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);231;54414;True;73;0;48.6126456987038;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;10497;True;60;0;38.5801736218507;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;10227;True;58;0;34.305011274998;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);89;1633;True;101;0;11573482.0978485;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);186;2378;True;111;0;87308287.4521524;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);595;16279;True;101;0;1122256.70735738;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;18232;False;-1;0;2050589.96483215;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;37279;False;-1;0;4.82436071298658;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;17161;False;-1;0;1443193.3004381;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;12636;False;-1;0;14.9375498534359;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;18375;False;-1;0;3060849.75885559;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7277;False;-1;0;4307063.08982813;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);739;7528;True;109;0;85296894.8972858;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;5188;False;-1;0;83551906.8210905;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6525;False;-1;0;72697105.3402311;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3800;False;-1;0;62690851.6768492;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;5299;False;-1;0;75705628.6613065;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6026;False;-1;0;25387805.4918087;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;720778;False;-1;140.964779150563;198.9925086383;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);229;219437;True;58;0;88.7053422809333;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;380180;False;-1;414.484140436018;525.631216339361;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;314656;False;-1;288.003492772581;410.776952301226;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;490391;False;-1;249.600560224056;371.673505400771;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;235371;False;-1;288.193239748568;408.03910962225;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;399134;False;-1;206.400624250621;282.177274119623;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);634;220399;True;109;0;317.595394171373;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;180464;False;-1;605.209896851522;860.949815736428;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;259357;False;-1;369.601758517698;484.114910937126;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;127292;False;-1;553.654781682815;771.997940636789;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;124276;False;-1;854.501062265085;1120.21074596984;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;144730;False;-1;785.828073176475;1073.5693606406;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;89951;False;-1;615.421894026278;997.707929274029;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;87188;False;-1;760.37767315301;1058.03869485373;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;74929;False;-1;1109.0813848616;1674.9204624801;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;93953;False;-1;1534.7247336717;1995.35287645245;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;66405;False;-1;1073.96342975477;1850.0007491647;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);143;373927;True;64;0;71.5579517866358;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;23589;True;50;0;58.609032902511;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);119;424835;True;54;0;66.787860854254;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);78;158912;True;32;0;38.4754205717359;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;33586;True;60;0;96.9247119004199;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);143;898664;True;36;0;32.8250447220449;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);192;764933;True;56;0;60.279804690373;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2198;True;29;0;27.2472689228046;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;65361;True;26;0;35.8096509051119;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;32845;True;183;0;817.485545135063;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;39082;True;154;0;90.4394749820359;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;8926;True;113;0;171.346437457164;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;63698;True;336;0;130.737138243726;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;234844;True;71;0;58.0706885763197;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;18053;True;115;0;71.3370057061866;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;147479;True;100;0;53.1040040967736;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);46;473199;True;95;0;32.2408050356875;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);48;344608;True;134;0;43.2765013617369;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;35750;True;171;0;1226.56415871831;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;9727;True;72;0;84.8166014714364;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);29;217997;True;196;0;40.6571166248641;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;164786;True;100;0;46.0243974110161;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);41;331160;True;97;0;59.1993953100202;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;33628;True;79;0;104.358469672955;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);82;703626;True;118;0;52.248201139554;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;11209;True;120;0;59.2194017534823;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;18077;True;210;0;207.014007809749;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;14664;True;136;0;165.171013922546;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;16124;True;94;0;163.803685335301;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);22;127779;True;248;0;159.233385050091;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);38;295943;True;130;0;34.9822402597338;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);18;48623;True;274;0;538.096328879204;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;21613;True;121;0;88.6309158858297;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);59;7381;True;74;0;44494.709282803;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);129;10258;True;118;0;168247.429144403;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);33;3639;True;72;0;119697.640054838;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);65;4684;True;85;0;237769.117162776;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);68;2459;True;98;0;1362714.56091908;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);243;4992;True;103;0;2596029.86713604;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);79;1908;True;92;0;2150528.64934335;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4471;False;-1;0;5485008.35003965;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;1492;True;43;0;63632.2597084372;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;1085;True;39;0;87429.4515289335;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;1109;True;48;0;190258.642753246;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;1500;True;52;0;274042.022127449;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;1408;True;50;0;116341.904307456;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;1168;True;46;0;163034.09158177;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;2064;True;63;0;152726.411902241;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;1538;True;56;0;486316.459073674;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;1630;True;67;0;391630.015113892;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;1558;True;56;0;297236.003907463;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;1407;True;62;0;431642.557844034;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;2318;True;76;0;445236.110225846;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);46;2627;True;82;0;826089.598375122;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;1328;True;69;0;455987.234915324;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;1873;True;60;0;253722.392025612;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);21;1373;True;62;0;668221.431812516;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);37;2200;True;84;0;762160.856702312;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);112;3697;True;113;0;1490531.42415573;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;1613;True;79;0;754815.726441763;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);35;1911;True;81;0;865191.573266996;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);80;2604;True;86;0;1583688.85407526;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;24889;True;203;0;236.104687889196;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;40709;True;213;0;265.574954108936;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;32885;True;195;0;263.571656586486;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);19;63756;True;243;0;297.131511749214;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);18;58004;True;253;0;308.840940053417;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);28;80256;True;255;0;349.489918847948;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);49;126461;True;301;0;383.397792073656;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;15960;True;127;0;135.343448205938;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;16573;True;108;0;89.623098425784;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;10008;True;91;0;106.998872311659;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;13087;True;123;0;118.488591736687;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;18790;True;112;0;107.566048835758;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2812;True;45;0;46.7810144906415;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3326;True;54;0;50.0464193897943;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1904;True;44;0;31.8986771503729;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3236;True;57;0;50.7384912517025;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;4189;True;51;0;44.9914683413528;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1384;True;35;0;36.6310057273372;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;57007;False;-1;108.810282172267;188.030871458774;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);39;40702;True;66;0;189.956239766164;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;130075;False;-1;992.474008463544;1300.53131327555;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3670;False;-1;2135.46918708918;2846.68951500141;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;855;False;-1;3788.96474644251;4706.23729588149;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4703;False;-1;7112.9246350315;9580.29990292246;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7701;False;-1;1061.48151291231;1449.2773915056;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;13346;True;43;0;31.213627329226;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1233;True;44;0;42.9584757470523;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2121;True;48;0;49.7470349582398;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;10027;True;88;0;92.7324160628033;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7807;True;96;0;78.5962183833466;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;6895;True;94;0;84.3951126434097;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;10750;True;99;0;80.3837273131806;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7295;True;98;0;86.4018103272768;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9449;True;94;0;84.4358563112463;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7614;True;97;0;81.0522467059654;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9288;True;96;0;91.8891016367404;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7948;True;107;0;90.6458620684201;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7529;True;104;0;100.143313756827;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9377;True;108;0;83.1294504244787;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9600;True;102;0;91.1350905738286;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9276;True;109;0;105.039821376543;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7243;True;102;0;93.0138548601778;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;11888;True;107;0;97.483660723748;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;12187;True;117;0;102.921969096628;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;10442;True;114;0;87.8249376830708;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;11932;True;117;0;95.050529951446;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;11078;True;108;0;95.4967606394037;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;12080;True;109;0;100.099466222035;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;12392;True;121;0;96.9810179344829;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;13401;True;114;0;102.570202364447;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;12737;True;120;0;102.751584586335;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;13631;True;123;0;109.975322080528;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;11118;True;113;0;103.795291702605;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;11536;True;117;0;110.861907325951;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;11613;True;119;0;107.456909283185;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;14669;True;120;0;98.753765946366;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;13823;True;125;0;102.72225424296;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;12816;True;125;0;100.200018764058;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;19373;True;128;0;120.345724574476;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;10251;True;118;0;104.208467077617;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1091;True;36;0;43.5882191896168;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;777;True;30;0;32.6022549810425;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;647;True;34;0;32.8714074725822;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;852;True;36;0;31.7823253362372;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;659;True;28;0;35.7021014010952;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;905;True;36;0;33.0560479534489;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1083;True;38;0;38.6561075893498;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;717;True;32;0;33.7378705087441;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;806;True;36;0;39.8128713864442;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1019;True;34;0;40.49355440263;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1046;True;40;0;33.0096412710609;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1077;True;40;0;41.4927388038617;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1034;True;42;0;37.4639148035137;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1079;True;40;0;41.2299607834054;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1074;True;38;0;36.0198891946111;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;982;True;36;0;38.345242033999;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2415;True;46;0;40.3471464063651;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1361;True;48;0;42.2035103347278;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;940;True;34;0;40.7018808720393;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1197;True;40;0;41.9938875819055;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;6737;True;64;0;39.959468684609;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);127;31954;True;73;0;42.4807373123789;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);25;9202;True;60;0;37.8856470898824;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;9841;True;58;0;34.182216284781;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);83;1595;True;101;0;5019709.73988877;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);108;1124;True;111;0;128151128.986944;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);633;16052;True;103;0;699496.778754921;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;23967;False;-1;0;13.8001649380187;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;27578;False;-1;0;10.4368149284846;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;17974;False;-1;0;211210.970791618;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;12866;False;-1;0;14.9103393575016;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;17187;False;-1;0;1304271.92647705;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7786;False;-1;0;8577168.59755335;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;8301;False;-1;0;86816851.4593529;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5627;False;-1;0;80573027.9102778;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7453;False;-1;0;52496910.6507311;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3748;False;-1;0;30448856.1727298;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4810;False;-1;0;63771615.9560719;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5508;False;-1;0;16030081.0186183;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;720257;False;-1;123.37291417428;201.558528664422;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);178;175876;True;62;0;91.5897555976388;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;406058;False;-1;217.006298843774;320.980953077909;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;326642;False;-1;257.608001194898;411.992138623304;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;7683;True;96;0;491.213055184996;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;291241;False;-1;151.200888528675;353.67450782834;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;402040;False;-1;180.60289786365;279.493588956018;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;344409;False;-1;218.401759998501;321.771035603421;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;171937;False;-1;539.302597137309;848.137561416919;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;245018;False;-1;274.431867296264;467.88048895973;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;134747;False;-1;360.033026229512;680.571118585682;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;128797;False;-1;662.204349210302;1026.29522763905;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;144521;False;-1;690.170571182561;1111.41992969188;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;87002;False;-1;502.623284842085;1071.88162442466;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;84105;False;-1;533.413253472007;1148.19635276089;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;69706;False;-1;852.732833438056;1377.66889282086;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;94643;False;-1;1354.43741787767;1986.32833722837;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;59288;False;-1;1225.06184883968;2213.95686521263;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);68;193411;True;66;0;74.6802752099717;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;49989;True;58;0;60.8855101329081;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;8851;True;52;0;69.9269868720601;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);42;101018;True;35;0;33.5564448756575;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);23;52532;True;63;0;87.7708191214108;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);93;656317;True;38;0;30.5327781809968;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);233;849547;True;58;0;68.3207210151808;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;16785;True;31;0;28.6195059900185;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;121766;True;41;0;39.6785502523856;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;44648;True;235;0;116.479814108617;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;8574;True;134;0;101.151124513011;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;38748;True;118;0;104.235573591355;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;43756;True;316;0;150.892199917926;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);39;311652;True;97;0;58.3574008356053;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;18113;True;110;0;113.53795528716;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;79710;True;95;0;48.7721326424058;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);48;438817;True;125;0;42.1625252690561;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);60;395665;True;108;0;44.4238195813571;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);23;64891;True;258;0;323.641508577699;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;19455;True;67;0;94.9182900782101;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);175;860815;True;187;0;69.9975224853047;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;172048;True;97;0;45.5680538346497;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);30;249777;True;90;0;55.9595435269379;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;26073;True;88;0;89.8254199143002;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);53;463864;True;186;0;42.3493972801767;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;26540;True;125;0;105.473985144087;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;70189;True;267;0;178.826905434584;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;32610;True;146;0;137.820157408528;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;13338;True;97;0;146.773735968071;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;74888;True;269;0;156.500456120645;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);86;555786;True;138;0;51.4744938058184;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);70;228691;True;369;0;135.561021803205;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;34544;True;113;0;106.697717561221;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);34;5675;True;49;0;39944.5337147783;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);73;8328;True;153;0;134319.123516073;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);51;4532;True;103;0;172825.289094624;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;32799;False;-1;0;335310.791947845;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);68;2673;True;94;0;1290544.59381348;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);88;2939;True;93;0;1735880.43990912;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);144;3708;True;119;0;2008102.99695587;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);525;4680;True;145;0;4052635.43337684;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;1466;True;48;0;64151.8815131425;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;1528;True;47;0;109018.748131421;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;1787;True;56;0;265885.36182608;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;1393;True;60;0;237899.941355599;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;1489;True;45;0;160805.257413408;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;1103;True;40;0;181595.693503022;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;1535;True;57;0;221364.916000664;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;1757;True;65;0;344008.201318247;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;1516;True;59;0;303076.907302496;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;1807;True;57;0;311002.166006174;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;1638;True;62;0;362896.591035978;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);29;2822;True;87;0;463034.608279902;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);34;1778;True;72;0;919793.974718914;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;1395;True;59;0;594034.335039606;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;1831;True;66;0;311661.017974422;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);43;2125;True;74;0;1095821.24665876;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);72;4825;True;112;0;740488.37669558;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);95;4053;True;108;0;1306687.83169199;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);42;1958;True;85;0;1109122.56892966;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);71;3051;True;84;0;1182843.2274636;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);90;2933;True;87;0;1691590.25312645;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;43991;True;189;0;241.506181422751;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;51875;True;193;0;266.077568484908;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;70952;True;223;0;266.203767633061;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;68036;True;237;0;262.580296580158;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);59;180944;True;281;0;330.184657100468;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);78;214799;True;275;0;346.505970881177;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);66;165227;True;273;0;375.528312385436;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;25529;True;115;0;107.012569919471;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);27;47684;True;114;0;90.5090092731503;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;31459;True;107;0;90.1338161240007;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;27016;True;125;0;104.395001597744;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;26502;True;134;0;140.246046680826;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;16146;True;49;0;44.8364391435337;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;20521;True;52;0;48.1532831900691;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2346;True;40;0;32.0095438841552;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;11218;True;56;0;50.7946423120627;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;5496;True;46;0;39.6664243182136;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;3542;True;36;0;38.4648201792872;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;59903;False;-1;95.6468098925645;201.622407815692;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);40;47626;True;66;0;255.284848688069;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;155291;False;-1;775.557464007734;1259.73332720994;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3600;False;-1;1865.02859115267;2733.68282067091;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);901;841;False;-1;3340.39408703875;4798.88606057866;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4633;False;-1;6371.65450083681;9543.59314496747;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7591;False;-1;983.431896210756;1495.92364279256;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;34341;True;43;0;32.7888215841721;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1311;True;42;0;42.4837507101903;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2142;True;54;0;47.3044752485265;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;10503;True;94;0;93.558285402582;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;13110;True;94;0;75.4648456986069;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11275;True;105;0;70.756556270946;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;15470;True;107;0;90.171284190653;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11020;True;100;0;79.9112159358689;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11770;True;101;0;95.2676884175461;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;8386;True;99;0;80.8260553095009;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;17176;True;111;0;89.9750100488754;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;10133;True;102;0;91.7916589853749;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;8344;True;110;0;89.4965861133514;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;13196;True;104;0;85.7749326288395;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;26252;True;108;0;95.2628188206323;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;16973;True;120;0;92.8049110550891;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;17061;True;119;0;83.9550535443781;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;16114;True;103;0;89.1121242634045;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;16400;True;119;0;87.3377278350442;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;15361;True;109;0;92.8658216344033;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;14177;True;111;0;99.9393880766539;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;11505;True;107;0;98.4632666018675;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;14857;True;116;0;97.2131132745491;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;13859;True;120;0;104.839053477913;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;14357;True;109;0;104.951911820879;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;21924;True;120;0;88.3310038850637;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;20327;True;122;0;103.112928377987;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;20107;True;126;0;93.8165745694698;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;19100;True;123;0;113.533590807476;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;20365;True;123;0;86.8238233494881;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;16747;True;120;0;100.980694893334;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;16985;True;127;0;95.3191881744363;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;16732;True;123;0;100.01763305704;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);24;26744;True;126;0;106.447602767118;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);21;24376;True;128;0;106.541700301964;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1040;True;34;0;44.454694517251;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;982;True;32;0;31.5250757451409;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;657;True;34;0;34.3151839966805;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;659;True;32;0;31.7942967265867;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;599;True;30;0;35.3863831861562;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1370;True;34;0;31.9168777435139;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1134;True;40;0;37.1922784619531;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1197;True;34;0;44.2580276462827;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1190;True;33;0;41.8048518682921;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1273;True;36;0;41.3444527241798;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1705;True;38;0;33.5684212447402;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;792;True;34;0;37.7219664133583;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1049;True;40;0;33.7147131765307;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1089;True;38;0;39.4760406815535;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1463;True;37;0;38.6593051905857;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1341;True;42;0;35.123866967801;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1581;True;40;0;42.223084722843;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1647;True;46;0;41.0510158460224;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1106;True;37;0;41.4612840528979;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;949;True;38;0;36.9376941464491;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;7558;True;64;0;40.4017973295919;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);235;53966;True;73;0;47.5866563042926;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;9868;True;60;0;38.1376500169749;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;9223;True;58;0;34.1932342726738;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);102;2242;True;103;0;42.2600245191628;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);155;1691;True;111;0;221710911.316684;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);720;17709;True;101;0;703577.459350649;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;24887;False;-1;0;13.194154725707;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;30010;False;-1;0;9.89169041764808;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;19098;False;-1;0;7417311.25012909;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;10684;False;-1;0;14.2616134877829;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;17917;False;-1;0;2508222.03185208;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4579;False;-1;0;10973903.5374296;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7675;False;-1;0;120299197.784994;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4902;False;-1;0;49728503.6825968;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7403;False;-1;0;42796347.3400417;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3349;False;-1;0;32077815.3543978;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4258;False;-1;0;50588143.4460805;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4833;False;-1;0;28381224.8402397;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;719285;False;-1;106.095962089531;205.796736421339;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);162;162448;True;48;0;93.8421771003893;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);280;130517;True;92;0;290.322412997383;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;335630;False;-1;241.228025013966;456.54562281947;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);209;119661;True;76;0;391.085011841331;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;272529;False;-1;129.600714460016;296.686266232335;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);107;42761;True;137;0;401.486510133861;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;334883;False;-1;176.412244950241;326.374392711343;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;176840;False;-1;483.929618264888;888.324770536959;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;237753;False;-1;289.200726136566;524.902314591787;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;146798;False;-1;347.775053671456;639.566411691956;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;130126;False;-1;508.508623997359;972.176791692079;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;142294;False;-1;597.385319223155;1108.14609160913;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;81766;False;-1;619.399894921016;1243.91406873369;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;80603;False;-1;621.489528728039;1361.58176494885;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;66288;False;-1;960.027566088004;1891.64650495465;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;95783;False;-1;1102.81072253287;1922.55408496809;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;58864;False;-1;1076.04813816941;2277.9426673852;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);59;169998;True;62;0;78.6919337670484;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);46;214799;True;50;0;63.3845039440093;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);19;71900;True;66;0;72.0854375495216;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;63475;True;35;0;32.482561575602;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;84462;True;87;0;95.502256909873;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;186608;True;41;0;40.8634351774855;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;149954;True;63;0;60.4074878585609;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;7640;True;29;0;33.8096926660194;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;38813;True;37;0;38.0994883182145;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);32;212382;True;208;0;72.1885749621671;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;34383;True;127;0;126.740716862381;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;21204;True;99;0;124.041392514855;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;39322;True;294;0;202.59224806551;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);42;335356;True;93;0;59.5838666066143;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;11494;True;93;0;97.7114192112411;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;181939;True;111;0;50.7199655550677;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);147;1208241;True;115;0;40.5907610567977;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);138;792854;True;129;0;47.0243111162564;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;47692;True;289;0;502.455513367987;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;24455;True;85;0;59.7973691564545;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);326;1110500;True;301;0;94.7345399986321;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;100449;True;90;0;49.370088504231;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);46;355671;True;91;0;57.9373538774595;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;73377;True;86;0;86.5366364154779;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);90;770222;True;136;0;39.7805855883662;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;8832;True;109;0;95.1542737751835;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;73382;True;254;0;112.832627494369;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;19896;True;122;0;125.185295498721;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;87746;True;101;0;134.59929452116;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;109471;True;348;0;173.573705584497;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);97;647171;True;133;0;49.1359950593458;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);323;1179484;True;296;0;93.6670299520835;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;14325;True;142;0;109.243099716874;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);61;8339;True;90;0;43942.1712806065;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;2313;True;93;0;143673.476686436;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);41;4689;True;68;0;124196.534404223;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);138;9537;True;132;0;306851.656056004;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);133;3895;True;97;0;1883086.3997692;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);154;3865;True;93;0;2306946.62079461;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);418;6932;True;165;0;2801663.04556146;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4571;False;-1;0;5525952.81525143;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;2185;True;61;0;64486.9065958804;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;1700;True;44;0;121307.943198701;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1234;True;56;0;236749.069998038;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1299;True;48;0;207812.549174702;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1628;True;51;0;148669.657871927;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;1166;True;46;0;131675.404946542;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;1742;True;56;0;210654.844819407;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;2308;True;71;0;440621.227948407;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;1701;True;64;0;349062.434052968;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;1764;True;61;0;279990.321321864;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;2001;True;67;0;315482.195935701;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);29;2253;True;63;0;631596.739073643;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;2659;True;100;0;922517.744952806;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;2078;True;74;0;486494.945008108;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);19;1958;True;65;0;404923.715330816;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;2348;True;74;0;563381.468597655;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;2819;True;92;0;916860.880209631;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);134;4649;True;117;0;1517623.26848007;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);46;2066;True;80;0;1109257.23589576;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;2248;True;77;0;809374.373928442;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);112;3954;True;99;0;1495721.59726017;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);43;177961;True;183;0;263.08906307572;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;120145;True;213;0;275.688824406682;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);49;174470;True;207;0;262.071093986987;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);85;270760;True;235;0;283.320443240574;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);82;236137;True;219;0;337.291750529726;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);104;275867;True;247;0;323.424862755434;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);102;250588;True;267;0;352.849505832147;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);43;78171;True;125;0;106.100750208524;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;65374;True;113;0;83.2968199531413;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;22415;True;84;0;81.0784297819029;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;66647;True;119;0;96.5997296434602;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;20512;True;109;0;106.192556511407;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;44854;True;51;0;42.6921405158776;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;21735;True;55;0;52.0314827336354;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;10114;True;41;0;36.4516216001668;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;19520;True;55;0;43.8573576186607;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;24512;True;49;0;48.7027437195605;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;8762;True;39;0;45.4412077473618;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;60304;False;-1;113.450357103651;219.387062634332;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);43;52858;True;66;0;127.545628063428;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;131796;False;-1;705.634132352487;1243.7434993092;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3704;False;-1;1608.95447067458;2841.33234893559;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);901;857;False;-1;2877.03038130208;4797.94008142243;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4565;False;-1;5596.14518217693;9763.50095488755;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7350;False;-1;842.622474794193;1456.28539020913;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;69172;True;39;0;31.3653925478565;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;2035;True;47;0;44.9506809787705;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;5462;True;52;0;46.5247236325853;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;20535;True;99;0;69.8661946158199;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;15620;True;93;0;89.41181567351;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;14077;True;97;0;87.7637411847002;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;9759;True;99;0;75.3781248968221;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;16332;True;101;0;79.0161366520655;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;17110;True;104;0;83.0453317009203;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;11800;True;100;0;81.7672641222284;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;11117;True;99;0;77.1339520501134;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;14279;True;110;0;82.9148616205499;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;12790;True;107;0;83.7160175205393;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;17446;True;104;0;82.7006234880632;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;29653;True;113;0;69.9220286089575;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16281;True;116;0;82.6988241000299;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;18015;True;111;0;97.7186557877388;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;22175;True;103;0;93.6959462614574;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;29541;True;116;0;91.3280482064041;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;13301;True;116;0;79.4263485198562;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;27362;True;121;0;86.7060239658607;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;22225;True;116;0;96.752710067756;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;25817;True;128;0;87.3665862864631;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;26723;True;122;0;100.326924499852;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;20199;True;118;0;103.89246889548;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;21558;True;114;0;94.8812311176596;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;21041;True;123;0;85.855237397613;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);40;44592;True;128;0;81.9948601504294;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);44;48261;True;133;0;95.9703845786421;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;30977;True;120;0;95.3846909633115;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;17706;True;119;0;115.220652454453;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;37117;True;119;0;84.5583109984857;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);41;41752;True;124;0;85.7757895393221;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);37;38474;True;130;0;94.6005190717305;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);39;40566;True;134;0;88.7441831496876;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;883;True;38;0;39.4434573170518;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;797;True;27;0;35.1858126633486;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;909;True;32;0;39.4904152999553;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;752;True;32;0;34.1393935643067;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1158;True;32;0;38.4341194236143;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1120;True;34;0;39.6690350052795;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1699;True;38;0;42.9047551357796;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;870;True;36;0;36.5750436084429;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1221;True;34;0;39.0245808321121;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1068;True;40;0;38.7235218785191;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1324;True;36;0;37.5666741797267;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1214;True;34;0;43.4483412842904;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1249;True;42;0;35.9495515221632;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1150;True;38;0;35.2527897315519;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1266;True;36;0;43.0878595697832;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1660;True;38;0;40.0166116543467;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1226;True;44;0;39.8919411433627;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1807;True;47;0;41.2949890479061;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1021;True;38;0;41.6660962679281;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1614;True;43;0;45.0127337180237;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);16;6264;True;62;-0.998485272749553;39.0744208197879;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);132;33896;True;71;-0.999637748114596;45.4840279888054;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;9062;True;60;-0.997854833490148;38.7633997510358;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);25;8859;True;58;-0.997508005237909;32.0503581128895;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);67;1203;True;101;-0.999528625048478;5830331.63873166;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);106;1140;True;109;-0.997816889545795;36674345.0809631;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);568;16897;True;101;-0.999974487349379;513273.768719494;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16310;False;-1;-0.999889176338859;266334.541574483;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;48284;False;-1;-0.999923313967848;1.43805050198023;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16795;False;-1;-0.998881432227269;257570.271115527;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;14097;False;-1;-0.999701511114697;12.8785690659742;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;20545;False;-1;-0.999957175925354;317362.516568497;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8459;False;-1;-0.998773520811821;1286552.04557186;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8676;False;-1;-0.999764205887804;38416551.2160105;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;5222;False;-1;-0.999869832768976;82927790.4603212;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7258;False;-1;-0.999460022896277;34412890.703745;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3727;False;-1;-0.999879639595691;9372565.15435699;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4432;False;-1;-0.999011250212328;66997861.4612552;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7148;False;-1;-0.999690489843344;13127931.9368576;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;581085;False;-1;233.035017491335;248.446423681692;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);114;142309;True;29;0.665394924425238;132.010978428524;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;357518;False;-1;519.000010034069;524.819032114487;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;267723;False;-1;359.000027351081;438.240767166418;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;389143;False;-1;535.000004538335;539.503864627336;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;247284;False;-1;317.000001173466;342.446364914897;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;380784;False;-1;279.000110197812;355.118216052041;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;335920;False;-1;313.000003236346;364.652970070704;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;173456;False;-1;725.000013157725;737.189103997284;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;201524;False;-1;481.000092893839;593.850273913859;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;135542;False;-1;651.000031533651;676.388605464276;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;112063;False;-1;1081.00031088293;1152.53129679629;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;146162;False;-1;1047.2028006875;1184.3628315718;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;79610;False;-1;1067.00240368769;1331.77346084903;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;80387;False;-1;851.000062380917;959.016453670445;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;73607;False;-1;925.00005721394;1089.00363061623;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;94165;False;-1;1995.00453394186;2236.76204466229;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;54585;False;-1;1705.00020250585;2082.28503960309;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;9917;True;48;-0.042542624772779;68.8942321024767;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;80534;True;36;-0.722188384142792;57.4136534587274;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;21105;True;48;0.308808250962202;65.7479919536992;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;122000;True;29;-0.6556996841243;48.9934591667669;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);33;82961;True;41;-0.471619420438828;125.466398834244;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);97;515696;True;30;-0.617156293996217;33.443178528228;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);156;515049;True;50;0.632144194856353;74.6142853175412;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1759;True;27;-0.00178375421174981;21.6465557230613;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;28301;True;26;0.774052891775059;41.5755702744099;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);86;247877;True;204;0.0215844349104839;1620.93970312327;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;25590;True;144;0.954997184665407;151.954814753067;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;9418;True;97;-0.708381835235461;140.887261489386;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;26170;True;207;-0.756398637665621;138.337388612024;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);40;317258;True;76;-0.307103696887895;59.6154509034267;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;7532;True;106;-0.358107432424141;54.8664763306414;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;114077;True;88;-0.259139964943351;52.9075424490386;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);58;556516;True;93;-0.510301087754919;34.818222550418;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);72;464468;True;123;0.214063721342973;43.27544622862;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;69298;True;204;-0.828673176387638;764.254935301733;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;15879;True;77;-0.538445281581229;82.5323137671935;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);41;239824;True;177;0.0153611931090063;62.2342805791426;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;108969;True;89;-0.244901409021067;54.9351484656262;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);40;318032;True;95;-0.773147293260855;59.4029776074911;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;12786;True;75;0.761080270521846;82.383368644421;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);47;461804;True;88;-0.437115244305281;39.0025737794953;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;8025;True;106;-0.525845983776192;53.404242948628;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);85;250055;True;200;-0.125178075919476;1594.76475434006;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;10227;True;113;-0.164550742676738;195.194246623926;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;11076;True;98;-0.493078187803309;152.5297576852;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;24123;True;207;-0.0271591623440195;137.399452283143;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);68;467334;True;123;-0.353145149235216;42.814969138146;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);27;70723;True;202;-0.8063676496066;751.419404543824;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;11836;True;105;0.7910183359827;76.9042878314135;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);15;2178;True;43;-0.998908733948557;38172.0903000862;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);14;2210;True;70;-0.852928453987897;118492.376662413;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);111;9574;True;78;-0.904279523484539;145180.810685461;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;3242;True;100;-0.978041442100909;202849.499858583;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;7101;True;94;-0.977407773014814;441864.812221513;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);115;5074;True;85;0.0785466195449915;1225325.69635896;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);165;3875;True;81;-0.997510655781958;2529106.35963631;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);259;3895;True;117;-0.982017339198858;2675278.532555;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;2197;True;42;0.879551459979057;96031.2458227505;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1370;True;41;-0.472056955784586;116123.91578853;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;1882;True;47;0.231510710544656;108338.639234164;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1240;True;42;0.189518294851071;148246.035066858;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;10429;True;47;0.383153421517067;55556.287275037;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;902;True;42;-0.574698874528845;173120.203915186;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;1783;True;51;-0.963585881499381;172447.055556567;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;5208;True;52;-0.750157257425672;91355.2893771278;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1284;True;51;-0.217015038811143;273537.152055362;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;1461;True;44;0.29360513169952;175600.823108242;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1188;True;48;-0.0626948257268848;298422.518481985;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;2339;True;63;-0.310787624358566;356440.674671161;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);46;2157;True;70;-0.98741571418355;1063621.26297266;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;11157;True;75;-0.989947328339306;93322.1775428729;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);24;1914;True;59;-0.348553110542033;584561.750126543;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);55;2514;True;59;-0.811113404022117;1128623.83055735;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;2310;True;80;0.461311646486312;822188.633840416;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);93;12013;True;97;-0.783946327764516;315616.686547061;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);72;6763;True;79;-0.812211567448551;426527.653579333;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);50;2239;True;67;-0.986449345008679;1169372.78459519;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);121;4180;True;89;-0.990505375894953;1454572.47009416;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;9411;True;117;0.220020611407245;244.051692669043;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;10615;True;125;0.519236667789163;256.806623909018;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;11655;True;133;-0.159875291008444;279.136081896134;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;13732;True;141;-0.1797039803023;291.045843810671;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;16633;True;149;0.909482193137278;319.393398051858;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;18392;True;157;0.208617443781633;327.338339885702;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;21615;True;165;-0.820907251825979;355.079765639297;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5141;True;86;-0.852532441659147;103.770648104206;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4874;True;79;0.160880336147212;88.6435986744728;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3553;True;65;-0.0965001048038249;73.6122885866492;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;4221;True;82;-0.500737052178354;104.810931105464;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;4020;True;74;0.00633168919306804;102.318067234784;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1066;True;42;-0.809057399541632;34.4568314842753;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1250;True;53;0.191987056840205;41.4025204473254;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;821;True;36;-0.0382154123104249;31.6648962192596;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1561;True;56;-0.547126333018358;40.553960740342;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;937;True;38;-0.0639340388886324;35.20589466978;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;797;True;35;0.455108944072905;31.289880409454;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);280;70215;True;54;-0.642021136191683;30.3837451414232;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;23283;True;41;-0.603877584265488;166.450697933899;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;18297;True;53;-0.720524779390788;760.762040727974;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3734;False;-1;2567.00061718095;2703.00129491684;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);901;859;False;-1;4686.56201366967;4762.87718431049;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4076;False;-1;8661.46554832089;9531.20235822165;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;6184;False;-1;1283.49824246415;1472.8669258676;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;9512;True;39;-0.733788573059155;22.1268058699685;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;987;True;41;0.229376962980897;38.6428345146175;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1327;True;46;-0.17527406903695;42.8688661803763;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4665;True;86;-0.9574258951272;79.1360919748631;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4888;True;81;0.381639929200355;75.6463423083036;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4520;True;91;-0.451472963882365;82.6840804595228;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4621;True;89;0.0110348877548403;80.0178380462517;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4716;True;87;0.727020388341984;78.5060680217643;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5234;True;89;0.725187470077159;84.0189525971953;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5033;True;92;0.112414341006621;79.9396777285565;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5221;True;92;0.248684871591947;81.9481595610351;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5195;True;93;0.618724440046923;83.9912197622453;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;4971;True;95;0.934103588542949;89.6972470059026;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5022;True;95;0.119753974079971;85.1725720859342;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5535;True;96;0.986577739001521;82.7657291746709;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5756;True;103;0.909176671835211;90.5518689987415;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5762;True;95;-0.920223525688156;83.9072548624985;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5342;True;91;-0.135906366229014;89.2368843918789;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6848;True;101;0.36587831907248;92.2980260097154;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6200;True;103;0.31908769966992;87.8231446173475;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5903;True;98;0.146022962008614;92.3931842868561;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5840;True;97;0.565803534149101;89.244327480708;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7036;True;109;0.0856574182797492;93.969644134636;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6607;True;108;0.59373203739232;95.6505717934582;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;6721;True;98;-0.466087831866968;91.3666785486518;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6323;True;102;-0.61428101529101;95.4897874177651;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7470;True;107;0.0441775745917938;96.9372777853947;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7511;True;104;0.724656497000091;93.6732984436577;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7068;True;108;-0.362893533596254;100.875472697841;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;6735;True;107;0.661791208973989;97.7927092688835;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;6838;True;111;0.465779719625497;99.3723907483642;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7270;True;106;0.71974319299671;99.6713508245005;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;7850;True;106;0.319393194894955;99.3709728240824;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7553;True;107;-0.522687161119043;102.354672368241;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;7433;True;109;-0.884058782776845;104.00731951463;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;871;True;32;0.202447639406867;39.1755044259828;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;552;True;30;0.364367257507689;27.0520962085568;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;789;True;36;0.900893631345077;36.1271856167496;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;756;True;36;0.956827420721216;28.3323916952114;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;587;True;30;-0.609997905609197;32.258492089955;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;751;True;34;-0.275815146637994;32.2626278163416;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;862;True;40;-0.665552554496356;32.6556782274688;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;771;True;36;-0.325627711287526;35.7437744474424;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;723;True;34;-0.881689803619725;34.2502245473043;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;819;True;34;-0.237945217284348;37.1398366197204;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;874;True;38;-0.45899374944111;30.0954381458333;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;849;True;36;-0.613000373175834;38.8502197678868;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1177;True;42;-0.768868967783111;41.9791064028922;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1021;True;38;0.250493534491627;33.6703284843018;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1250;True;38;0.937816689693284;34.4335246138473;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1311;True;42;-0.844601991514024;32.0564437998424;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1781;True;42;-0.659793008891769;35.1601488398423;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1480;True;43;0.446924180466181;42.9143186753079;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1352;True;40;0.757894371523473;40.464413052095;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1190;True;40;-0.38081749686078;29.1558110487739;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);16;6325;True;62;-1.99981676228336;38.9960703863417;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);134;35151;True;71;-1.9996188208459;46.1270102518379;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;9251;True;60;-1.99858917854661;39.0729027156903;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;8878;True;58;-1.99896520003628;31.6110931333173;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);69;1244;True;101;-1.99753521568958;5621746.20015501;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);106;1165;True;109;-1.99134262464537;27837802.2658735;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);563;17063;True;102;-1.99993498064575;508473.568018762;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;22329;False;-1;-1.99968510679886;8.99705869052502;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;47570;False;-1;-1.99978590197851;1.89259497316242;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;16970;False;-1;-1.99973550625133;255289.732480196;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;15193;False;-1;-1.99991591460999;12.3276933823829;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;20510;False;-1;-1.99999843351543;319883.761613808;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;9099;False;-1;-1.99901631846978;1196917.96580654;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;8672;False;-1;-1.9998963437974;38681887.7296919;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5100;False;-1;-1.99853733926943;88149620.0165231;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7063;False;-1;-1.99997221678494;32514196.0805997;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3690;False;-1;-1.99847518838871;9470734.18833413;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4365;False;-1;-1.9992026574906;66432974.1927636;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7206;False;-1;-1.99948494695103;13009562.6361541;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;671311;False;-1;174.011907266458;210.879069984823;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);127;146406;True;29;-0.535557166922631;134.365433962818;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;355429;False;-1;518.000147325918;526.134752266155;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;268488;False;-1;358.000012084842;435.06027534548;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;437873;False;-1;534.000029295683;538.97412106336;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;245938;False;-1;348.000014813617;392.707845604072;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;375105;False;-1;278.000247050077;344.0339347521;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;342173;False;-1;312.000004185364;338.193259081855;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;171544;False;-1;860.000007173046;872.743032302653;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;199020;False;-1;576.000741338358;678.052587333906;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;140695;False;-1;650.000059323385;681.271294069585;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;115543;False;-1;1092.01213268005;1138.86927849033;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;148857;False;-1;1048.00320881419;1184.16145250725;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;80105;False;-1;1274.00003922544;1364.02400106203;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;83570;False;-1;904.001845557244;1159.31589250641;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;73241;False;-1;1150.00089444593;1307.96185400684;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;95594;False;-1;1994.01462069527;2235.49021800476;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;54490;False;-1;1704.0042995587;2152.48201713047;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;9060;True;48;-1.97648558764555;69.078391500214;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);35;153315;True;46;-1.91067691888226;57.3872193434196;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);59;194930;True;58;-0.950668056938177;65.4218976176429;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;186361;True;27;-1.69380409628796;39.1437858502508;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);81;174628;True;64;-0.418538310759951;116.517764197641;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);75;405783;True;33;-0.357975750396948;33.5759321046672;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);167;608600;True;50;-1.35300620615157;65.8837185248522;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;5038;True;30;-1.6660164425457;20.734592578072;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;40351;True;34;-1.36482360184417;41.7549489640983;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;250436;True;195;0.0344984270792912;1590.23226524292;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;14121;True;115;0.495160174786653;165.188627911679;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;18257;True;109;-1.95997867545112;137.785500452108;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;26217;True;209;0.0379747618166613;138.477855186785;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);38;316679;True;76;0.0470707845161999;59.5445815813018;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;5658;True;100;0.00104677490938765;60.7107791404772;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);10;100770;True;88;-1.61531789396671;55.1735053565825;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);59;576912;True;88;0.00034053809956669;37.9183280801085;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);101;635354;True;129;-0.756426605748211;44.6306603126094;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);33;84338;True;210;0.373729020531163;641.961128898761;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;12791;True;75;0.143717112086582;80.1584941304588;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);61;361879;True;181;-1.20199932120834;60.2309191323727;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;139802;True;92;-1.52889000788745;49.8116580268299;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);38;302263;True;76;-1.35117883763797;59.0454489853735;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;11592;True;77;-1.05686664723645;77.0540002905051;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);38;377028;True;88;-0.378178526823492;38.7008013132425;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;5139;True;101;0.195648998113186;62.8877860174834;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;246332;True;195;-0.147755823166927;1602.94933921341;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;17106;True;128;-0.468259294735389;154.235310998708;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;14043;True;98;0.30705497055643;126.503384275049;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;23035;True;201;0.409267557975495;142.772541935121;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);12;103325;True;112;0.0389204118582049;34.3252144435052;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);28;76596;True;201;-1.25259177351957;689.986912255779;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;7536;True;95;-0.0971626555999567;86.0949603416371;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);14;2160;True;43;-1.99297254345984;38413.8722565881;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;2214;True;70;-1.75068214896632;118561.05997164;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);95;7348;True;66;-1.95228766275211;163382.954539037;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);39;3039;True;93;-1.97040991297476;213295.477155642;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);77;7109;True;95;-1.98060325532248;441554.132561776;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);120;5074;True;85;-0.303348180979187;1225325.73243379;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);176;3910;True;83;-1.95897611042437;2502828.35111712;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);257;3901;True;118;-1.95448516307142;2655572.13059542;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;2166;True;41;-1.93833103773106;101396.832544298;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;1370;True;41;0.337502741412028;116123.939919468;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;1882;True;47;0.423779076162623;108338.585204788;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;1240;True;42;-1.13733867329421;148246.296138335;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);28;10267;True;47;1.37195615068635;55969.9978183129;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;895;True;42;1.15145736334448;174402.982460171;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;1649;True;52;-1.596266284397;170691.021841403;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;5209;True;52;-1.57681558820271;91516.9646320455;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);10;1540;True;55;0.134595265674682;227514.445844731;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;1461;True;44;-0.826517508750091;175600.737153868;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1188;True;48;0.961487680190004;298422.553091592;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);23;2435;True;70;-1.92460568245715;404342.714370902;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);48;2157;True;70;-1.9732724577064;1062861.71239662;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;11153;True;75;1.08800956378133;93546.2015996596;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);24;1914;True;59;-1.96658304518395;584561.682983942;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);56;2514;True;59;0.15093470185573;1128623.85884426;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);46;2762;True;77;-0.992477919437214;798006.061903634;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);72;2773;True;88;-1.33364039814735;1349915.98335082;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);60;2431;True;72;-1.95604478193263;1193015.06946498;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);53;2275;True;67;-1.96152197940346;1158226.23740236;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);122;4180;True;88;-1.97953227347673;1454292.61306087;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;9207;True;117;0.212293177941951;227.501710115584;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;11541;True;125;0.217576006528724;259.078496332702;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;11588;True;139;0.13985761820332;264.919483100433;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;13836;True;141;-0.394407347959656;296.76747522385;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;16239;True;149;-1.40578475753115;319.512932576962;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;16739;True;157;1.1887400006823;315.553263326212;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;21360;True;169;0.777967653599553;347.526611054343;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4934;True;90;-0.384505254395541;93.2513547467782;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;3844;True;80;-1.47660503698355;92.5328656806985;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;3667;True;72;-0.989069701632983;75.6046162059447;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5267;True;96;-1.28035436909662;100.954937488429;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4192;True;77;-0.181286933916289;102.481706892762;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1292;True;46;-1.00562204933056;30.6809225338264;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1155;True;51;-1.56214098984475;40.5175597988967;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1010;True;44;-1.56949347796361;28.643002481212;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1232;True;50;-1.3267855883235;43.3240901227244;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1083;True;44;-1.87249268957995;33.6277054614006;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;814;True;33;-0.731367609804202;25.929989774644;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);148;16680;True;53;-1.12223888333991;115.258491577834;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;7953;True;43;-0.596214372011001;167.146144596248;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);87;22500;True;62;-1.16538520304737;701.198298208441;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3710;False;-1;2566.23955876019;2703.61682092509;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);901;869;False;-1;4685.02939882364;4763.12666794438;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4705;False;-1;8639.21263108086;9444.30540842226;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7759;False;-1;1258.21527368027;1443.92298513475;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;12272;True;45;-0.58316825264281;17.2516056961399;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;955;True;42;-1.59914811681916;39.5697383317988;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1734;True;54;-1.93447998535562;43.0920243988438;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4581;True;89;-0.353190097190994;77.7502143024757;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4676;True;89;1.91899156194133;76.4497724553395;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4542;True;92;-1.40577425407515;84.7016639314551;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5043;True;94;0.326664152707282;80.4533713398719;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4679;True;92;-1.08855620170411;79.554044292079;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4851;True;93;1.88290149247409;80.1693890913316;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4968;True;96;-1.77873084311314;81.6688446524232;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5154;True;92;-0.110186011581768;82.2347092102341;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5343;True;98;-1.52076766617632;82.4927960147926;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4995;True;96;0.533282655539588;87.7415240219828;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5369;True;100;-0.923635476698929;88.7749104646729;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5665;True;97;-0.664841664333288;84.6731362290443;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5337;True;99;-0.211266738460989;92.3037097454812;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5834;True;101;0.0215826053272852;86.8900492875912;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5897;True;99;-1.42827241654893;85.8445567102285;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6268;True;106;0.248423585783887;92.9778403508589;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6298;True;102;0.122760144119505;86.8336046964991;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6046;True;104;-1.57931251059254;96.7130509706847;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6105;True;104;-0.058911330094054;88.8985458103415;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6336;True;109;-0.135944844286863;98.0672292650239;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6489;True;110;0.38855169917855;96.9447063772659;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6682;True;103;0.527532751917621;90.2391314756947;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6383;True;102;-0.090692791198703;95.4523973092403;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6923;True;113;-1.49115196032969;98.3004956067413;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7794;True;112;0.545550661415584;87.9074167840441;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6903;True;113;-1.6010919770231;100.25010287673;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6902;True;113;-0.267058988226139;99.5617326367543;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6880;True;116;-0.0215885518219268;98.6742433117226;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7550;True;114;-0.818005846262912;102.822337246879;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;8153;True;119;-0.0443839030546993;96.1079560506231;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7641;True;112;-0.214143489587187;97.1846508947328;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7505;True;112;0.355956449339146;103.610773559517;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;719;True;36;-0.378899582838127;36.9407156027205;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;535;True;30;1.80734581211924;28.5273804361927;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;760;True;34;-0.134036595995555;37.8004567456176;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;730;True;38;-1.32435851326415;28.0189716001077;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;592;True;30;0.306556955122648;32.3331870020948;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;865;True;32;0.131602372104117;33.1997368458223;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;834;True;36;-0.99671695334684;36.8639210311917;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;732;True;36;0.0265566622962043;35.8721095641073;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;734;True;34;1.97298440708452;35.0767504297188;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;909;True;34;1.93201469626837;37.6017271756756;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;888;True;38;0.420317447008713;34.993730271349;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;795;True;36;1.92346387166691;37.5468300836257;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;951;True;40;0.444565626068304;38.5822936779956;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1075;True;40;-1.93375933167234;31.0701153250286;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1111;True;40;0.0929629225716753;32.4794582253183;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1095;True;40;1.60755207930112;34.0703521189879;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1342;True;40;-0.728048709560208;42.9015451221593;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1307;True;45;1.13604601339253;40.6814967784024;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1489;True;42;0.749561719945428;43.4754943491093;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1138;True;40;0.334796859107351;32.5553463424612;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;6576;True;62;-2.99894104991059;39.1238920897108;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);143;35541;True;71;-2.99870323575973;45.5249009303424;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;9153;True;60;-2.99766021128635;39.4713600580383;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);28;9505;True;58;-2.99909060820895;34.225860357573;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);68;1256;True;101;-2.96432582659848;7430800.34646436;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);105;1136;True;109;-2.96472771371004;36849151.2040981;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);604;17078;True;101;-2.99990718439217;507662.5632671;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;16018;False;-1;-2.99881308339481;271279.840768973;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;45284;False;-1;-2.99950708541996;3.19264404432744;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;16788;False;-1;-2.99950934853382;257755.550576718;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;12911;False;-1;-2.99996189586816;14.0607443043175;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;19477;False;-1;-2.99998849444091;335335.298956628;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;9254;False;-1;-2.99717126972842;1179301.8952882;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;8746;False;-1;-2.9991212747987;38551759.3070439;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;5196;False;-1;-2.99991937167939;91002471.71339;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;7123;False;-1;-2.99856885708802;29715560.5537946;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3484;False;-1;-2.99690051749204;10073238.9324707;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4408;False;-1;-2.9985966039815;69323020.5551861;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;6337;False;-1;-2.99708899296685;16221762.6548249;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;624577;False;-1;173.022042248408;210.201444298934;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);94;106113;True;30;1.0754328100362;137.373523116329;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;360770;False;-1;517.000014676712;524.76134502266;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;316418;False;-1;355.00002197735;374.424190475306;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;392766;False;-1;533.000000949949;540.507236789605;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;249213;False;-1;393.003499279732;484.833352713389;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;368534;False;-1;277.000795456581;359.229031049616;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;320621;False;-1;277.000149611384;322.862104551678;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;178296;False;-1;859.000033290125;872.194539317819;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;195459;False;-1;565.10355571476;663.411362413287;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;138468;False;-1;649.000024357811;685.819947508414;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;107397;False;-1;1073.00995420851;1150.95742789148;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;144474;False;-1;1047.00966290944;1184.35630981695;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;80825;False;-1;1047.00039663725;1145.40744795691;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;78348;False;-1;651.000017168932;824.348033060196;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;68884;False;-1;1143.00002571289;1307.92150712395;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;90483;False;-1;1993.00107625593;2244.04262609678;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;53037;False;-1;2079.00004067458;2240.51468325941;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);16;39740;True;50;1.83910664116922;68.7731658738006;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;53671;True;46;0.536214650392632;57.3836589922778;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);104;332486;True;58;-1.5752405135777;64.9484169081604;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);116;207414;True;33;-0.813901879738039;43.1519298490443;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);47;104978;True;52;-0.450410262425621;113.65347893333;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);79;407743;True;32;1.20891776597543;32.5617855956896;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);204;775244;True;57;-0.716337837146753;71.938151596863;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;3334;True;28;-2.43519551280662;18.4144273429877;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;86221;True;34;-1.61814129288222;40.2676254786068;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);86;244830;True;202;-0.931665274282762;1601.14528527487;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;19601;True;137;-1.92145648827844;169.13835790365;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;24855;True;99;-0.831279335464947;144.563293201836;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);31;153989;True;202;-0.40489917220776;180.971320808033;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);37;299880;True;104;-1.75587777735473;58.8802100660886;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5676;True;102;-2.64244304766992;62.992525573185;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;86567;True;93;-2.12732853047891;62.1138900336259;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);64;586180;True;88;-0.997334658167015;39.9928061076377;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);121;714348;True;136;-0.968536640502762;46.9255652198369;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;31026;True;189;-1.27831577336337;1594.82031051055;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;17831;True;75;-1.48236073669156;82.2869773075399;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);11;70586;True;178;-1.13407152338609;52.4544003063453;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;92037;True;93;-0.917271593547087;61.0965824554525;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);36;288948;True;102;-1.84517991209644;59.1369867648439;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;32362;True;77;-0.186193071858116;84.1301259116297;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);59;548860;True;88;-0.996094644999176;40.2995588217559;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5962;True;103;-0.549040829552822;66.01884893068;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);87;253827;True;195;-1.74356487614269;1546.13090857826;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;10478;True;115;-0.902626419394569;193.311647558996;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;33629;True;96;-2.44752692684882;139.640074943431;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);36;165967;True;248;-2.06384364378818;136.43610697047;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;106487;True;112;-0.988000746810809;34.5293096107153;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;31813;True;187;-0.894310991230566;1570.91085621583;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;12026;True;111;-2.25814411940898;91.5579584585484;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2157;True;42;-2.98495323769048;38314.5865719829;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2210;True;72;0.308950373581122;118352.978078456;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);118;9594;True;77;-2.73900542489207;145396.121819668;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);54;3964;True;101;-2.9293246725245;202521.560778849;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);79;7106;True;96;-2.87938855396555;441195.294931393;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);124;5079;True;85;-2.51493725437435;1223977.28831045;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);177;3857;True;81;-2.92846210204459;2533985.576824;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);283;3139;True;110;-2.84284031849487;3410718.52060881;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;2198;True;43;-0.230103406696629;95865.0477847551;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1370;True;41;-2.99307769629782;116123.933240506;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;1028;True;42;-2.98027072100913;183716.67197939;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1245;True;42;-0.562721608003006;147565.120492396;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;10220;True;47;-2.11860063631022;56066.5743171063;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;895;True;42;-0.205680127817057;174402.399790517;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;1783;True;51;-1.85778586978921;172447.099202729;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);21;5235;True;53;-1.80631210785653;91018.0442357762;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1540;True;55;0.478705688136959;227514.443723897;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;1461;True;44;0.360844010189569;175600.795290185;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1190;True;49;0.930898417686531;297967.118542736;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);20;2286;True;63;-0.932731055623261;350555.691206903;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);51;2157;True;71;-2.62325864826481;1065007.25793223;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);44;11240;True;75;-1.11506198165708;93040.0495977299;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);26;1919;True;59;-0.690040601273086;582837.371211357;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);58;2506;True;61;-0.825324018404504;1129495.231915;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);47;2535;True;73;-0.343756063535696;853407.839836692;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);90;6963;True;93;-2.37766072404462;526977.534351862;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);62;2439;True;76;-2.78603920051178;1184807.71968;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);54;2243;True;68;-2.60454054530921;1171288.82847664;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);130;4179;True;88;-2.93748805669019;1455500.2162439;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;9914;True;121;-2.73515192313825;239.786684726169;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;12520;True;145;-0.763828942442233;246.443724267055;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;13704;True;143;-0.281178447083188;270.230211628328;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;19967;True;149;-0.93997785073704;272.026887339663;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;22260;True;163;-0.827543331229847;313.798250845552;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;19922;True;171;1.10270422888114;324.984478224957;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;21779;True;177;-2.95452206486581;352.073131433515;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5446;True;105;-2.73958416457269;103.504133377999;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;7113;True;89;-1.10874145389942;57.9859011281704;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5257;True;71;-1.33670105148885;56.4893011850685;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;6423;True;92;-2.52438530769403;74.6943636196902;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5575;True;93;-2.72126245299413;94.6902344853343;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1581;True;45;-2.07370540829082;31.1202171601901;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1906;True;64;-1.04890734425229;33.3883214480376;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1093;True;42;-2.11761027812847;30.967762768509;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1551;True;59;-0.892365416461772;37.0897004479447;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1155;True;48;-2.60650782268797;35.1929416691671;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;978;True;38;-1.71339153624763;29.5386851388627;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);203;24223;True;72;-2.59136418513552;91.8793973021767;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7192;True;40;-1.95816861230795;148.656798718028;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);101;26352;True;65;-2.38879797672331;702.642696557978;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3616;False;-1;2568.37773338863;2707.23462002298;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;787;False;-1;4685.1953278725;4762.01692152106;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4224;False;-1;8659.72017160371;9515.12412930385;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;7100;False;-1;1281.4501045991;1455.31527613132;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;5423;True;44;-1.89338069450733;27.80409881753;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1028;True;42;-0.787848186580394;42.5616768345453;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1549;True;52;-0.598751366882935;43.4046285833692;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5158;True;95;-2.95436734331509;70.4082043287914;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4847;True;93;-1.41035163328534;77.7347061876344;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5906;True;97;1.00504967198011;67.9754031217214;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4877;True;94;-0.680379142835913;82.0094135745249;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4596;True;91;1.04068060034918;81.7619913979599;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5248;True;99;-2.89612197591743;81.0521442630143;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5535;True;95;0.376179486222649;81.9963093715706;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5179;True;97;0.44807323322076;85.0328480010566;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5268;True;98;1.06574096813134;85.3007454982765;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5342;True;104;-2.56847263759397;85.820126154532;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5582;True;98;-1.23761129576602;81.1830706338749;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5826;True;102;-1.74833069217779;84.8963945369739;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6078;True;105;-0.862432825315014;88.6241338192315;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6397;True;98;-1.11965868161975;85.3079441372155;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6037;True;102;-2.57803543358018;81.8279345192774;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6032;True;107;-1.04269520288459;96.0312009658954;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;7294;True;102;1.06411816741532;75.2190444720105;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6275;True;103;-1.47598696987889;94.3041827818186;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6363;True;108;-1.85423800854675;90.6120545437838;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7136;True;113;-0.796852255145485;89.7757314544851;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7247;True;112;-0.974552377115261;88.0282655221736;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7681;True;114;-2.80146010583335;92.4801186443838;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6994;True;112;-2.09088062638924;88.4589891155525;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7839;True;112;-1.04105405697648;91.8853055509917;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7914;True;112;-1.8298211166774;83.8854047156633;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7940;True;116;-0.841249258183525;90.833249561776;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7973;True;118;-0.652795009153334;97.2866412531759;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;8486;True;120;-0.903621287040236;87.611872239685;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8525;True;116;-1.64667394787384;97.0862773913856;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8387;True;118;-2.12269068934149;107.575053111634;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;8889;True;120;-2.19499377123778;87.693174660821;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8106;True;116;-0.939434461267402;99.9559647078464;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;711;True;34;0.858787851342367;36.9608300044689;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;645;True;32;-0.999278837814591;28.9469639981898;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;763;True;36;-0.0167515366416198;35.5230583504468;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;789;True;34;-1.43805974649175;26.8596696288185;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;546;True;28;-2.84621476933649;32.2432515177453;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;745;True;34;-0.85083780058233;33.3177482256272;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;861;True;38;1.04116111809442;34.1924871609711;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;836;True;36;-0.750147844548406;34.2551525843004;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;688;True;34;-0.696761430099961;32.9788307644909;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;847;True;34;1.00733431987806;37.1376046595958;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1148;True;40;-1.15388629499538;26.0397282428546;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;892;True;36;0.440916869529018;36.770022148172;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;999;True;40;-0.454048358581051;34.2567120167594;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;952;True;36;-0.879882531184649;35.5919355242515;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1682;True;36;1.44874789121037;35.9628421429434;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;892;True;38;-2.78069605854372;34.752528897059;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1608;True;38;1.32364171944728;45.754201214523;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1511;True;46;-0.846197632069791;37.3528157510855;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1594;True;44;0.639947382565563;42.4528065413702;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1104;True;40;-1.84315724430753;37.7904870898262;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);17;6433;True;62;-3.99968798831091;38.9190949053021;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);137;35416;True;71;-3.9978883713474;45.8684146602525;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;9111;True;60;-3.99833886325282;39.3345797945645;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;9014;True;58;-3.99879184365216;32.1401390069902;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);67;1226;True;101;-3.98980154841663;3824608.17261169;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);109;1216;True;109;-3.9998990297317;63729331.4915889;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);586;16998;True;101;-3.99974375963199;510164.900523028;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;18970;False;-1;-3.99997909367084;228345.563517707;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;42757;False;-1;-3.99967933446154;3.7566953419533;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;17364;False;-1;-3.99820296466267;249246.351580572;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;14777;False;-1;-3.99926415458287;13.1079842466604;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;20493;False;-1;-3.99627996980971;318933.600969945;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;9485;False;-1;-3.99699034914234;1147544.52395096;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);851;8748;True;111;-3.99936109781236;54450439.9648978;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5562;False;-1;-3.9975677207101;66732011.1605204;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5409;False;-1;-3.99757515266425;69667970.9599184;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3756;False;-1;-3.99710941687092;9309082.91478865;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4822;False;-1;-3.99788876250288;63394375.6840035;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);901;6634;False;-1;-3.99885474517888;15804859.8086981;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;659919;False;-1;172.033151555822;207.554662662815;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);204;137378;True;42;-2.90375911020849;93.7061204696645;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;375486;False;-1;516.00003656745;527.376994019375;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;330953;False;-1;354.00011318922;388.73896437946;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;396035;False;-1;532.000017184764;538.529136306376;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;238992;False;-1;346.003544569017;396.355161602619;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;368776;False;-1;276.001049369574;371.906218703205;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;322277;False;-1;310.00000128895;334.33594734465;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;167568;False;-1;722.000016078353;756.50487392808;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;203335;False;-1;478.00002039969;580.023487190008;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;137320;False;-1;648.00015122816;675.37280359871;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;101882;False;-1;1090.06448890644;1162.91460565378;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;146599;False;-1;1046.02771508695;1184.20629025447;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;77948;False;-1;1254.00102790818;1311.77779851528;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;81161;False;-1;596.000218369067;954.054530860225;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;71905;False;-1;1142.00161123648;1426.11950757052;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;95611;False;-1;1992.00066842139;2234.03757775836;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;53147;False;-1;1870.00735294819;2216.91222375891;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;13500;True;48;-0.162682666519043;68.7233129506545;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);31;133646;True;42;-1.05474876940937;57.7881977080036;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);14;50426;True;52;2.34081406534687;64.549964611897;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);86;129237;True;32;-1.53110195581387;48.3019574085976;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);84;166452;True;68;-3.36602487758083;115.710508210833;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);101;514144;True;36;-3.49072324088343;33.4103853615703;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);481;1732710;True;57;-1.06132739366094;57.1902124490474;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;9653;True;29;-1.39758807672075;18.2944723344264;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;34070;True;32;-1.9711425863072;39.9303087956415;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);85;248756;True;200;-1.95683717353122;1559.85061668819;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;13024;True;122;-2.00564486440534;164.282794857665;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;37724;True;110;-3.73072308661916;136.915347896923;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);34;167656;True;248;-1.83107094086291;129.186736148458;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);41;317972;True;99;-1.96580879761177;58.6459119776428;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;3972;True;104;-1.59297600369573;90.9235869365531;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;118206;True;88;-2.34591924694642;53.281218445605;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);43;401564;True;97;-1.99193722754341;37.6651099282288;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);65;435949;True;128;-1.99067986011071;37.6623639326201;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;33343;True;189;-1.85741233819044;1491.6586587627;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;23965;True;80;-1.23072713857085;84.9885149135793;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);24;152564;True;182;-3.67815159991298;45.737115942173;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;91644;True;88;-1.94610864666575;52.8953156430035;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);40;307015;True;97;-1.86990850412748;58.9174284171068;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;21971;True;75;-1.97424748538725;83.7919809168733;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);75;662524;True;94;-1.97564964367806;37.9051704579012;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;3531;True;107;-3.34563804759907;98.4118285156644;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);89;256197;True;195;-1.97314007951559;1569.26303194967;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;15301;True;128;-1.13963776041737;155.884551747965;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;15186;True;111;-1.99630365054882;125.199548084453;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;24738;True;207;-2.10507962019419;132.446204998679;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;102173;True;105;-1.81034989646187;35.2832520661808;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);27;70681;True;207;-1.57548560554883;748.938270729077;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;12098;True;105;-1.56128138562724;106.474747849949;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);16;2150;True;42;-3.9261713511898;37949.0491439919;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);14;2215;True;77;-3.78359870230015;118237.467978488;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);113;9586;True;77;-3.96730336172846;145054.909844851;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);41;3105;True;93;-3.93731143322648;209221.693522597;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);78;7111;True;98;-3.92368945103311;439461.946390613;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);121;5079;True;85;-1.7548522650054;1222183.79631327;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);176;3869;True;82;-3.97606397791582;2530572.75779271;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);273;3908;True;123;-3.58196427281106;2657784.46651688;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;2166;True;41;-1.24440486228299;101396.776926728;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1370;True;41;-1.13438438956364;116124.044665908;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;1877;True;45;-0.874176639539272;108346.310260106;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1240;True;42;-1.55863706747006;148246.048737152;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;10258;True;49;-1.31017676243101;55999.0967029142;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;894;True;42;-1.00420592306378;174040.269773722;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;1689;True;52;-1.08696961732906;164818.394032985;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;5235;True;53;-2.43232433424905;90998.5751456273;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;2038;True;63;-1.59288104604598;176974.077690391;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;1461;True;44;-2.34229849201734;175600.802807198;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;1190;True;49;-3.56581923345375;297012.61790118;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;2355;True;63;-1.78820747499736;353386.220331511;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);51;3457;True;86;-3.70090512172361;648903.506382551;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);42;10991;True;75;-1.19724779538682;94619.3574624997;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);25;1914;True;59;-0.0429146494916242;584561.588526826;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);56;2505;True;61;-2.84114854728857;1130331.37623131;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);48;3087;True;83;-1.79177289446433;732000.274538084;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);116;12276;True;106;-3.66649910419551;374557.056044593;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);66;2522;True;80;-3.90387018765503;1153528.10569406;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);53;2333;True;70;-3.63199366984516;1138626.0507369;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);122;4138;True;87;-3.99638738855551;1467161.93814224;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;9147;True;127;-1.03532140563956;235.282873832841;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;11945;True;133;-1.85888992615924;261.522196521261;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;14116;True;145;-1.88824321603786;285.592719411305;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;16469;True;157;-1.50105548254263;273.434589704435;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;26205;True;175;-1.49544381699313;313.996554134595;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;20903;True;171;-0.545107988894502;326.90921945716;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;25459;True;185;-1.84752107404523;320.558489351835;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;4705;True;94;-1.83922051258349;101.977781361114;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;10434;True;93;-2.31100997622638;51.9142367128675;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;5595;True;77;-2.44735874908388;63.5429625815008;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5583;True;88;-3.42517103228028;89.3075485261089;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5370;True;82;-3.58376114423562;98.4413013766378;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1598;True;50;-3.93200018998794;29.5203272517808;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;2258;True;65;-1.55735545584809;33.7671338518694;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1180;True;43;-3.15512089391943;25.3168064328592;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1680;True;62;-3.40864114808321;37.1237692160141;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1090;True;44;-2.11876805039065;35.2688406786482;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1471;True;48;-1.60574433096021;24.5588227347768;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);231;28297;True;61;-2.88782015391058;76.5934709428083;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;8252;True;45;-3.46527653907671;184.78598672624;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);111;32040;True;70;-3.05599854470044;562.413027675196;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3688;False;-1;2564.54456103246;2704.28735967766;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;865;False;-1;4684.85314086212;4763.13040867674;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4495;False;-1;8637.90321357637;9472.55396495708;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;7424;False;-1;1280.82939019093;1450.41366387258;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;10196;True;46;-3.46198419083934;17.2070405357119;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1199;True;46;-3.72279512869324;33.0633482361455;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1960;True;56;-1.58761033303459;37.7569420898008;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6264;True;94;-3.95383749900099;67.4426556067987;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;4699;True;95;-3.44739592049615;72.7002516860864;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5715;True;100;0.371504703709625;74.7110216506425;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6469;True;97;-2.3162137634662;68.4761446325449;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5932;True;104;-1.01650907705375;74.9827138405754;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6135;True;103;-1.69992617503736;69.5357063356912;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6207;True;96;-3.41312159570545;71.0272229252356;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5778;True;102;-2.56579342790218;81.287342277647;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5080;True;97;-2.87750936992351;88.5778388086738;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6656;True;106;-3.37769151822556;82.4975862116522;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6093;True;102;0.0610646792040508;81.5811285871037;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6747;True;106;-1.71557374937254;77.7570234276414;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6101;True;102;-1.47819256292572;92.8761370654017;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6960;True;99;-0.865064922191698;88.2642837818178;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6886;True;107;-0.975219646922881;82.2071274119186;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6465;True;105;-1.67062519382249;92.3929502233634;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7055;True;106;-3.01688172622439;76.6684464690515;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7128;True;109;-1.22234127541182;85.3191152024371;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7163;True;109;0.0785074644156301;85.0434827992089;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7167;True;114;-2.84567816129219;92.0225131371669;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7485;True;117;-2.98083586198317;91.9538179423003;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7988;True;115;-2.81004920173904;86.6627733992609;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8857;True;122;-1.83540065113241;87.7059011222735;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8740;True;118;-2.41933883280463;91.6654270369821;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;9419;True;120;-3.13044702221195;85.2857480944231;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8663;True;121;-2.73126386791992;87.1228598352015;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7949;True;119;-1.16372608727018;93.6612234451285;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7835;True;118;-1.95697189399832;96.9482752042064;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8898;True;118;-1.91455935962245;101.185525525353;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;8822;True;120;-2.4182721220042;93.2618571272857;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;9720;True;118;-1.41210892303479;87.9794711689469;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8595;True;119;-3.13965631608835;94.382476186121;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;938;True;34;-0.492781276112786;35.6128239528224;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;639;True;30;0.0741268117325973;28.9853241015318;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;779;True;36;-1.75025244790607;40.6615781675093;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;643;True;34;0.122576557156898;28.6082021351579;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;606;True;30;-1.97358295227102;31.4468086923058;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1050;True;34;-0.99848533654515;35.4746549155654;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;797;True;38;-0.458648978014779;34.365871745572;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;707;True;34;2.29050812138734;37.4791128578136;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;711;True;32;-0.794804918949867;28.5971446117131;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;841;True;36;-1.52561495337897;38.1618120137462;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1339;True;38;-0.329892981019753;28.7311415891694;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1008;True;38;0.407574217956315;42.4145857623637;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1115;True;40;0.17350913592312;35.4535648652697;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1322;True;38;-0.407803086753843;32.8861148028428;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;919;True;36;-2.26749671169906;28.3548187325295;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1198;True;42;-1.26533129032018;33.4854049631239;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1562;True;42;-1.53507621471541;42.1559585118824;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1387;True;48;-1.35411171864444;39.9295867180329;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1492;True;42;0.0183186009611553;42.3198981561567;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1463;True;42;-1.07618295637713;29.1528518541394;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);17;6614;True;62;-4.99570774379918;39.2445988631216;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);146;38416;True;71;-4.99351724050637;46.5117021606662;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;9691;True;60;-4.99726248439274;40.2634977309254;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;9363;True;58;-4.99744812026501;34.2126757834791;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);67;1252;True;101;-4.91440156005062;3728331.64972422;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);163;1918;True;109;-4.97879547065999;47025238.9436405;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);571;15627;True;101;-4.99962797388417;555601.440626353;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;17698;False;-1;-4.9986531352618;244294.595504499;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;47763;False;-1;-4.99971809796976;3.08828640559642;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;17074;False;-1;-4.99807842541397;253706.522192903;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;12889;False;-1;-4.99782254453647;14.3425298254999;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;20812;False;-1;-4.99984199181192;312634.620172984;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;9153;False;-1;-4.99938038177759;1190678.87271984;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);846;8676;True;109;-4.99647947959438;56262606.478195;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;5218;False;-1;-4.99111219774518;93293411.1169667;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7529;False;-1;-4.99568554106899;33240095.7411275;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3681;False;-1;-4.9925348767976;9499536.46217825;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4684;False;-1;-4.99893195927093;71852457.0980191;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;6472;False;-1;-4.99768529552859;16235516.2160562;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;654315;False;-1;171.001546130516;206.28477368628;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);80;95956;True;34;-1.27522337542624;127.534911220365;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;363061;False;-1;515.000009043142;526.372597675584;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;342269;False;-1;353.000051734969;371.787627197949;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;405583;False;-1;531.000010249205;538.621596579063;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;251364;False;-1;345.00055950135;397.720050055663;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;389189;False;-1;273.021635489548;351.892074466801;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;339113;False;-1;309.000032070093;341.668773464174;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;149776;False;-1;777.000290595926;845.821563955313;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;216065;False;-1;477.000272449106;559.321493551712;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;119456;False;-1;669.000256868079;839.970440360372;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;101036;False;-1;1065.1920515812;1153.53022855387;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;153110;False;-1;1045.02130743583;1183.8964144036;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;82996;False;-1;1081.00011449214;1271.37070537802;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;82293;False;-1;847.000974992291;1046.80735683274;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;72814;False;-1;1115.00161825679;1257.76889323735;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;97643;False;-1;1991.02688142007;2229.51942183562;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;56713;False;-1;1693.00669063069;2145.02594308026;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;51249;True;52;-2.38377696247016;68.678140745779;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);23;104161;True;68;-2.87980278668916;57.7179892069848;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);144;476036;True;72;-1.92144519040428;65.1455522824974;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);84;132249;True;31;-3.69439945029765;47.3391219169027;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);30;67871;True;53;-0.328356942780482;108.540714711438;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);214;1521071;True;39;-4.00614316063288;28.1112772075425;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);147;457529;True;56;-3.52649528464605;79.745413412095;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;25704;True;32;-2.50092530320442;19.1693779847418;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;56017;True;34;-3.65137153707974;37.1157289415164;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);86;262625;True;195;-2.60294392872739;1569.7822793964;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;22726;True;144;-2.54365420599638;153.559431272419;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;35459;True;111;-3.33990503490898;132.836592330933;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;143256;True;207;-2.15513440927264;175.011945953586;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;294176;True;104;-2.89532282571091;58.4795430562526;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;3298;True;100;-3.61079221992325;81.3865467085198;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;204577;True;88;-2.99018058646013;45.3367545847165;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);57;552331;True;102;-4.13839570672177;33.5642865640537;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);95;604432;True;138;-3.51798532461654;44.2600236797691;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;34108;True;191;-4.66678183975945;1466.44223558628;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;25399;True;80;-2.9675027793122;86.963665989193;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);39;238126;True;179;-3.49377443943814;60.1317391020523;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;143799;True;89;-3.88740818895745;48.5730885217877;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);37;308548;True;85;-2.57330829909691;58.1928893330242;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;18339;True;77;-2.81883168677745;78.4406973425905;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;369984;True;88;-3.11925657005946;34.7919901032462;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;3301;True;97;-2.20795834586395;103.597191179704;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);85;271144;True;197;-2.9130344343898;1460.06230868505;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;11383;True;117;-2.38914320868866;182.201338304328;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;15480;True;107;-3.66583459948461;121.219375720201;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);30;155874;True;206;-4.52035717643814;183.243645583264;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);15;130869;True;105;-2.98654127120345;33.9583947711276;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;33647;True;192;-2.80071777934242;1474.48114258312;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;10789;True;110;-3.4192654855639;68.2589504893491;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;2183;True;52;-4.98675542417297;38459.7260217307;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;2216;True;72;-2.85777365502798;118155.494156842;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);97;7348;True;66;-4.0397917009144;163361.038366996;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);52;3870;True;104;-4.97873222454392;205753.825521229;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);55;6696;True;98;-4.67007872633174;286555.078360671;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);120;5074;True;85;-1.66897706997999;1225325.61892528;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);173;3936;True;81;-4.99909134115982;2485004.08467334;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);263;3910;True;123;-4.92653241843289;2677441.99694541;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;2175;True;40;-2.59277611672542;100944.239311361;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1370;True;41;-3.19966216953456;116123.967161531;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1088;True;46;-1.58091699545314;170061.825706842;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1241;True;42;-1.95146991543075;147791.152282116;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);25;10105;True;47;-1.59688158547361;56457.8372176489;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;875;True;42;-2.52924242407514;179950.877374597;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;1670;True;52;-1.77048343362775;163588.267744389;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;5240;True;54;-1.47780908107656;91139.2103751516;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;2027;True;66;-4.8846077918469;178950.680344467;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;1461;True;44;-4.5506345851117;175600.833617154;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;1195;True;50;-3.00622315518848;296561.70102967;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);21;2514;True;67;0.71925571361522;352523.960240857;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);46;2490;True;77;-4.7780422539348;886157.951347082;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;11031;True;75;-4.03600146017782;94287.14422387;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);25;1854;True;59;-2.30513972849824;601692.513804902;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);56;2469;True;62;-2.289628101182;1144336.74150783;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);38;2188;True;77;-3.89053012658401;867638.962342621;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);112;12334;True;104;-4.97407536021158;372175.234176584;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);61;2476;True;74;-4.60946698189223;1167308.24046693;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);50;2298;True;68;-4.34783983479619;1139737.5628414;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);121;4191;True;89;-4.98935318085801;1446444.39390257;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;11620;True;139;-2.9023964348726;245.452692065247;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;14797;True;147;-2.88113678054937;263.624467042238;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;16336;True;157;-2.47528229722533;277.817025252013;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;20072;True;169;-2.98677673283349;241.792015823868;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;20927;True;175;-2.40838327138144;302.904368970028;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;26789;True;173;-1.44660588467801;339.124908648624;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;26058;True;195;-2.83995208974925;319.112891359565;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;8925;True;105;-2.9227940383939;67.0917921890665;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;5408;True;87;-2.62447553110517;82.1997510861225;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;4553;True;80;-4.63447617349889;73.6356092805087;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;7381;True;98;-4.62063591909624;77.2591520954049;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;4995;True;86;-4.03728457588576;99.9722163995698;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2142;True;50;-2.37648953095846;33.5114914697821;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1646;True;55;-4.07494772182542;44.0300453183419;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1485;True;43;-1.97784552489307;28.1448930722602;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2605;True;64;-3.80343305822622;38.9231265932819;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1483;True;45;-4.2688225159742;30.9553871377995;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1908;True;41;-4.56900323255407;23.6978206962758;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);208;35664;True;67;-4.30023911842156;64.1673499025992;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;9765;True;48;-4.01098612184217;148.656121486633;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);114;29708;True;75;-3.80051558781439;733.371502680386;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3644;False;-1;2566.01416006732;2706.20925121196;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);901;855;False;-1;4686.21512818766;4762.91639061556;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4735;False;-1;8636.90960995011;9440.82130404941;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7591;False;-1;1266.99284362141;1447.50475106189;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;15186;True;50;-3.07719373054672;21.7743941425127;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1294;True;45;-0.970733946175656;30.7216901536056;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2395;True;55;-3.82083015927152;32.339519143458;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5654;True;90;-4.56219378372756;72.8334949786712;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6518;True;88;-4.09881845540312;60.5832077756247;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6170;True;101;-1.60463957702957;76.2942870270755;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;7305;True;98;-3.28766798055157;57.9853573054993;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6439;True;100;-1.71311053760029;69.5752236842623;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6335;True;106;-3.56807064198333;79.868808510652;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6412;True;96;-0.925804915803393;64.3754766988869;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6755;True;106;-2.96889249420208;74.0921328707525;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6366;True;102;-1.81294993162758;79.0372969187457;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6371;True;101;-0.914600788575877;82.6408221321946;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;5986;True;104;-3.81507939138221;82.9081374844948;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6381;True;103;-3.85580985287941;83.6811583795671;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7025;True;105;-3.41289139278833;85.7702112503472;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;9127;True;106;-0.994560047050268;63.7868275657926;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7894;True;102;-3.19131352388827;81.3029023144889;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7855;True;110;-4.81519738203622;81.872028919422;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7052;True;114;-4.24744821584199;83.0351791276266;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;8147;True;111;-2.76940856770119;74.9732711450413;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;10415;True;115;-2.85583668288581;62.7178948147605;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;9063;True;117;-4.42813959877386;80.7051247790272;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8344;True;113;-0.837327846250184;86.9747127183744;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8692;True;113;-3.7574722379248;86.718096402626;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;8247;True;114;-2.38725280267524;81.7038682883988;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;10195;True;119;-2.42289455487528;81.1871284187661;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;9168;True;118;-1.19038520482852;81.2472424934608;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7534;True;114;-0.456738056362019;98.479808154675;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;9238;True;125;-1.85753325319734;81.3415920591722;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;9523;True;117;-1.4020294008786;79.7909225506231;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;8770;True;118;-4.39097252646041;93.7219799208153;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;10673;True;129;-3.47585811674402;84.4963837964959;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;10166;True;131;-2.40234532086288;92.0150019164345;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;9925;True;121;-1.88632095553275;83.9022086747562;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;774;True;34;-1.22134370087708;35.1909637814043;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;548;True;28;-0.873888096713409;29.9793727307771;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;722;True;38;-0.918038952126186;31.7634404321039;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;699;True;36;-1.20345850764004;30.8751354089182;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;783;True;32;-1.84177136367269;32.8196225104188;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1074;True;34;-4.31732391441116;36.9341490127525;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;873;True;40;-0.876833115647004;35.2388490447959;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;744;True;34;1.63466263498862;38.3359780938333;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1170;True;38;-2.93593350701776;37.7265351383277;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1241;True;34;-0.850850128499256;42.129446067974;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;927;True;40;-0.103479258298631;33.560962391391;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;961;True;36;-1.21615936151527;34.6340646872586;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1153;True;40;-3.70539809982544;39.2469019794639;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1030;True;38;-1.13867923903217;34.8095584155874;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;834;True;36;-0.830236192713602;34.7637282604946;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;890;True;36;-0.726190799719743;37.9334620582748;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1583;True;44;-0.876236249635106;37.937606583004;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2386;True;48;-4.0630529444027;36.1041575741841;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1089;True;42;-0.840488065891195;40.0419168951976;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1001;True;38;1.00110620632819;32.048212069387;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);17;6509;True;62;-3.91788324683481;38.9691278163181;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);129;33120;True;73;-4.02035617964528;45.2471075170406;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);26;9058;True;60;-3.64780640192578;39.3046246332209;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);24;8506;True;58;-3.21654080353958;31.0958558685552;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);67;1203;True;101;-2.70360641175265;5830331.68317246;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);106;1158;True;109;-2.87809098341032;52574980.1399109;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);568;16993;True;101;-4.06678778966389;510437.425363442;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;17040;False;-1;-3.99790777798071;255012.855826719;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;48850;False;-1;-3.8922661905934;1.48740768899206;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;16870;False;-1;-3.88147506131819;256340.700248768;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;12828;False;-1;-3.6751180085518;14.1697606915864;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;20111;False;-1;-3.86043187277743;324279.393522855;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;9336;False;-1;-3.2389369289864;1166620.47866516;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;8608;False;-1;-3.785384697856;37643516.1212579;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;5148;False;-1;-3.53001415568841;85196715.6521534;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;5033;False;-1;-2.95161812649871;68635036.3752086;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3676;False;-1;-3.2130997709981;9517956.45687968;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4259;False;-1;-3.62324738656463;69137495.0213824;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;6271;False;-1;-3.49165940792904;17090591.6698999;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;597881;False;-1;231.620647671602;248.252071662132;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);84;103807;True;34;0.573964366246507;134.798890314317;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;365840;False;-1;515.326677675109;528.491015100209;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;313095;False;-1;353.365256862973;386.983384569269;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;376726;False;-1;531.107021429624;539.20340069531;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;214677;False;-1;313.706329642644;335.511613158253;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;316493;False;-1;276.84705466901;358.998938354562;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;295821;False;-1;309.839022879466;369.035655885944;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;147397;False;-1;875.883913746036;897.134720337445;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;178902;False;-1;529.828966537702;626.551573547316;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;114010;False;-1;668.318874300735;885.220756740191;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;98188;False;-1;1090.28005291222;1154.87553611006;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;126908;False;-1;1047.25843122666;1184.36411161127;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;64417;False;-1;1272.50794175777;1391.21345343956;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;68564;False;-1;835.962419240702;1166.67020179073;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;60030;False;-1;1116.25224426977;1254.33694293289;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;77498;False;-1;1993.23556046533;2269.50239814262;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;45845;False;-1;1840.16754402036;2078.20609164444;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;15429;True;50;-1.0421209574996;68.1154273995511;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;93937;True;68;-0.833156738644648;57.1262056179835;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);33;96655;True;54;-0.97716810852096;65.4438618686057;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);123;214208;True;32;-0.209958490306653;40.571803787239;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);46;98675;True;37;-1.24188390689059;123.419099862459;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);157;690858;True;32;-0.375674798673346;33.4482825656828;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);676;2044805;True;54;0.11894831603398;63.0528721114791;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;3357;True;29;0.91935956838082;21.1520947575416;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;41186;True;32;-1.54191315941428;41.9741451998325;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);109;277176;True;193;-0.824752914897707;1467.86908487264;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;18815;True;130;0.0819102484267495;168.70106509308;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;8732;True;97;-1.75976194048334;144.316589707614;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;24635;True;207;-0.243781482235691;136.680370683008;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);52;364232;True;76;-0.880711886811475;60.5470386974393;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;3423;True;97;-0.473014343055788;90.7788001797844;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);17;152822;True;89;-1.24168628346683;48.3322448169562;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);48;405399;True;88;-1.81230162164788;38.5374978881586;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);79;453191;True;123;-0.674504161285762;42.6825818240295;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);27;61797;True;208;-0.962496111763999;841.149307465079;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;13659;True;77;-1.43244177205369;80.5080046762127;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);66;346300;True;177;-0.722880083728829;59.8104918848161;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);13;119825;True;88;-1.21180814326772;52.4939188020713;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);46;328004;True;83;0.150998359310993;60.0316954055027;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;13720;True;75;0.750357823769836;81.2831844940979;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);57;494103;True;93;-1.09264989550031;34.2124939463034;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;5361;True;100;-0.141668849640643;68.7322582917601;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);95;249219;True;197;-0.485979496734461;1602.05856590164;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11084;True;115;-0.279190738266436;187.613341882649;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;10302;True;100;0.416227348607918;147.105978076876;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;27945;True;214;-0.324893769444198;142.590505855817;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);104;595285;True;129;-0.9354445822274;44.2567038447004;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);34;78465;True;206;-0.325698285902049;678.533139043009;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;11311;True;103;1.3883371793865;78.2731768434008;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);16;2182;True;43;-2.19353389073348;38341.8677911677;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);15;2210;True;72;-0.220856543053418;118595.90707384;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);108;7338;True;67;-1.85019985346654;163271.459803049;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;3142;True;98;-2.23722131412816;209105.974259603;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);103;12056;True;100;-2.89898747011516;286416.055232989;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);136;5074;True;85;-0.153958225984196;1225325.71466421;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);202;3865;True;81;-2.72496126898288;2531738.0684942;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);273;3514;True;117;-2.0692842782722;2752200.35233496;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;2197;True;42;0.278877037489515;96032.4717549228;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1370;True;41;0.564794871069202;116123.896904231;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;1883;True;46;1.42788257257898;108019.330548033;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;1512;True;44;1.12278071824283;123307.869712108;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);29;10265;True;47;-0.979201742979556;55965.6705525751;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;895;True;42;0.0201179305543699;174402.981508021;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;1740;True;51;0.000821125704278666;176045.091149366;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);22;5231;True;53;0.646476785426193;91193.8825156985;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);34;10600;True;54;0.000975649678146893;56836.9419680349;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;1461;True;44;-1.00153299070844;175600.783997807;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;1190;True;49;-0.413316461292499;297967.015388418;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);27;3089;True;66;0.357700667039062;307480.590028529;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);54;2743;True;77;-1.64885572996916;812058.86221781;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);48;11155;True;75;-0.75711863161911;93309.6424673086;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);28;1875;True;57;1.01162167388997;598738.926145003;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);63;2478;True;60;-1.12479897923494;1142564.45792509;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;2266;True;79;-0.316099583097251;838417.192540608;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);110;12016;True;97;-1.9518751685091;315486.286240164;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);88;6766;True;81;-1.65059177760266;426721.764135963;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);60;2276;True;67;-1.58292944953247;1159090.57280464;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);136;4184;True;89;-2.51529461456679;1452600.35422797;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11208;True;117;-0.36038987509921;244.445787088624;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;10242;True;125;-0.91526634844662;256.794062165268;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;14177;True;135;0.643237860016799;281.809872171243;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;18333;True;147;0.0537517667994881;297.027092843355;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;16896;True;153;-0.156057844675227;310.102987216105;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;19341;True;159;-1.81461289259576;328.047330034251;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;22243;True;167;0.141539565580348;342.729330882588;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;6742;True;99;0.0869612366995046;114.483093616622;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4936;True;80;-0.143507748494563;86.1679330111509;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;3629;True;71;-0.981675395907252;86.1891791791417;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;5638;True;87;-0.886449360976616;84.6296791793802;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4921;True;82;-0.979053842533963;94.2505898669069;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1094;True;42;-0.109931727476186;32.854634454203;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1767;True;61;-1.51223914334706;36.5428013628445;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;904;True;40;-0.944280804045353;30.0075478713672;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1390;True;58;-1.21232003576113;38.150098771906;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1011;True;43;-0.0685725959684542;35.179970505733;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;893;True;38;-0.957294173903137;30.0727673288751;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;106214;False;-1;5.86539380718698;30.4558771673509;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);18;17838;True;45;-1.0664795381596;156.95910314496;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);161;34784;True;66;-1.86384122926362;616.677409944866;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;2783;False;-1;2580.02920377523;2736.19775642255;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;627;False;-1;4690.11951627054;4759.30236657432;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3740;False;-1;8854.29308944964;9573.94323590119;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;6132;False;-1;1283.77234306609;1474.11340351598;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;5514;True;44;-1.41681420071388;27.4736405888301;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1074;True;42;0.657467342153908;43.8271839893027;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1764;True;49;-0.0489935751369734;36.4984135658174;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4762;True;89;-0.490829144925016;76.4669624643905;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4637;True;87;-0.577002484801604;75.7864354574389;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4952;True;93;-1.7372818580272;79.5262998157726;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4774;True;92;1.00542082823054;82.980160208751;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4678;True;91;-0.525003081168034;80.8184338532321;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4965;True;88;0.0304829261064974;83.7707335582139;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;4972;True;91;-0.203553558830963;81.2230795329942;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5360;True;98;-1.57338224803433;80.6256698765671;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5462;True;97;0.233134997619479;84.8492392758217;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5321;True;95;0.521670964898678;85.2304674757337;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5193;True;94;-1.05547119037979;87.3430233293568;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6089;True;99;0.0506650480252602;83.1336776321259;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;5648;True;102;0.73033994869582;92.1596434027647;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5500;True;100;-0.370683679882286;89.1662889896212;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6026;True;95;-1.07072844880115;86.4495327002743;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6863;True;108;-0.711041681824405;90.6469886591926;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6333;True;98;0.166724157597516;81.408032085368;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6439;True;107;0.942449255087217;90.2831751254186;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6014;True;97;0.786975640629202;88.1576866780896;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6765;True;109;-2.88332291601343;93.4760395690669;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6695;True;110;-1.60392892069712;92.4470125410658;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6962;True;100;0.60644904490729;93.2703939983939;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6570;True;108;-0.348159463933019;95.4352895262947;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7185;True;114;0.696387071203853;102.459386773175;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7309;True;111;-0.517438435426886;94.8952194582687;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7141;True;109;0.861728803521735;98.9712696660976;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7011;True;111;-0.293304518924528;97.2180726499919;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;6775;True;110;0.0222244614136465;100.343443055118;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7442;True;111;0.79297049578644;105.663251196158;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7999;True;113;-0.0816906204812189;103.197700347999;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7799;True;114;1.37849073868239;100.622619260336;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7507;True;111;1.19059631613736;100.328706517878;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;953;True;32;0.50518450970481;40.9706822898278;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;598;True;28;-0.419651914002182;30.583609244303;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;879;True;38;0.056003836965661;37.1624802296716;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;684;True;36;-0.981095356774746;28.9546411997656;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;592;True;30;-0.679076579232905;32.8520710399519;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1251;True;32;-0.120357648025566;37.7392047784509;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;860;True;38;0.60479715154358;36.216976855695;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;747;True;34;0.623206658045886;36.294788472095;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;917;True;36;0.694497060091917;37.9438675629313;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;891;True;36;0.0705286561823657;36.4874716112186;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1151;True;38;0.978885874617227;31.6177167718176;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;938;True;38;-0.808962064279412;37.5955494732204;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1113;True;40;-0.493855714952841;40.1526716783394;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;939;True;36;0.0909957705580399;35.7361341732708;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;981;True;34;-0.488941994786221;35.2582037104169;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1110;True;36;-1.06133330508518;35.2500884426618;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1349;True;40;1.99905244249887;44.163871430465;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1374;True;46;-0.429881000815314;41.7587866695731;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1732;True;44;1.37555801503186;42.0280841820537;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1283;True;38;0.637332923313626;34.6380721998356;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);17;6521;True;62;-6.49682435293289;38.8805416665361;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);126;32860;True;73;-6.86172725896172;45.6971402292325;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);28;9683;True;60;-6.02648408693095;38.8323012578466;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;9005;True;58;-6.89845994630813;32.1631612568339;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);66;1202;True;101;-5.88318551037181;5814545.80288461;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);107;1186;True;109;-6.06428877437975;47284094.3603407;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);597;17231;True;102;-7.91191592936446;503260.749790551;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;20941;False;-1;-8.21677095605556;10.6594556743493;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;43558;False;-1;-8.31994132944644;3.79113172711691;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;17511;False;-1;-7.35037748812787;247266.558198266;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;14752;False;-1;-6.72552397649095;12.599338914097;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;20954;False;-1;-7.69169651043698;317191.855220081;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;9627;False;-1;-6.80552492273559;1129439.04780589;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;9055;False;-1;-7.86235439015253;46385673.0222517;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;5455;False;-1;-6.55577416901129;92628426.1404503;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7689;False;-1;-8.05530004608995;26578491.177698;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3793;False;-1;-8.06268182863171;9792733.08255616;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4867;False;-1;-6.52303545615166;70394138.9370876;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;5879;False;-1;-7.91708680979008;20153665.9283624;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;612347;False;-1;228.529313548596;247.125628056191;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);127;156140;True;30;-2.74687145327063;131.086334919871;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;349940;False;-1;510.740614782376;525.018124977649;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;344289;False;-1;349.174244741339;379.423669006871;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;413404;False;-1;527.406703591624;539.242506077921;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;177471;False;-1;343.401948020645;394.426368931033;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;306799;False;-1;277.748949488849;354.89376908249;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;340192;False;-1;305.731131323152;354.310595302858;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;175084;False;-1;717.91705729962;765.406660227499;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;193223;False;-1;500.53628996298;674.50693819512;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);730;114504;True;92;-0.341980242172528;708.170621596273;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;98640;False;-1;1085.63437226206;1155.26545366393;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;150182;False;-1;1041.12636781603;1176.58542850292;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;80614;False;-1;1042.44145327733;1128.15015986742;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;78632;False;-1;848.802205123958;1112.11760730425;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;73894;False;-1;878.550332220042;1064.03918179635;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;93226;False;-1;1988.88704275581;2238.15670548318;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;53509;False;-1;1867.26980612238;2199.18299160636;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;18791;True;50;0.755486848382635;68.7982607703006;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;24507;True;38;-1.35173972939847;57.4096302962738;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);158;502511;True;62;1.05030921309476;65.2720357795261;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);115;191268;True;32;-1.75219638202829;43.2517695110094;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;53729;True;51;-2.02312388006265;115.356557051272;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);123;641829;True;38;-2.71029231573642;34.6625756040264;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);274;1031585;True;59;-3.39562493060321;56.9181490833915;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;4813;True;30;-0.863319184887831;28.3403395061221;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;34249;True;28;-1.21226408359223;35.2363725741602;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);88;246258;True;195;-4.29615922240236;1656.2645577446;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;11592;True;117;-1.67980595785892;179.320826984255;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;19505;True;107;-2.39286405109343;147.104677534877;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);39;184868;True;206;-1.18780410892865;180.827363326137;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);46;345832;True;83;-2.69245056309361;59.5953263569087;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;4032;True;101;-1.56812746023492;68.4035738856458;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;99613;True;88;-3.2441312719032;55.0338331106259;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);65;608419;True;93;-3.12453983945372;35.6524687269702;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);22;169012;True;103;-2.93005131226548;36.72130796518;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);12;31959;True;187;-5.95977035556457;1556.13690742727;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;23493;True;84;-2.78578470247392;87.1435966419706;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);59;342508;True;180;-2.66380153475499;61.8705882311471;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;105672;True;88;-3.08616962001084;54.2710870896495;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);42;325146;True;80;-2.63412484310442;59.2543987302367;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;32720;True;77;-2.76572973082039;82.8284102952145;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);44;420860;True;88;-4.54531745174311;38.0475921239422;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;3010;True;97;-3.11267416689023;89.9171326755896;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);88;261227;True;200;-3.71621197990735;1556.89980641266;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;17010;True;119;0.0542349180678283;171.805245295679;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;10756;True;111;-3.12512529422648;155.163137817717;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;126426;True;235;-1.00767768855415;131.555078752162;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);78;511216;True;128;-5.00398176900639;42.9129512319884;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);32;82616;True;200;-2.48934401763436;645.248330591942;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;12458;True;93;-3.10098752845163;96.7494715489104;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;2139;True;44;-4.90078813564342;38176.677747878;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);14;2205;True;73;-1.46396569078503;117895.293268142;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);129;9614;True;77;-4.52857390585099;144985.761505915;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);49;3841;True;102;-5.36698994890881;208033.225486003;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);74;7114;True;97;-6.46899826740069;440946.900337815;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);101;11631;True;78;0.165060355476574;389645.21324343;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);161;3881;True;81;-3.93119530700626;2515423.80206072;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);249;3921;True;117;-4.11709753535959;2681137.38549968;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;2177;True;41;0.716565865327667;101047.681690612;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1370;True;41;-3.56578023215579;116123.927635653;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1028;True;42;-3.13056197940729;183716.690204929;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1240;True;42;-0.0625978791070225;148018.079849927;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);26;10428;True;47;0.754445351993382;55597.420966482;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;874;True;41;-2.20903508758272;180337.778416793;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;1596;True;52;-1.50258556007195;174695.31236133;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);19;5211;True;52;-3.13136430020143;91000.0801329353;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;2031;True;63;-2.58526515372713;178112.213380903;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;1461;True;44;1.81641547891124;175600.671848029;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;1188;True;48;0.131590928019925;297481.130011898;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);20;2416;True;66;-3.50875871965606;349063.281101214;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);45;2491;True;77;-4.38238392575493;886251.056889823;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);41;11120;True;75;1.10092662200102;93729.4120208446;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;1875;True;57;1.48300089732307;598738.946819278;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);55;2515;True;60;0.311088637497287;1127791.49102619;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);44;2800;True;77;-1.91315272144009;771127.392660324;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);109;12472;True;105;-2.07803549251105;368129.736811862;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);72;6771;True;81;-4.34840684053017;426680.573870147;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);54;2281;True;67;-4.19907511965854;1152061.33233189;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);125;4148;True;91;-6.07350952040036;1468663.24635301;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;12272;True;123;-0.680191094965356;246.445380786519;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;12251;True;137;-1.63072908596419;261.183998006682;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;17116;True;153;-0.196989955749669;288.059229695398;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;19100;True;169;0.158037808101275;301.61991934735;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;22637;True;167;-1.79656195292491;322.32988429018;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;21958;True;171;-0.494092988549491;335.979106546286;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;28935;True;173;-0.390329033497236;345.749319841993;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;6780;True;95;-3.61239559065574;80.3755375976614;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;4991;True;80;-4.73346993338096;87.4855274381223;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5309;True;86;-2.46306366750984;86.5319257852793;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;7555;True;101;-4.28807061957195;95.4230076395585;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5133;True;92;-3.27765038579884;94.4295711408608;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2073;True;51;-1.17670811014552;35.8695279748692;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2062;True;58;-2.00270148816241;41.1145567133501;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1263;True;44;-3.49667854723115;28.668464715974;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2834;True;57;-3.34679282114513;37.4253573285886;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1316;True;43;-2.68816343665504;34.486043978877;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1167;True;42;-1.39644121849869;27.9929061021876;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;212814;False;-1;1.64479253620394;29.5560845200585;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;14520;True;53;-4.06867353550977;134.429894175454;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);241;68138;True;77;-4.05620454287076;528.402384678768;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3654;False;-1;2566.40844822392;2705.91067156078;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;837;False;-1;4683.01018608375;4763.12595331631;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4685;False;-1;8638.23599326137;9446.50934681251;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7709;False;-1;1258.78220097624;1444.91641330952;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;21884;True;48;-3.89483933856439;15.6522509349304;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1079;True;41;0.407948008203772;35.1896469179936;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1448;True;47;-2.30999592696368;39.8147850783118;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5002;True;90;-0.849680748282671;73.8235959151981;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5004;True;96;-2.28962529929478;75.115449217366;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5594;True;102;-1.86274289460702;71.8325716328204;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5630;True;94;-1.89037967668963;72.1797405933206;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5420;True;95;0.751004802587801;81.3052095360974;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5264;True;91;-1.58373392140099;79.4273687703834;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6137;True;89;-2.36233096104751;69.9073997868467;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6191;True;97;-3.12257299563024;81.8684497155831;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6072;True;97;-1.374032297114;83.8312767944417;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6209;True;97;-1.24400348309234;76.9050933727032;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5750;True;96;-0.264280200589098;84.7511725469113;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6617;True;102;-1.46734455763413;81.2333453278685;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5984;True;102;0.478384051490917;89.8605139204749;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6669;True;106;-0.707860684993974;82.1574877682822;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6027;True;103;-0.486146457066915;89.8759843267639;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;7080;True;102;-1.11073823368311;91.4194260812578;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6777;True;104;-3.4848551612627;81.6708504175773;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6911;True;108;-1.58627286371673;88.8536855413317;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6480;True;109;-2.70862141256565;89.2026193450867;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8150;True;111;-2.27946539110924;90.3141128881828;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7583;True;116;-1.69331261821365;90.5143111744435;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;6972;True;103;-0.833278658037587;92.5042950232015;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7612;True;116;-1.84953807492365;90.5410685653038;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7659;True;115;-2.07124585479277;97.2569143318559;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7991;True;120;-1.78537759298334;87.8943708374445;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8423;True;117;-1.70704649955133;94.713845178249;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7040;True;113;-1.47645897981959;98.1475258741154;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8215;True;126;-1.43440771049219;91.7905795704905;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8330;True;124;-0.645956124970997;96.0622013474585;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8766;True;120;-2.26932074952101;95.8209086458636;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;9044;True;126;-0.162283298793048;94.294117346408;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8328;True;121;-1.78762342391676;96.5950848812851;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;712;True;34;-0.154576407541244;38.4434858822664;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;515;True;28;-1.22285642319469;29.4566715355704;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;760;True;36;-3.85842041721801;35.6664285819367;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;658;True;34;-1.61820199608121;30.0829474351898;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;615;True;32;-3.8433345415256;32.9113057067807;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;865;True;34;3.9785251303998;38.6128426844292;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;896;True;38;-1.03678803538113;37.1607695809483;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;725;True;36;-2.45802594252389;36.3137340231087;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;716;True;34;-1.07417473917881;33.3808748150852;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;738;True;34;2.57726596090325;37.8183958525909;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;932;True;36;-0.638774636813252;28.0721526182987;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;872;True;32;-0.259943778501555;43.6271023923551;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1082;True;40;-3.49937075622223;40.9943373771079;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1069;True;38;-0.110999844242513;37.3182205065234;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;967;True;38;-1.30588940466578;30.0855744761231;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1365;True;40;-1.7300650249345;31.0935131096521;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1735;True;44;-0.711205418317708;39.7408327195257;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1257;True;46;-0.899144564291156;40.7022447196591;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1561;True;42;-1.04275271101633;41.7994182012162;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1094;True;40;-2.58837716001152;31.3399223364058;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;6734;True;62;0;38.5753908264348;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);138;33807;True;73;0;44.6228657547452;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);26;9349;True;60;0;38.6827820021009;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);34;11451;True;58;0;34.8402087117656;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);89;1746;True;101;0;8129174.33993685;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);131;1437;True;111;0;95144788.1094105;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);680;17632;True;102;0;355414.111305282;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;24211;False;-1;0;13.8312431595579;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;40735;False;-1;0;3.46515570291683;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;12709;False;-1;0;11263674.9963837;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;13601;False;-1;0;13.8031931353568;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;15348;False;-1;0;2492667.82307479;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;8605;False;-1;0;3219371.64172173;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7831;False;-1;0;83373740.0554897;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5234;False;-1;0;93791183.8409993;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7638;False;-1;0;38038163.0702155;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3551;False;-1;0;27343773.1959741;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4854;False;-1;0;68226705.5130683;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;6013;False;-1;0;14759113.0854934;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;720153;False;-1;103.18795498777;202.686032308363;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;16132;True;43;0;133.120085618071;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);176;86228;True;84;0;324.716940897317;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);785;327986;True;101;0;420.395122710533;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);159;90579;True;94;0;339.286027892058;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;290593;False;-1;144.609463615195;314.43225595892;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;360320;False;-1;131.330549960152;276.743770954488;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);192;62540;True;95;0;329.656111078681;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;180554;False;-1;480.975373816245;866.072511380155;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;233742;False;-1;235.378670444966;425.444262433442;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;128929;False;-1;319.763213959625;615.097803089768;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;122919;False;-1;506.958608648479;959.95470073528;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;139008;False;-1;592.81709268035;1029.3181784433;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;84783;False;-1;314.438431086343;969.596442541412;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;81521;False;-1;443.054153786005;925.870930592102;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;65247;False;-1;748.63409018366;1396.52675190788;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;91548;False;-1;974.221361652414;1969.3823682361;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;56749;False;-1;972.888604007542;2083.29930179774;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;40418;True;54;0;68.9444252711461;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;69607;True;38;0;58.8357937369853;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);33;108945;True;60;0;66.8469394877176;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);47;92297;True;38;0;38.3266340101159;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;27492;True;65;0;111.128988016876;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);51;265863;True;34;0;34.1040015048044;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);247;809286;True;70;0;72.991538207151;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;9510;True;31;0;20.1137389818502;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;40637;True;25;0;37.9227770406766;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;60047;True;343;0;231.40452801867;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;6752;True;135;0;83.0982882381082;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;19947;True;97;0;121.830326882259;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;45660;True;267;0;134.311370615826;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);52;386928;True;95;0;60.7605609678673;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);1;4432;True;110;0;111.588091010544;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;94192;True;112;0;50.5050524227874;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;148937;True;120;0;29.5210800550639;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);34;243085;True;117;0;36.6679900223368;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);27;80589;True;325;0;743.645371164569;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;17694;True;77;0;89.8617841512158;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;196114;True;211;0;44.2162464540623;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;105006;True;88;0;50.3238274634089;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;228025;True;95;0;57.3595590817544;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;40339;True;79;0;96.6470673199839;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);50;471827;True;100;0;36.8047662528312;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;7079;True;122;0;111.366236292704;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;106760;True;261;0;73.5687439848187;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;17637;True;134;0;133.872303525587;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;21216;True;94;0;143.486944022797;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);21;69825;True;239;0;185.871917471416;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;109446;True;130;0;35.4192774896255;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);32;81934;True;254;0;304.767726288598;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;8041;True;102;0;87.5934828477917;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;2308;True;45;0;38716.7043191017;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;1477;True;67;0;119661.468936832;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);22;2175;True;92;0;135931.621706162;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);83;5459;True;116;0;315504.301495581;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);62;2346;True;87;0;1380625.37825584;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);59;1898;True;84;0;1701756.42751392;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);57;1753;True;83;0;1729923.00798056;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5170;False;-1;0;5172391.8988512;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;1044;True;43;0;86670.2426074509;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1449;True;50;0;104632.123791687;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;1052;True;50;0;226513.480608275;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;1441;True;54;0;230096.808772413;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1355;True;45;0;125652.882403817;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;994;True;47;0;129257.958554235;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;1573;True;50;0;200958.428833353;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);16;1629;True;62;0;400183.262219711;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;1119;True;49;0;421872.730703198;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;1170;True;46;0;205344.371484431;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;1699;True;62;0;438914.510912225;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;2252;True;66;0;531574.409266996;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);35;1826;True;77;0;981024.953540099;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;1083;True;49;0;510017.606972462;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;2088;True;61;0;229550.406299822;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);27;1534;True;64;0;883336.146394961;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);64;3477;True;99;0;956272.042090576;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);99;4288;True;87;0;1256825.03208433;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);33;1666;True;74;0;961687.625558624;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);51;2871;True;77;0;832286.038185227;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);78;2918;True;86;0;1462700.300866;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;48189;True;167;0;263.046791549233;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;37779;True;203;0;260.145819285333;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);20;71018;True;209;0;289.382909572288;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;82463;True;235;0;304.698388830797;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);25;75755;True;253;0;307.147048381528;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;64684;True;271;0;319.746945120151;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);43;104368;True;307;0;356.081877963494;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);21;42140;True;128;0;141.546948448098;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;21149;True;99;0;123.183724434195;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;19826;True;107;0;83.872396183537;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;17960;True;122;0;117.335864054648;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;18366;True;114;0;117.838836347817;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2231;True;45;0;36.7577279119133;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;4946;True;55;0;44.0331366062506;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2657;True;38;0;28.5015439944306;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;3424;True;60;0;46.29441858821;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2119;True;42;0;44.6125287172754;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2278;True;41;0;37.0958469071963;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;55141;False;-1;114.394811026155;223.711933930658;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);104;77971;True;79;0;330.61621095602;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;125950;False;-1;809.915116725764;1443.52475478006;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3476;False;-1;1814.98726426076;2751.94572355502;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);901;827;False;-1;3413.90371615598;4746.06959505919;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4541;False;-1;7084.2555286037;9901.09373643581;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7272;False;-1;1035.10462253562;1511.98267443087;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);20;67021;True;46;0;33.4799753876403;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1223;True;42;0;40.9781864275915;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1762;True;51;0;42.221707981829;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7873;True;95;0;91.3759077334201;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;7373;True;90;0;84.5845182593053;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7320;True;99;0;84.9858308770091;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;10214;True;97;0;87.7287416008262;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;8275;True;102;0;86.3082507209573;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;6437;True;89;0;86.5939917509643;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;6789;True;99;0;81.1293957091124;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8298;True;100;0;99.4103282089923;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7605;True;104;0;90.6587241938893;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8424;True;105;0;90.0378308982361;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;6632;True;99;0;87.8478982978426;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9204;True;109;0;94.8740665030185;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9339;True;111;0;98.3609130160024;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;7915;True;109;0;93.2873873307217;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8472;True;102;0;99.3405630834069;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9820;True;110;0;103.897191610635;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9833;True;108;0;89.9720842984258;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10464;True;111;0;87.4533426031506;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;11494;True;110;0;94.661717946782;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;10867;True;115;0;110.590751387007;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9445;True;108;0;109.985929364206;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;11860;True;112;0;99.7599681850466;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10428;True;112;0;108.631215434932;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;13399;True;116;0;108.001338197401;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;14255;True;119;0;109.663726068092;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;15588;True;119;0;108.688745435303;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;15023;True;122;0;104.383960460225;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;12729;True;114;0;110.68912907832;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;15872;True;123;0;107.191598946188;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;14099;True;130;0;108.918333611135;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;15252;True;128;0;112.457932740293;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);14;15380;True;126;0;111.076098116478;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1012;True;38;0;38.3733992781951;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;801;True;32;0;28.8442694561112;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;655;True;34;0;33.3715772353107;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;682;True;38;0;28.7877056281355;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;550;True;28;0;31.7514937315683;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;956;True;34;0;37.0331775295106;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;814;True;34;0;37.0995453433523;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;710;True;34;0;36.9843003466542;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;764;True;32;0;33.0154010695187;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;888;True;34;0;38.9929108561487;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1599;True;38;0;29.0766378169019;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1020;True;34;0;43.7793526167902;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;888;True;40;0;37.6581746084792;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;996;True;36;0;36.6504905085092;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1258;True;35;0;32.2074267770952;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1538;True;44;0;32.1147693514876;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1404;True;44;0;40.086707311795;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1411;True;50;0;41.5825681552479;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1125;True;40;0;43.9692793585871;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;985;True;40;0;34.9693049501691;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);17;6674;True;62;-9.91587762846432;39.0791550908705;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);245;57365;True;73;-10.408307753671;50.2641744921971;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;9313;True;60;-8.79019610391631;39.4721129997836;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;8715;True;58;-10.3965883581358;30.9236813238603;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);69;1220;True;101;-7.76160915442076;5757388.69000196;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);170;1908;True;109;-10.4836904047131;37400045.9699381;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);598;16897;True;101;-12.7416300788962;513243.323349176;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;18243;False;-1;-11.9575657515869;236792.211923088;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;45851;False;-1;-12.2298423532877;2.31259701873633;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;15679;False;-1;-11.8270680996179;276415.74186322;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;13457;False;-1;-10.8399615889767;13.0961617443244;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;19632;False;-1;-13.4670672467512;350535.570843849;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;8729;False;-1;-9.83135162247495;1249569.57262235;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);853;8465;True;109;-12.0263425854765;56824288.7907568;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;5445;False;-1;-12.6911184984327;73425316.7913731;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;5046;False;-1;-10.980308892998;67558379.0766605;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3539;False;-1;-13.1731922245147;9678822.6855889;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4302;False;-1;-9.46608567521413;69358440.5253667;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;6630;False;-1;-11.0062666883964;14812515.9360354;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;665226;False;-1;167.511673559292;204.813074332494;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);30;32552;True;33;0.381262290031242;146.5610505342;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;367641;False;-1;506.76660214162;523.939688321044;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;321574;False;-1;345.012648979168;388.151269496389;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;394668;False;-1;522.890740124619;538.876224133371;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;240657;False;-1;338.81812605815;399.496843821005;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;370792;False;-1;268.640402473026;332.982128217743;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;319744;False;-1;266.098875338171;325.311297385072;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;153461;False;-1;770.456382364283;810.341268464876;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;228168;False;-1;507.06928988001;603.746536473407;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;136544;False;-1;641.215902512526;673.77346649215;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;95590;False;-1;1084.96721132461;1156.76295990145;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;148236;False;-1;1037.46060842639;1176.20357596296;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;81445;False;-1;1041.18733067574;1233.0823004264;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;81753;False;-1;622.659733150768;787.568299671312;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;73375;False;-1;858.301447644829;1102.95091182047;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;93807;False;-1;1986.78783322744;2235.89285671251;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;51190;False;-1;1901.00297894242;2247.1747733463;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;14865;True;50;-2.69884048936425;68.0037961534846;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;33739;True;38;-0.34706644692888;57.1480357116123;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);47;156386;True;60;1.73335277272034;65.9301663294531;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);55;86010;True;38;-7.3487314181188;45.62112249142;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);97;199679;True;70;-1.87979252417319;114.349062998641;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);81;423400;True;34;-4.79149384903906;32.5862811116381;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);78;309212;True;55;-6.02789042039035;66.4313118311417;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;7306;True;31;-2.56304697834313;20.3203872861641;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;65277;True;36;-3.90452909886421;37.3263392053279;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);87;252449;True;200;-7.29927429302336;1583.28311386988;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;14302;True;123;-4.1238277044985;163.506469320131;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;27557;True;103;-6.1408395500174;125.047162457506;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;58546;True;210;-3.17029215849958;132.796442489192;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);32;265184;True;97;-5.86066990178066;56.8646394881183;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;6997;True;100;-1.59904712729965;60.5984273058984;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);16;161360;True;84;-7.62689259553504;48.0921103394909;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;356308;True;94;-6.48300106231513;36.1436129157931;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);29;210985;True;111;-7.54218116865633;35.5745194329296;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;34079;True;189;-3.76322233413965;1462.17761056895;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;16120;True;80;-4.28578056005322;76.1338252048284;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;128617;True;174;-5.25529842557543;46.1407055555827;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;110948;True;89;-6.9217383281008;53.0517531012504;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);40;316519;True;76;-6.75312791813388;57.8984280227122;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;16637;True;77;-3.73900512522927;87.8225509561582;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;346630;True;96;-6.52835050353476;38.546195968106;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;6115;True;108;-2.67491580928758;57.5788094024617;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);83;227964;True;199;-4.93565283401061;1742.79887881175;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;12703;True;120;-4.24737013515003;161.980982100498;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;11351;True;110;-1.75646110827118;136.379046589698;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);31;144730;True;255;-3.52056637828301;133.592972932821;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);23;182886;True;108;-5.51643765543838;34.8978226789608;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;34010;True;196;-4.3387202349634;1452.24991029504;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;10056;True;108;-5.44384626790718;77.6507908609174;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;2166;True;54;-8.30229849777193;38399.0495903661;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;2203;True;71;-1.04598203720292;118930.659648951;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);98;7345;True;67;-4.1553919089667;163217.056412286;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);40;3165;True;97;-8.54364169715325;205852.24458648;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);90;12119;True;99;-7.1912098124536;284781.449355442;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);121;5076;True;86;-5.76097043688354;1224426.51224015;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);179;3781;True;81;-7.25414297191779;2582517.41773237;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);279;3924;True;119;-6.74876180711704;2750737.82229537;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;2175;True;41;-2.15786798552727;101032.480489646;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;1370;True;41;-2.10177404484435;116124.145922804;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;1898;True;47;-4.24480482282047;107151.768847616;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;1242;True;42;-0.894921975257969;147565.136076354;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;10349;True;49;-4.52731313881534;55887.7094719416;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;872;True;41;-3.47389816813824;180856.741619409;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;1676;True;52;-2.04413616835935;164447.349243009;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;5231;True;53;-3.87036125272045;91213.2810284625;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;1306;True;51;-2.60803333157809;270368.340444651;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;1475;True;44;-1.10230379452661;172902.700414947;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;1204;True;49;-5.42974235449903;292423.284347319;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);23;2937;True;66;0.434655212287938;324659.698604968;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);48;2491;True;77;-5.63665876192228;885837.49037175;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);42;10955;True;75;-3.35106792531741;94859.032226694;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;1914;True;59;-4.70741432790263;584561.629901057;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);57;2516;True;61;-1.76566267132027;1122851.11788635;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);40;2185;True;77;-1.86072770330879;869116.730650728;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);75;2763;True;88;-3.37496700382621;1354542.84940273;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);77;6766;True;74;-3.90951423825359;418612.458879684;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);53;2318;True;68;-6.74457913210657;1142722.82471427;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);131;4193;True;90;-7.67113515847544;1452599.83793422;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;11749;True;141;-5.09874105765487;238.853341978149;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;15244;True;145;-7.7783861077319;248.140353570184;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;18040;True;151;-6.67478080339828;267.500058639532;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;21009;True;173;-4.86365030870151;287.381762073744;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;29676;True;183;-3.80262012078501;319.569580292962;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;25998;True;187;-3.89074702873509;319.717985743018;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;34201;True;199;-6.71061636606372;329.417379793119;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;8212;True;102;-2.75782429985158;97.6316644306306;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;8783;True;96;-4.35390281690082;87.1689955026819;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7802;True;84;-3.21214585763196;59.9607469879401;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;11372;True;102;-6.72536913943417;68.9261576949245;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7633;True;98;-5.28153773923595;85.7508408723578;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2808;True;50;-3.45561297939727;31.9396302771305;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2778;True;58;-4.9315875937408;38.6297431889306;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1946;True;48;-6.82981434023946;29.9606179140304;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2008;True;59;-7.67903294885587;46.4564270546211;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3533;True;49;-6.84212724890006;28.0754734577764;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1279;True;38;-4.52541072137346;24.82736840408;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;68409;False;-1;29.1581838383093;135.700582978329;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;27631;True;50;-8.31830846592163;113.077405390778;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);417;123395;True;82;-7.43807788990257;476.9602704716;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3572;False;-1;2567.66679543843;2708.71720205487;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;843;False;-1;4679.97301176966;4762.97036675164;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4637;False;-1;8634.00255488498;9454.12288560343;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;7557;False;-1;1270.57182725144;1448.27082663708;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;28182;True;53;-7.06452379703351;20.7050020088814;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1016;True;42;-1.08782807358434;37.2923132967548;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1719;True;51;-2.29504990461102;42.2620672928275;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6342;True;90;-3.22689633114261;59.8691661469339;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;5971;True;88;-5.28934036736753;74.7777645543902;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;5630;True;95;-1.47209601242116;74.2702526695186;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6016;True;97;-5.27383499737315;70.9931900769003;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6489;True;96;-5.35639730098687;67.2330262793929;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6083;True;101;-3.48629110342673;79.6117613311713;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6512;True;97;-5.78510543465057;74.3405049002041;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7079;True;109;-5.26172456349191;67.6859476754365;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6037;True;102;-2.98800804262571;81.5797094080079;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7106;True;105;-4.47470232770508;79.0169102547365;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6411;True;103;-4.46671008430189;80.5899372280145;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7712;True;102;-6.60610214180476;70.1642214415587;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7511;True;109;-7.79162639360264;75.2238847412072;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;10108;True;105;-5.82861582181471;54.6991675564592;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7612;True;107;-6.49404090472669;78.1786541129313;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7184;True;112;-3.81474281959398;86.2981454824734;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7963;True;115;-5.03237181247402;78.1357025970461;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7417;True;108;-7.22627812720179;81.9073595215598;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6930;True;104;-7.77560303289189;89.5780491403909;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9682;True;119;-5.64391879678815;66.9374220704086;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9315;True;113;-3.60216187512953;77.0980356781833;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9192;True;119;-3.60032499171347;82.259228272912;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;8080;True;115;-6.86809391724743;91.7108743855582;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8642;True;110;-5.4651120626291;104.571923813553;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;9962;True;116;-3.14573658798754;74.0266215882372;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;11120;True;123;-4.87288603778437;74.9915456444878;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;8208;True;116;-2.36653115709788;101.912406111664;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;8136;True;114;-3.65515492799929;100.941515250862;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8088;True;118;-5.07241526172105;93.3757508879489;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;9468;True;118;-6.03698911649585;89.0405701127713;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;10236;True;121;-4.6878847146323;90.2036835598386;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;10968;True;128;-4.75699282276454;91.6273299515908;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;718;True;35;-2.73396743269007;36.4373909353138;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;596;True;28;-4.55876305311308;25.8664703773215;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;701;True;34;-1.95368251955429;36.8105175421245;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;820;True;36;-4.06072849608046;28.6604400966793;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;769;True;32;-1.11479450804715;30.3520227535409;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1145;True;34;-4.96932404228991;28.8995519098956;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;996;True;40;-3.02255182073143;33.2903469623752;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;723;True;34;-1.38596743348606;37.0290174499503;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;838;True;34;-2.96868946021215;36.2962185976356;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;871;True;38;-1.95288896584687;33.9500418209042;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1160;True;40;-3.55670391315339;29.1914566743834;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;728;True;32;-3.04191928761945;42.3835993893938;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1294;True;40;-1.38723764486386;43.8566195525194;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;912;True;40;-3.79421836179839;36.5912805856243;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;994;True;42;-2.5484361325281;32.317600304052;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1192;True;40;3.66149029024459;32.7969402368122;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1251;True;38;-2.3349169507443;43.5617950128614;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1503;True;45;-2.68613912433001;39.3109912947159;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1232;True;44;-1.83775156940602;40.8221558174547;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1438;True;44;-4.49407579139648;27.7880364130877;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);36;6501;True;64;-11.5422481706113;38.8366919468892;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);310;33046;True;73;-15.1019270260998;45.106996909344;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);60;9576;True;60;-13.8946025094806;39.4817772355672;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);66;10279;True;60;-12.4830719911891;34.6268726807769;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);149;1269;True;101;-11.538211797283;7437233.3712169;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);269;1557;True;111;-11.8946364749844;28120091.2612646;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8754;False;-1;-13.6101040369566;742666.105185045;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8237;False;-1;-14.2671337915707;18.3483846103813;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;17593;False;-1;-13.874812057726;5.34226626311713;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;7356;False;-1;-12.6545509940574;589578.58776029;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;6531;False;-1;-13.6280351634405;11.9569705202389;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;7086;False;-1;-16.2216517346427;942844.713506621;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2561;False;-1;-13.5814952382493;4320911.68200497;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;3210;False;-1;-12.1923487612347;91305826.9118823;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2329;False;-1;-15.1507449972652;38075973.6694189;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;3186;False;-1;-12.5856515127217;26621721.1750066;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1111;False;-1;-12.2351426309777;14035867.7198494;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);901;1515;False;-1;-14.4746008568948;53761785.1741885;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2105;False;-1;-12.6833594041785;12503559.3892411;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;306475;False;-1;165.766785297171;213.727804831847;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);455;176362;True;42;1.1540013442417;93.0631517999441;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;170723;False;-1;503.560849344809;525.532088869761;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;122956;False;-1;389.495430167238;478.177255195019;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;219840;False;-1;518.706823704814;539.080349800859;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;121737;False;-1;380.907768072361;478.526261453887;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;181663;False;-1;271.217619496904;339.420932574891;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;166770;False;-1;262.721137289777;300.117997613783;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;74312;False;-1;734.315684624584;823.633889994876;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;100828;False;-1;502.434591302111;577.761034909786;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;66915;False;-1;637.779896462063;698.453400952965;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;48008;False;-1;1059.97034462203;1163.947288875;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;72814;False;-1;1036.95068072474;1175.16820030921;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;40376;False;-1;1112.06992816454;1267.60645833552;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;39608;False;-1;640.187571820084;991.067541511695;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;35419;False;-1;912.83508144509;1320.34036807982;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;45829;False;-1;2152.28808385449;2328.07954134334;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;24203;False;-1;2246.92737468381;2361.00203266862;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);113;142600;True;50;-2.50127000218702;69.9393537010933;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;40365;True;34;1.16988863424936;57.9120867292544;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);473;738634;True;60;-8.35326351571067;65.3811910869949;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;93849;True;39;-9.24418674479368;36.2321619791086;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);30;36501;True;45;-3.78187224316281;138.325571477391;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);61;197632;True;37;-7.78913182529845;35.949236136553;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);99;197595;True;63;-12.2035538780173;77.9659219687467;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;37452;True;32;-9.46447205888388;27.1865318285833;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);26;107990;True;33;-3.40301568730452;37.0859732737426;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);175;248492;True;198;-8.43629315432151;1571.7153633964;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;10441;True;118;-6.09888139895473;190.968151473633;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;22194;True;95;-10.7681978420935;123.928238399842;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);78;190999;True;213;-7.02014151864991;174.105973318567;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);104;385649;True;103;-7.6034350793705;59.4475106040277;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;20209;True;120;-8.01502899427961;53.7525571526295;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;90170;True;89;-9.73817985359076;51.6886633653223;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);205;854787;True;93;-11.2931206520291;37.5360232054085;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);99;315777;True;133;-10.6388978037292;38.2681313669227;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);55;67232;True;213;-7.40598006951243;770.102274595281;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;43797;True;79;-7.53426780278967;80.5032380168971;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);174;480599;True;188;-7.45137119930095;60.51018881181;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;106301;True;92;-11.031996479534;53.1402739662764;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);70;274412;True;87;-6.7806204872003;57.394775071801;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;14563;True;77;-6.54135596342228;73.4870935409341;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);104;488324;True;101;-9.27823970632016;32.2587127264261;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;6873;True;118;-6.11919274824973;59.7862510914665;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);178;274668;True;213;-13.429840672711;1442.02606158449;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;24438;True;128;-4.50357188318072;158.969360230548;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);4;13955;True;98;-9.74158893589359;139.684473212547;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;18254;True;224;-2.96916410785506;147.38853831733;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);47;160942;True;136;-9.8786296976556;43.7338217467907;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);28;35587;True;206;-6.30640095110181;1393.96237221146;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;6258;True;107;-7.18810451048421;58.4439365471409;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);33;2134;True;44;-8.57526791459929;38134.2325063934;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);32;2217;True;76;-2.54355657364638;118020.063776884;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);271;9304;True;90;-6.72375512168074;147269.146336755;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);97;3050;True;95;-8.7022246801777;211640.758314121;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);192;12147;True;100;-10.392290414555;285455.594836093;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);245;5053;True;85;-7.4486091059378;1228375.87477047;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);341;3763;True;81;-10.7537584655924;2591909.39850227;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);509;4031;True;123;-9.85563833801121;2669140.37287201;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;2196;True;42;-4.27956144925283;96031.3606999328;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;1369;True;41;-1.06401089058585;116123.963091467;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;1968;True;45;-6.07188282386212;100818.4603522;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;1248;True;42;-3.32210784241114;144684.567577628;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);61;10312;True;47;-1.54601375588074;55902.1727600072;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;886;True;42;-0.0337803485801658;176205.994102589;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;1744;True;51;-0.145939135577912;159451.497908933;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);46;5229;True;57;-1.82432490509627;90924.648849781;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);71;10768;True;54;-6.58617494632414;56479.3311062796;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;1467;True;44;-1.95860734108412;174016.958993516;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;1206;True;48;-5.25555386242514;290158.305312553;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);53;2360;True;68;-6.10692501686106;411338.536715404;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;2167;True;70;-8.69990954417146;1056579.96861883;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);99;11117;True;75;-7.20828071222577;93775.383961294;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;1893;True;57;-4.28700268976207;589829.230048544;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);125;2471;True;62;-3.55023949946062;1142622.70152394;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;2771;True;76;-5.67540483783036;790053.628321639;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);210;11926;True;95;-5.27822101698148;317829.236250347;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);165;6765;True;79;-6.15231704079962;425154.054133944;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);110;2260;True;68;-10.8074999836213;1168194.46082823;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);259;4202;True;92;-12.1930782756748;1450550.67669357;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;14346;True;147;-6.05534961404453;231.639423266626;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;20588;True;167;-5.32489483320691;265.694155905193;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;22504;True;161;-5.83098419302925;282.813004906092;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;29754;True;177;-9.31038784317837;262.43840037586;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;28061;True;195;-10.6268205411392;295.53323810429;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);28;37543;True;191;-6.12297552067913;341.164820585668;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);33;39958;True;197;-6.26592102792615;356.75339201036;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;12845;True;114;-6.36978243927418;74.4363742613336;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;9642;True;92;-5.81007216318529;76.9104649871023;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;10296;True;88;-8.79773389260173;50.6845088441811;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;15346;True;118;-6.7055177600472;64.8207779096256;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;10454;True;100;-6.48682237439464;76.7318949446369;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;6625;True;56;-6.931574273859;25.0384802675425;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;4378;True;63;-13.4886579291619;32.7352119939251;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1905;True;42;-3.09565127304727;32.1013300671827;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;3809;True;65;-6.06172984487828;38.5885079919065;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2802;True;47;-3.83670086814456;34.6662318567627;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1718;True;39;-8.15630655140923;31.5910656990322;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;27866;False;-1;77.8886861971311;145.449282165299;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);49;45635;True;63;-9.63532391513516;88.9976055137249;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;61077;False;-1;1088.17723049343;1266.34037981656;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1446;False;-1;2592.17518513774;2824.20421943455;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);903;275;False;-1;4690.97257683597;4737.84667490226;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1753;False;-1;9301.42958612335;9835.31888070201;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2896;False;-1;1398.07105828782;1539.03985803071;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);200;263362;True;62;-8.9841941948589;18.4824336946702;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1619;True;48;-7.58000773049006;28.0748070368291;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);1;2631;True;53;-5.8125607620507;35.484018698461;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7912;True;91;-9.0636313230123;57.5850692423478;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6855;True;102;-7.70149558941613;61.9253033488695;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6263;True;97;-8.19409117062992;69.516316755115;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6380;True;97;-6.3189895963853;69.6332872296588;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;5623;True;91;-6.01726388434639;76.7567142424676;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;6760;True;99;-6.82095182662938;70.8839726176118;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;6306;True;100;-6.2907382648241;74.2296579326275;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7017;True;103;-6.82406245356196;68.4842201422338;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;8235;True;105;-7.65248629323066;73.6254271280388;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;7460;True;101;-5.86830042617937;83.0882586686352;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;6328;True;102;-8.2631044178404;82.2168843420725;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8607;True;103;-7.48266554306188;77.3697656089509;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;7617;True;105;-6.32192168590129;83.2492198831686;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;7653;True;104;-8.46722569537496;80.2329049345774;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);12;9937;True;111;-6.13080572962445;83.5706090147034;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;9417;True;113;-7.27493533279074;83.6945189506408;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8452;True;118;-3.55945460939644;80.2713392418294;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;9241;True;110;-9.21143193772169;67.0744469251855;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);12;8822;True;111;-6.82051411096476;84.2040686900545;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;9197;True;122;-7.35306869372389;87.3188408660496;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;10195;True;118;-8.5798715556227;70.7467066864993;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;13152;True;116;-5.64105416396922;65.2301775620177;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11607;True;125;-7.91562213511891;72.0043136779009;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;8685;True;123;-4.57111999020346;92.8027494848115;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;9923;True;128;-7.1099610263924;77.8098793493567;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11307;True;121;-8.65555158736056;82.5000477425315;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;10102;True;114;-9.23736688874336;74.6674683528686;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;12360;True;124;-7.38231602167936;73.4108762783227;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;10855;True;127;-9.66279231029544;81.7065086913763;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;12661;True;129;-8.43128685709031;75.0251374399049;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);21;13083;True;127;-10.597577561344;75.8679408082934;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);23;13024;True;131;-8.00950002028571;83.096228249173;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;754;True;34;-7.51417608740949;37.466336404962;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;603;True;30;-4.36284273898255;28.5303908381521;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;806;True;34;-6.31447531402884;35.9224173845587;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;766;True;36;-4.542553298123;29.2917856328399;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;523;True;28;-6.19253791597485;30.2704198041942;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;777;True;32;-8.37324692465508;30.6036708431126;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1045;True;42;-3.90723652730528;37.6184974980601;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;692;True;32;-1.59829275503202;38.5277538367957;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;729;True;35;-5.27847861593629;32.1169172448566;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1399;True;38;-4.2265624020293;38.9597867292994;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1041;True;36;-3.69213587069947;29.6258985155172;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;989;True;34;-7.13777453502936;43.9027470681256;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1120;True;40;-4.91252985804136;29.0655133206518;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1101;True;36;-3.40731200444758;33.6090059301731;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1661;True;38;-7.8009666657174;30.4318558009664;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;953;True;36;-1.20636858680469;36.4971140941121;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1404;True;44;-4.68290523190054;39.7416044194185;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1788;True;46;-6.19694380038159;34.6593668828481;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;959;True;36;-1.17194746722934;40.2249081517435;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1290;True;41;-3.84446099721445;37.5685663169096;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);39;6735;True;64;-13.9810328144955;37.3921414190784;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);565;57350;True;73;-19.7149250350596;49.9057834017427;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);57;9031;True;60;-15.5242170683832;38.9713638788495;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);62;8915;True;58;-14.7220680464353;34.1502729400423;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);156;1324;True;101;-15.8417022771549;3579199.09797915;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);365;1881;True;109;-17.6427403502113;40588230.9649351;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8989;False;-1;-19.6185067007141;964639.071583042;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8384;False;-1;-16.6247433674764;18.2340086670341;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;17698;False;-1;-20.0608090631513;4.50060072917188;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8265;False;-1;-18.9927555402469;519608.301015418;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;6657;False;-1;-15.7969706944072;11.7913160556007;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;7261;False;-1;-18.7199643833541;927639.646857059;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2415;False;-1;-13.1149580984172;4640218.06227144;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;4037;False;-1;-15.8996434201472;45656059.0970346;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2171;False;-1;-14.3816096460324;18580254.537841;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;3166;False;-1;-15.5118782442641;28329119.0014424;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);901;969;False;-1;-17.7399763838775;17530506.3322239;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1577;False;-1;-22.8422232287471;15643947.4145235;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1814;False;-1;-13.7079785823188;15736930.1931545;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;318583;False;-1;161.854350154265;213.41120448643;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);42;22475;True;41;-0.266326023890378;109.055405092111;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;179551;False;-1;499.4682737928;525.162847323358;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;163825;False;-1;337.551067002757;402.179557509608;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;214126;False;-1;513.408497061916;539.950274174351;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;119384;False;-1;329.939906930747;391.89211579651;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;149932;False;-1;264.907731173603;427.704228229111;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;175301;False;-1;293.34899372032;338.36824573257;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;73837;False;-1;728.996931801479;802.349366232839;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;117120;False;-1;441.80396084646;560.732415879094;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;66627;False;-1;633.729295459616;678.955835129009;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;48134;False;-1;1079.50131885221;1163.55827853713;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;73354;False;-1;1033.06648908453;1175.07856297026;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;41874;False;-1;1070.56630025862;1217.86553400533;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;40225;False;-1;893.903646564807;1107.78080362115;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;35027;False;-1;915.773908440477;1214.07590965779;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;47183;False;-1;1982.94771347851;2256.01417723426;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;23070;False;-1;2313.76929890865;2417.20030715663;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);43;56025;True;54;-10.1845355940522;68.9521893877729;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;9028;True;52;-0.450022751151004;57.0094104210963;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);211;345763;True;76;-0.201079940249777;65.5594055908474;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);199;141495;True;41;-7.56093815668812;45.376205574084;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);41;42734;True;64;-9.15327554464943;98.5328760068081;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);98;253942;True;36;-12.2117426250924;34.7283996078968;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);63;114857;True;64;-10.6146931252102;70.9059876394675;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);3;17670;True;32;-11.1032704482871;21.3871906015502;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;58523;True;36;-6.10532626065909;39.8964701578547;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);170;251543;True;204;-12.1986477175577;1559.50945702473;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;12282;True;133;-9.28056728029781;172.285219748737;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);48;135327;True;148;-10.9921975237203;95.5492957420603;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;11915;True;199;-6.96408412405524;187.889463370179;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);89;339997;True;104;-12.5607980746343;57.9112596366735;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);2;5653;True;102;-11.7167920000953;73.507119181771;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;122893;True;88;-12.355844424889;45.6467260900568;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);42;228141;True;88;-13.961494507475;23.8698758502072;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);24;72939;True;133;-14.3209964083712;53.0908371483619;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);87;113427;True;216;-12.889146559395;480.534465123868;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);35;59570;True;71;-8.89902498438926;92.8831215749969;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);46;130339;True;180;-11.1535041324564;58.6488509338891;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);39;182713;True;90;-13.0067517524251;46.2999553348016;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);90;340315;True;103;-10.8473656471149;58.3865897616322;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;58307;True;84;-9.65896350927065;85.7362596195022;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);154;686989;True;88;-14.7574813675384;32.1910488251138;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;12364;True;116;-14.248431304208;65.0911748246815;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);168;247901;True;203;-12.1403757007043;1576.16230673289;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10221;True;122;-8.68908586777611;194.886989414351;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;6984;True;120;-9.11240201800357;125.583893332006;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;139214;True;221;-10.1747995002975;173.89526420911;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);120;389392;True;125;-15.0408897066227;41.211320969926;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);92;115124;True;213;-12.2637985860596;472.807207033236;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;15104;True;103;-8.80123972728416;72.1946671775578;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);34;2175;True;43;-11.0766608312052;37984.6329673327;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);32;2197;True;74;-4.21413671598312;118649.531086342;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);240;7360;True;66;-11.5113630686888;163541.993908966;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);99;3227;True;101;-13.1440610543262;201894.747388219;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);193;12322;True;101;-12.9312464871177;280699.46569175;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);223;11439;True;80;-4.2614682912033;396237.676946423;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);333;3673;True;83;-15.16593455593;2655148.61477666;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);481;3729;True;125;-12.4934719515392;2755108.90339461;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;2197;True;42;-5.53252653405645;95949.1523240843;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;1371;True;42;-9.70051838389834;115962.500133896;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);15;1925;True;47;-4.83692223523143;104854.375431239;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;1248;True;43;-8.79366437262884;143607.083042931;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);60;10134;True;47;-5.68672408174195;56425.5482431489;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;864;True;41;-0.811542680915228;182249.735023721;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;1622;True;52;-6.99086200319086;170646.643057017;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);46;5213;True;52;-7.25182824850785;91034.8636282351;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;1272;True;51;-2.13650656690882;274381.891657018;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;1471;True;45;-3.76107871862672;174241.243547002;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;1215;True;48;-3.11668083462475;293922.658696516;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);49;2442;True;63;-9.39605915640149;361680.778663907;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);103;2238;True;71;-7.14960936435096;1000104.01332506;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);98;11167;True;76;0.624264977161594;93422.1819305758;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;1900;True;60;-1.72644602829067;577533.299499559;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);124;2477;True;63;-4.69773246150106;1140060.63510409;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);101;2576;True;74;-2.19656614328633;858759.314820479;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);249;12308;True;105;-4.25261419294082;373592.359890453;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);163;6768;True;80;-9.07797474405666;423785.452467834;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);109;2327;True;72;-11.5784081292705;1139820.3995481;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);254;4148;True;91;-13.9467114080485;1469047.66992917;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;16951;True;157;-11.247402288631;215.320427337741;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;19651;True;175;-6.79288992596623;255.607877772326;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);14;27614;True;185;-11.6341610569608;223.48822659577;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;29452;True;191;-9.24026288194597;303.181905790019;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;33945;True;187;-5.39822426564133;303.972834037496;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);29;37958;True;213;-6.49004142831831;329.725869255838;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);34;41572;True;209;-10.1241929540138;347.371975827972;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;20887;True;122;-9.71969296995777;90.7470753540058;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;18766;True;107;-10.386809671376;51.7421025942327;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;23535;True;84;-10.3215216157346;40.0587809534993;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;15208;True;115;-9.91141658901169;89.7363330450353;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;18229;True;104;-13.1618785930663;65.391796346654;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;8770;True;55;-7.82266251101549;35.9486711743973;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;7321;True;62;-8.06791395538534;43.1050314908913;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;5030;True;42;-5.89954280319756;21.1133492984367;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3783;True;63;-8.28071111624713;35.5398191310886;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3853;True;57;-7.55894728348295;30.7010621552372;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;5354;True;41;-11.9663459605263;21.0042983769505;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;28887;False;-1;42.6296848186695;157.471110469094;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);77;125597;True;56;-15.499817701196;24.9380699166547;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;52895;False;-1;953.376619134091;1204.27723028307;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1404;False;-1;2589.26931633123;2828.68647937336;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);901;261;False;-1;4716.13976488734;4736.31366292779;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1705;False;-1;9303.16097661934;9844.5661244647;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2880;False;-1;1400.897867138;1539.40870986334;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);53;147155;True;52;-14.5049127485045;23.0366745983157;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1868;True;49;-11.496122176652;26.3310571319811;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;2587;True;55;-6.27915751600274;36.0357925833548;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;5923;True;97;-8.81914259716718;70.8644917590231;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;8235;True;96;-13.0268802626604;46.1884145949543;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;6349;True;101;-12.2875595489175;71.9267900657637;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;7146;True;96;-12.6364041267971;66.5731444381413;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;9913;True;103;-10.939070099578;53.4133194060882;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;6832;True;98;-11.0034456239738;75.9971257497141;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7878;True;108;-9.23377498569356;64.1754586842028;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;6940;True;105;-9.98954559563456;79.8739696598827;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8798;True;111;-11.9518277542032;68.9579788616237;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7080;True;99;-9.95088261175302;72.9540189942063;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;8970;True;113;-9.9978251132811;67.6658235981576;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;9379;True;112;-11.011421176932;64.3912819275993;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;9318;True;116;-10.6617626122982;76.8737654411751;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7090;True;105;-8.99409056958817;79.4269635706292;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8566;True;97;-12.1188044394558;74.3774658231439;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;10345;True;117;-10.626479086635;68.790949664836;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;14969;True;115;-12.309009406678;48.9781747949573;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;13256;True;113;-12.205463840826;62.0329569812248;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;15699;True;113;-13.1947611047451;48.3461818952375;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;12260;True;119;-12.554578918928;61.0715354527373;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);14;9641;True;119;-11.5772487376248;87.2182452278156;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;11287;True;120;-6.79003158738873;77.2814367981968;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);14;9541;True;118;-8.39923686866973;85.4854267900093;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;10800;True;122;-13.2432985883285;76.3983273021044;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;14536;True;124;-11.678318976208;61.9461253122239;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;10199;True;120;-10.5057489655181;87.460255126355;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);25;15493;True;128;-11.7092592652254;58.9743368950713;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);15;9759;True;130;-10.3309942702526;82.6836317534099;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);26;14544;True;122;-11.9718952146739;74.4664010772018;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;12760;True;136;-13.1599926661247;82.0634691956106;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;13977;True;123;-11.1275497626955;74.3732367536494;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);26;15544;True;134;-11.3833495824193;76.5051816291493;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;918;True;34;-8.98189553347303;33.5045701576148;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;661;True;30;-9.24758183126515;33.0396448564662;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;943;True;38;-7.63826600249029;36.6345553780216;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;821;True;36;-4.4182464043112;28.5454535819642;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;573;True;30;-6.03127164013681;31.5510099810279;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1381;True;32;-7.15853599066957;31.0333330655064;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;866;True;34;-7.45844282197614;38.719485730301;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;702;True;34;-4.63647874336313;37.5089834908627;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;793;True;32;-3.48381622624052;29.7270285292926;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1607;True;38;-8.58411562513318;33.6780510582087;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;999;True;40;-9.90008145426023;29.3045225730477;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;890;True;34;-4.40434525436563;43.5634930121294;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1606;True;40;-14.0903034503368;36.6387523362781;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1365;True;42;-10.7003440597175;32.6172204277331;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1828;True;40;-9.54220218763453;29.5403099505124;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1111;True;37;-3.76293700642121;40.8162686943164;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1500;True;42;-6.00462477949256;41.2689633223809;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;2625;True;48;-7.83997496288494;40.9980004288568;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1454;True;42;-9.72140444282761;43.0737502711358;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1306;True;44;-6.34636456280704;29.1639075830049;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;6907;True;66;0;38.1651163458967;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);135;33299;True;73;0;42.6776946185359;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;9877;True;62;0;37.8690672573482;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;9178;True;58;0;34.085121025654;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);78;1353;True;101;0;12282311.5436121;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);262;3359;True;111;0;88375891.3646942;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);673;16807;True;101;0;1136432.22223713;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;17939;False;-1;0;13.3291753820433;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;31597;False;-1;0;7.07707754499603;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9054;False;-1;0;10853055.5691453;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;12824;False;-1;0;13.694088094257;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;18786;False;-1;0;2974871.65422615;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6996;False;-1;0;6865601.93300412;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;7849;False;-1;0;92722321.8079613;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;5240;False;-1;0;66889857.2094181;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6579;False;-1;0;51556450.5565991;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3748;False;-1;0;40062994.1780715;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4911;False;-1;0;79894954.1479097;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6716;False;-1;0;13288662.9124945;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;721955;False;-1;56.1919038396939;209.150133270947;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);152;165138;True;55;0;90.651304133999;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);79;38634;True;103;0;338.989417302189;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;373439;False;-1;137.254766676826;404.638391432279;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);36;18788;True;73;0;391.862165615534;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;268988;False;-1;118.414734576625;382.251035309183;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;403111;False;-1;89.0415864875405;280.651504732323;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;320135;False;-1;117.866394470784;324.81413292129;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;152715;False;-1;333.875399446611;929.600277668051;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;196767;False;-1;183.109286351354;568.710691143875;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;133295;False;-1;173.028310921802;586.912286143267;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;120992;False;-1;419.710586278043;1038.98832323748;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;133326;False;-1;476.579404162149;1146.81523129438;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;82208;False;-1;306.038174623085;998.61388572926;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;79257;False;-1;248.729459700295;1050.49127922248;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;77387;False;-1;475.257707974728;1321.38881596992;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;93484;False;-1;867.471343168655;2052.06837619458;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;61669;False;-1;982.145858782326;2160.62624202998;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);123;319701;True;66;0;74.3225571209725;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;103650;True;42;0;60.1546491869536;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);273;904120;True;74;0;68.0679098254223;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;31796;True;42;0;26.3705711334323;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;15092;True;70;0;107.408923877906;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;101930;True;39;0;46.44832053235;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);96;421028;True;60;0;62.9060549478297;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1437;True;25;0;28.6958235866495;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;125770;True;33;0;37.7865895384579;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;96152;True;341;0;81.4492061438535;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;6293;True;118;0;117.763485056843;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;17428;True;93;0;118.561614715436;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;118389;True;271;0;149.583921098762;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);41;320126;True;76;0;59.3532348585453;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;12686;True;129;0;85.604373974194;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;113432;True;109;0;49.6532778887041;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);69;645461;True;119;0;35.754375583274;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;113601;True;112;0;47.9604865565932;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);100;426944;True;326;0;74.1332209192372;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);19;58388;True;74;0;110.767053719076;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);76;338030;True;205;0;70.7421752440722;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;45380;True;126;0;52.4894472733126;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;397056;True;105;0;60.5328207925261;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;22728;True;73;0;95.8387421443192;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;273866;True;148;0;43.6546759538778;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;50131;True;112;0;68.6919567064501;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;48693;True;262;0;113.273515226584;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;8959;True;149;0;132.237128996427;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;28520;True;112;0;139.829744658363;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;72682;True;329;0;149.561420304762;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);53;346118;True;136;0;50.8730613413844;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);147;557644;True;371;0;98.5312996110309;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;13085;True;141;0;93.8341667107742;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;614;True;49;0;61033.2791918766;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;2572;True;64;0;129772.923604088;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);27;2486;True;99;0;146808.568193243;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;1265;True;69;0;289472.041666486;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);45;1714;True;78;0;1326077.36413279;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);76;2314;True;90;0;1836422.10873947;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);289;5729;True;147;0;2197542.70182489;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);356;4202;True;149;0;3569335.51302435;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;1634;True;46;0;66079.7656575221;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;1122;True;46;0;119194.066654265;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;1323;True;56;0;218969.713013333;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1827;True;59;0;191873.882448975;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;1448;True;44;0;161984.342261568;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;872;True;39;0;181409.82064329;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;1834;True;57;0;228940.815439873;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;1116;True;54;0;663187.582914843;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1117;True;51;0;321381.539619043;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;1386;True;56;0;185187.219016261;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;1951;True;76;0;400006.612521869;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;2685;True;79;0;496464.47251309;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);49;2645;True;84;0;918830.956302367;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;1581;True;63;0;593501.772367469;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;2043;True;65;0;319745.795767446;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;1393;True;59;0;516140.299930329;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);58;3364;True;95;0;901736.792971632;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);89;2910;True;90;0;1551829.29114746;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);26;1570;True;78;0;754096.119139689;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);35;1928;True;74;0;898707.658412845;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);82;3265;True;85;0;1265626.06645712;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;44152;True;193;0;242.495396485138;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;66736;True;231;0;255.133772401402;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);24;86951;True;225;0;263.221035776303;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);39;125217;True;235;0;292.308509042359;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);52;153561;True;267;0;305.366558782984;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);73;196511;True;277;0;323.002106315188;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);94;228644;True;313;0;368.521320644604;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);25;57079;True;126;0;99.1238837871486;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);26;48006;True;119;0;86.8744250378172;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);19;45873;True;107;0;109.287642573509;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;31914;True;125;0;126.191309491016;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;42845;True;123;0;118.796926047092;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;5513;True;46;0;42.9453793597421;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;25325;True;61;0;54.9636758194633;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;2247;True;40;0;35.4289939034111;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;5359;True;59;0;51.9922103791123;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3315;True;50;0;46.9245441890701;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;4121;True;38;0;38.4942309497264;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;49442;False;-1;100.942735883244;276.550787833464;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);66;68227;True;104;0;281.632484296736;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;129880;False;-1;444.276063852615;1516.04221788011;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3550;False;-1;1509.21333784484;2887.48250932166;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;825;False;-1;2380.56694238352;4735.49444193988;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4481;False;-1;4653.90687493193;9798.83339693472;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;7585;False;-1;743.809637801717;1574.22232653342;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;80195;True;46;0;33.4275932259194;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1201;True;42;0;39.6859292808281;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1590;True;46;0;43.431906817532;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;8212;True;94;0;78.6039249102794;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;9097;True;100;0;74.8585118008195;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;13879;True;107;0;82.9649153659974;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9746;True;101;0;82.3715212980066;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;10556;True;99;0;89.350276109109;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;7984;True;96;0;88.4450728152746;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9767;True;98;0;81.3346153638018;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;13185;True;107;0;87.0938748361107;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;8224;True;98;0;89.203433850653;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;8445;True;103;0;96.0756275165734;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9788;True;111;0;90.0855854141054;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;13539;True;111;0;86.6473996600868;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;13971;True;117;0;101.506861440584;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;13490;True;108;0;82.9642587793971;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;10667;True;105;0;95.9118971339915;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;9829;True;120;0;93.7423100830769;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;14447;True;108;0;106.479789632366;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;12313;True;117;0;98.8923428340202;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;10152;True;116;0;96.0827376555194;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;13686;True;126;0;103.385848047291;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;12755;True;117;0;110.264208623699;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;14248;True;116;0;98.7963188199515;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);10;13231;True;120;0;92.1371767329583;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;27088;True;130;0;97.6623439422359;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;20534;True;121;0;107.655377646923;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;18546;True;124;0;111.973749215845;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;16406;True;132;0;103.316840379249;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;16132;True;126;0;112.123406311444;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;17931;True;125;0;107.212073457783;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;16573;True;130;0;98.2671689022791;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;15707;True;128;0;88.4759840000751;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;18133;True;127;0;95.2897566735628;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;709;True;32;0;35.4545706704396;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;657;True;26;0;33.8365242001374;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;771;True;34;0;39.5400365348968;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;938;True;38;0;32.7098579745431;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;596;True;28;0;31.9503292943743;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1093;True;34;0;33.6051066601458;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1154;True;40;0;38.9941034963534;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;747;True;34;0;36.141933627787;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1176;True;38;0;40.6773608254853;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;892;True;36;0;40.3933660219865;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;964;True;40;0;36.0742356496355;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;959;True;38;0;40.4192610321988;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1009;True;42;0;34.508366726469;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;905;True;36;0;36.794598834701;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1193;True;40;0;37.2700199364643;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1274;True;40;0;36.4871850703263;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1449;True;46;0;37.6638292997772;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1870;True;47;0;47.7192618347403;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1169;True;32;0;47.9574437068318;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1173;True;43;0;37.5613817115133;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;6817;True;64;0;37.7639865792459;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);131;33510;True;73;-1.04106088471372;43.3052228846988;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;9371;True;62;0;37.9183825691341;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;10339;True;58;0;33.9301959709414;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);104;2037;True;101;0;5910819.70972492;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);280;3835;True;111;0;28258712.8685954;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);544;12860;True;101;0;4220865.86754617;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;17675;False;-1;0;4808282.86822196;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;35252;False;-1;0;5.41199443940949;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;15203;False;-1;0;197281.14773819;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;12990;False;-1;0;15.7609787488647;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;17289;False;-1;0;1212488.33011661;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;10552;False;-1;0;3134999.40741622;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;8206;False;-1;0;93730633.953689;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5365;False;-1;0;79828162.2949282;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5056;False;-1;0;75575767.3514157;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3606;False;-1;0;60648776.8835322;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4277;False;-1;0;74416534.6796169;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5166;False;-1;0;22093792.7079594;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);114;95232;True;87;0;216.621481784946;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);66;78180;True;60;0;93.3188940822542;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);293;142311;True;120;0;289.848072180133;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;360893;False;-1;19.7432420254765;411.927644639044;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);57;33025;True;86;0;377.476243513463;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;295142;False;-1;23.5322765394307;209.788472841043;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;359266;False;-1;6.76247099527797;290.738531165529;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;291267;False;-1;-0.800701745330457;317.961685946638;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;169950;False;-1;148.263899405133;919.544319881457;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;237405;False;-1;69.5109891489763;455.054216356874;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;134277;False;-1;68.3261483562806;787.166331887493;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;122999;False;-1;170.68284556751;1148.34803483934;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;132760;False;-1;165.447853240685;968.220652773846;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;84400;False;-1;190.882455252035;1006.26831830454;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;81188;False;-1;159.247337537638;1081.37044136707;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;68725;False;-1;248.448522795143;1522.60431942234;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;92602;False;-1;437.301363369618;2038.93723878908;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;61727;False;-1;314.57628907619;2030.61095210449;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);42;112560;True;60;0;77.4853576112002;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;16613;True;46;0;61.3100254198185;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;91554;True;46;0;71.1212023319834;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;21713;True;46;0;25.7517013260789;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;15011;True;65;0;108.211716682309;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);44;223503;True;35;0;40.1045085532292;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3122970;False;-1;-3.47080986768329;58.4655491125108;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4210;True;32;0;28.840260367118;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;23614;True;33;0;38.9966388495164;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;178836;True;192;0;73.195196238455;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;6761;True;142;0;124.586610307381;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);22;127073;True;113;0;111.3171100451;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);40;160086;True;265;0;147.903702495015;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);41;314625;True;94;-1.06254537262906;59.2868292037289;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;11801;True;93;0;98.9721195636726;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;149130;True;88;0;48.1446233186396;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);85;670527;True;171;0;56.7652483675597;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;89614;True;147;0;34.7879536950872;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);295;1008033;True;371;0;84.5332197393263;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);37;80905;True;101;0;83.7407042538628;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);168;759165;True;246;0;67.7298310431328;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;129452;True;100;0;47.7516873049747;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;88487;True;76;0;53.4413516436364;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;57302;True;74;0;111.063883336037;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);116;932813;True;156;0;40.210964073304;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;15036;True;92;0;100.086541072764;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;8980;True;188;0;740.815534500678;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;14051;True;141;0;112.606289801298;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;19860;True;113;0;129.311107044222;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;169008;True;303;0;156.577130486187;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);116;694792;True;146;0;51.5815475108585;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);315;971915;True;316;0;92.5987749620338;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;31358;True;130;0;98.5667848373405;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;3149;True;67;0;42063.40844797;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;1968;True;64;0;152385.433544515;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);93;9434;True;144;0;98853.7474788644;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);51;3266;True;102;0;346485.707424423;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);63;2774;True;92;0;1178040.94894188;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);71;2282;True;94;0;1630911.48058313;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;8680;False;-1;0;3866266.55759675;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);560;7910;True;174;0;2530666.95585;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;1518;True;43;0;68090.1970515228;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;1289;True;40;0;129986.853153667;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;1794;True;59;0;305824.578486787;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;1420;True;47;0;196143.048936134;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;2175;True;60;0;235520.681818087;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;1187;True;50;0;128757.827024611;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;1561;True;51;0;266290.452397248;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;2553;True;70;0;249074.513804163;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;2526;True;75;0;293247.511381365;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;1223;True;51;0;193293.619564385;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);26;1893;True;56;0;668678.51942025;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;2162;True;62;0;656449.745315968;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);43;2341;True;79;0;889323.769019041;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;1811;True;73;0;465129.26016498;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;1950;True;59;0;322761.070805038;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);43;2392;True;72;0;868291.530142344;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);97;4592;True;104;0;1053360.00736747;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);78;3101;True;102;0;1255005.44281364;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;1226;True;57;0;1175859.45082266;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);63;2628;True;75;0;1218616.21412162;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);103;3859;True;98;0;1500753.38909362;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;125271;True;189;-6.31353657350758;254.07500054257;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);61;222527;True;231;0;279.324341907964;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;101058;True;211;0;259.672461753304;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);56;178429;True;241;0;290.559812747331;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);123;348555;True;249;0;302.756408208767;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);225;556620;True;277;-7.17923257543782;347.428041129433;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);295;649503;True;291;0;345.143549038431;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);109;222416;True;149;0;105.056101182546;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);32;84154;True;121;0;77.2668165588268;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;58972;True;124;0;120.340656047244;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);48;95739;True;129;0;114.352395012457;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);48;96199;True;129;0;126.999557591646;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4051;True;44;0;36.1641198747561;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;52309;True;58;0;52.3180109155;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;3964;True;40;0;33.8122480752125;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;15347;True;53;0;51.1745543673828;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;7875;True;45;0;44.7720263249575;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;10030;True;40;0;37.1725498648611;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;50033;False;-1;47.2123989675556;235.182653648438;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);179;169977;True;84;0;126.952510780607;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;127498;False;-1;289.953675290739;1493.62026409569;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3548;False;-1;775.969816381591;2793.63459598757;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);901;825;False;-1;2169.70639392134;4700.1376614078;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4603;False;-1;1992.99286574039;9990.58988194421;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7689;False;-1;293.810087459297;1570.36716370097;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);775;2437356;True;47;0;45.6493929461438;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1568;True;47;0;39.880713539128;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2556;True;52;0;42.2668844825737;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;13838;True;88;0;74.6428320061419;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;12241;True;99;0;69.4864431330208;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;9822;True;99;0;83.360655097135;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;10838;True;103;0;89.7602261056077;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;11793;True;102;0;87.1926210001679;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;15527;True;103;0;75.8346751525076;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;12144;True;108;0;85.2390116291435;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;11722;True;109;0;83.4818390008405;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;16137;True;113;0;83.297509376261;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;15116;True;107;0;93.5235107251618;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;11759;True;106;0;97.7205006170859;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;15251;True;107;0;82.842052305911;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;18148;True;120;0;104.532256794449;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;13183;True;113;0;89.3557456010802;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;19528;True;115;0;87.7599376824088;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;12203;True;111;0;97.5939669948614;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;16174;True;118;0;92.7296975908192;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;14480;True;109;0;91.1015734016167;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;15123;True;112;0;88.090915326431;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;13608;True;116;0;102.527310772858;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;19243;True;121;0;94.2882036387418;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;17274;True;117;0;81.2840231782726;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;20784;True;123;0;96.5443082466423;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;21785;True;128;0;105.088400127438;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;21796;True;116;0;98.8832294736524;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;22353;True;131;0;108.735683833827;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;17139;True;125;0;101.442182777232;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;23185;True;118;0;86.9053115751947;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;16824;True;116;0;96.6212745444535;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;20856;True;123;0;108.880252985152;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;22782;True;127;0;100.548578689608;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;18880;True;125;0;109.376320897082;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;642;True;30;0;37.1779640528437;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;585;True;26;0;32.4643368534423;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;835;True;36;0;36.8488655282719;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;754;True;34;0;31.0111265939413;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;735;True;30;0;31.6879527261673;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;983;True;36;0;32.8158214269646;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;979;True;34;0;39.5794391739486;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1016;True;36;0;39.8494433272253;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;829;True;36;0;34.8109035115441;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1084;True;34;0;42.0581463187296;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1245;True;38;0;33.6987559066611;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1066;True;36;0;37.515716034787;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;960;True;42;0;35.2331517491863;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;989;True;38;0;37.8499946644613;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1304;True;35;0;40.4854226670311;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1109;True;40;0;34.1237448138457;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1954;True;44;0;44.4272544807102;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2210;True;47;0;49.2073470113941;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;974;True;38;0;41.4356404731749;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1914;True;42;0;43.9949696768578;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;7085;True;62;-5.36122803253728;37.0977762914486;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);136;33509;True;73;-5.52148951225774;44.036403893016;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;8936;True;60;-6.3943043243552;38.2101740606895;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);30;10515;True;60;-12.7068058457812;34.5553899827205;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);66;1224;True;101;0;61.289904993628;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);201;2499;True;109;-4.24436874767897;118763761.879803;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);615;13817;True;101;-6.69350612893724;10019255.735315;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;18729;False;-1;-38.483555935212;12.8343311734406;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;37779;False;-1;-8.09697207437266;5.70929197497132;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;12386;False;-1;-7.90867982117575;4768806.76325823;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;10976;False;-1;-6.26504346059063;15.2036561476565;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;18206;False;-1;-10.4865639472922;1213584.14084359;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;6432;False;-1;0;18558850.979169;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7912;False;-1;-57.9157233724609;89477345.0677264;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5317;False;-1;-0.361405672484906;67435449.2802205;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7290;False;-1;-1.03530341294689;48273843.5507053;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3632;False;-1;0;29638213.3690719;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4237;False;-1;0;68962470.8661023;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4975;False;-1;-7.47528905083564;23477410.0268576;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);380;320615;True;70;-80.3726680335065;207.206668913237;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);94;111243;True;56;-24.9382244628943;100.79673212588;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);254;103261;True;119;-170.224484926304;428.744621129976;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;372467;False;-1;-184.591882730319;411.460821980242;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);95;58800;True;105;-34.9185716345302;215.628105957839;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;262770;False;-1;-106.46379196108;342.273632333193;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;393385;False;-1;-162.847686671406;322.630282705302;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;350066;False;-1;-103.442397004027;283.0983172094;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;167303;False;-1;-321.757693404755;1012.9071891596;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;238997;False;-1;-107.672589560479;476.245782393988;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;119914;False;-1;-331.673015140413;976.668810911885;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;132269;False;-1;-285.347876119163;1070.52310192831;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;146991;False;-1;-254.607270991534;959.079675939978;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;82040;False;-1;-383.157646739738;1222.60997764246;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;77202;False;-1;-712.686775657579;1417.08690007305;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;68536;False;-1;-435.790760268277;1944.9338193006;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;93421;False;-1;-977.295372296954;2095.34463556711;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;59405;False;-1;-630.510832449832;2276.62287966352;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);128;392125;True;50;-48.927328673798;85.190375594877;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;82934;True;46;-28.6091922039942;66.7251892815506;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);32;128446;True;54;-39.0549567345537;79.1207493872163;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;4897;True;41;-0.333989991717122;36.9331240901539;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;9111;True;60;-4.39599528678774;78.7496280059959;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;115784;True;33;-22.5939195434004;40.2369754662104;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);264;796959;True;64;-50.5658446824402;73.4812533406431;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;13440;True;30;-0.0998121766544955;35.9142485906883;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;33559;True;37;-12.599079235149;39.6330682476595;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);68;444661;True;261;-45.2125315675397;82.1763484799648;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;18910;True;126;-10.6095125274349;141.894381569797;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;29887;True;94;-72.3132559174945;144.431861532132;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;28296;True;247;-47.1952018221075;166.498643689407;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);33;262050;True;85;-40.2191761773051;57.1975153850435;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;57947;True;117;-30.2811886418095;99.4206888208878;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);20;198780;True;131;-13.3548975074112;50.1554244853701;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);49;417540;True;157;-9.94455414708331;37.5015239554918;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);161;978815;True;129;-65.8169535793142;44.6057142260365;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;2660442;False;-1;-91.5277333199255;81.3706339837355;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);32;66730;True;86;-32.2011289102845;90.1257567765746;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);139;657256;True;196;-61.2687483541455;61.6868363256382;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);33;262421;True;123;-49.8276381080042;52.2423724194212;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;183834;True;92;-24.0410240918883;57.3636233789979;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;73677;True;84;-34.5043434717211;102.764173560216;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);76;645226;True;122;-38.4250228839797;42.3593649024353;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;29342;True;118;-8.11620139046443;118.089431636371;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;49924;True;388;-28.6086391735854;179.794898114608;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;66729;True;123;-102.063366164156;161.349574865278;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;60425;True;133;-23.6582313837286;142.383781555718;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);36;124848;True;349;-126.222922891809;180.072471306601;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);193;1031408;True;135;-74.0900591920322;55.1077593083473;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);887;2627243;True;239;-98.3104780626795;78.0242560597144;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;25005;True;118;-20.3374997887725;120.014342719162;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);46;6501;True;87;-8209.50490458892;40667.811997026;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);15;1786;True;86;-2674.94126544336;182636.675109198;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);34;3243;True;102;0;154938.174840803;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);179;6872;True;84;-20687.5754979518;337978.410380828;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);81;3329;True;105;-17066.109863829;1249282.4400906;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);232;6382;True;116;-501.924749182493;2089130.40151117;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);130;3525;True;115;0;2042648.208571;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;6549;False;-1;-33123.3253938425;5233154.24749369;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;2852;True;63;-4126.79027633873;95016.0258564832;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;1238;True;37;-11481.1463237933;106899.804516684;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;2301;True;69;-467.181563095692;301809.794969972;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;2690;True;66;-8325.97450352191;214871.491655299;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;2744;True;59;-67725.9024713367;227103.579419576;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;1621;True;40;-14307.8622572956;171169.230471679;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;2260;True;63;-6855.41193398612;225746.28046309;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);48;3871;True;98;-153344.997178906;554137.503464838;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;3490;True;71;0;347850.161428226;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;3410;True;78;0;279886.448751146;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);30;2762;True;80;0;481253.820477411;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);36;3816;True;92;0;410060.700181971;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);56;3834;True;100;0;677317.632698483;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);46;2610;True;63;0;796248.129222;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;2257;True;74;-110593.721128165;360327.933082878;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);52;3472;True;81;-2619.78403973377;739771.378957621;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);95;6032;True;115;-20226.777875352;798082.700414639;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);226;8556;True;145;0;1506940.26247376;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);50;3006;True;98;0;730211.119453061;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);69;3050;True;87;-118.15478993623;1175385.77539693;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);234;6796;True;97;0;1918353.75628927;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);48;192108;True;187;-66.9772283619688;230.074696046931;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);134;469231;True;179;-95.0962080332473;270.021996296368;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);247;760514;True;205;-134.336081568047;247.695778433227;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);813;1971906;True;231;-142.07200983088;319.389296888111;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1738924;False;-1;-138.302116892998;319.180687804836;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1552668;False;-1;-162.869378014706;366.406484859802;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1443576;False;-1;-242.919377016273;418.78680301832;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);794;1121105;True;123;-86.7895468859376;151.625942383409;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);305;669776;True;105;-36.3249276673997;67.5451856375301;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);221;479321;True;96;-46.5652045214396;87.2739117411703;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);449;732123;True;121;-53.5733225947895;135.504790166145;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);401;688527;True;116;-60.9684951339946;118.711215854807;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;236539;True;50;-13.8092277339228;42.3723254715984;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);73;504746;True;54;-20.6245156032024;57.1616395393394;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;29466;True;41;-11.0558460600486;35.078194259134;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;225233;True;56;-16.9113722891228;50.4113138027785;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;54115;True;44;-13.1159115213368;49.3491403462271;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;23073;True;40;-4.26464334887383;36.7382544244942;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;48670;False;-1;-37.6650964347234;347.38989043711;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);240;443547;True;100;-91.4547447070255;123.09762292109;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;121001;False;-1;-641.265046557356;1602.86266666531;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3498;False;-1;-3.08602812834715;2879.43851941311;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);901;841;False;-1;1041.35318797863;4769.08625050913;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4519;False;-1;-385.257315918918;10049.5759968106;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7585;False;-1;-155.414264610354;1570.48589160341;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3553377;False;-1;-29.8534230573526;50.9012062777122;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1318;True;43;0;36.4653973444919;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2545;True;52;-4.46770926189997;47.2104543500339;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;21430;True;99;-3.65616355741999;72.089211491484;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;26176;True;92;-6.30841058496377;76.7741167473048;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;27948;True;104;-10.6106457489521;73.6718863823314;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;14191;True;101;-12.6875077308741;80.8314436246078;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;36933;True;95;-17.8765615406651;76.5900914272232;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;22445;True;101;-8.381879981683;75.4831694112262;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;21406;True;95;-7.39588050714173;81.6153069745047;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;27089;True;107;-10.9746802595012;88.2774015587646;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;14460;True;98;-11.6723529963509;82.4121897767428;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;29699;True;110;-32.5696113152806;80.8193240865025;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;15125;True;104;-8.87991089782052;81.6207696320598;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;31235;True;107;-26.6355682146512;91.1793416754638;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;24019;True;116;-17.0556042913726;85.2379274417164;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;26187;True;110;-5.47333974559093;70.9007463620121;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;23774;True;110;-25.5155017598453;90.448229035609;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;18308;True;114;-15.780585888597;96.0455392297417;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);34;45004;True;117;-26.3660084785383;98.1150624569286;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;33021;True;115;-4.1283998214553;89.8441707624198;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;31107;True;117;-16.4517988451855;77.6806626790267;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);20;25146;True;123;-12.8763653408997;100.330620122249;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);22;27777;True;120;-28.8223654742587;78.8748535714974;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);41;51709;True;117;-33.286798718759;81.1134075179814;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;21320;True;118;-12.8955173399048;92.840309658484;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;28841;True;117;-10.1737349069017;87.9643963463387;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);40;46003;True;125;-22.5202759824228;81.5038228470017;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);43;49328;True;129;-23.9734986930686;87.6081320016871;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);55;62772;True;123;-16.5211963313583;94.8346179100128;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);24;27600;True;130;-14.216368861244;101.515739396512;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);62;64965;True;127;-16.6553702845928;85.5798338848323;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);59;61671;True;132;-20.2060893805421;93.7893891518793;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);64;66889;True;132;-41.8144361586357;77.0187414249188;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);57;60215;True;132;-23.0319178428914;75.4427735446701;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;859;True;35;0;41.937179254549;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;944;True;29;0;31.1632641503509;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;698;True;34;0;35.1562176448104;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;808;True;34;0;32.7437461802293;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;739;True;32;0;30.0241533737078;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;991;True;36;0;33.9885506736143;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;819;True;38;0;32.2416663470951;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;875;True;35;0;38.5566503506553;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1056;True;32;0;40.4687749938463;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1727;True;36;0;42.645509593138;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1171;True;40;-7.72061994600781;35.0424043046261;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;931;True;36;0;41.5571590344052;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1423;True;40;-0.109433711402061;39.442823205229;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1026;True;38;0;35.5467214948155;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1473;True;36;-2.20080115138446;40.3094352970292;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1362;True;40;0;40.4731223405507;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1363;True;42;0;41.618054536576;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1832;True;45;0;48.1521070441859;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1610;True;36;0;43.8855342549321;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2587;True;44;0;38.3578562493715;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);19;6867;True;66;-15.9959399139024;38.3251058793039;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);216;51956;True;73;-58.1114745447614;47.1405037846392;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);27;9888;True;60;-33.1276561477269;37.9231558537027;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);30;9731;True;58;-54.6166184415469;34.4761824897205;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);100;1959;True;101;-36.8095396889652;7128755.02823233;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);100;965;True;109;-26.020826212005;261511426.864375;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);754;16131;True;101;-42.8442546245956;5761859.8630032;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;16798;False;-1;-150091023.856163;3809986.80214284;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;26925;False;-1;-25.8559376470815;11.7053159466346;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3357;False;-1;-518769730.628507;531753182.773668;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;11824;False;-1;-10.0613785924244;15.8222199667303;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;18233;False;-1;-16.8059764233145;1131376.01459745;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8432;False;-1;-17.3539082284878;18120470.0382344;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8964;False;-1;-80558059.7437043;82985750.4011675;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5456;False;-1;-441828878.314355;96758450.6824946;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5735;False;-1;-36.2740622014683;99929308.4152683;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3473;False;-1;-39827532.7925963;107068604.25775;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);901;3426;False;-1;-278526753.52258;216016551.60552;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5627;False;-1;-10.980495948561;22172851.3451854;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);648;499144;True;82;-229.376142929768;209.221971500893;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);130;146552;True;63;-83.8907084158935;102.314813288813;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;389004;False;-1;-324.447882961481;203.097114605309;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;343767;False;-1;-342.68817348139;402.479253317929;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);110;68483;True;91;-274.479130763737;200.336859271686;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;269163;False;-1;-443.275728744386;402.137412318374;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;386317;False;-1;-242.77364054688;253.393159999051;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;310649;False;-1;-331.866691157736;401.060378778926;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;165479;False;-1;-736.442919308479;1051.70950292581;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;201859;False;-1;-419.426529955615;571.98929762401;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;136689;False;-1;-786.846159836129;789.749898605591;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;127549;False;-1;-1007.16209078893;1015.21060617453;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;138591;False;-1;-1004.37277583674;1152.82790028132;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;78549;False;-1;-821.567492986807;1473.7737092979;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;75399;False;-1;-1025.59724608642;1490.50058361862;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;70982;False;-1;-1401.71609206493;1835.08415142406;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;91299;False;-1;-1820.59383509157;2106.56171647454;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;59475;False;-1;-1502.76083314989;2086.15601489898;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2628722;False;-1;-203.130841805617;99.5450721099344;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);39;154719;True;48;-77.3418142702355;71.779621730879;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);146;600821;True;56;-131.217485688746;87.1493440774598;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);9;14705;True;39;-50.1203716353095;56.4884279460528;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;27796;True;46;-170.681913275535;94.9328826569317;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);20;105541;True;29;-57.4565075041058;46.5993475389154;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2685365;False;-1;-623.810101041317;79.4388928657482;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;204714;True;30;-38.8921304588226;35.0124481387788;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);18;109669;True;33;-46.521285768402;43.497681496087;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;162219;True;179;-743.762242951794;84.3217832029625;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);19;64814;True;140;-172.019272405808;163.814396698513;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);40;237698;True;140;-192.386308541783;128.35190063629;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;85330;True;275;-310.017457709168;202.298183712556;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;261873;True;86;-300.908899810259;60.2845937816039;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;93761;True;86;-173.714372668183;138.123057039442;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;210471;True;135;-247.597913975859;54.0416934722383;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);20;184482;True;105;-222.862700990382;44.5656767432591;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);127;661539;True;143;-256.320364981722;72.454561540621;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2375633;False;-1;-496.69471657062;106.248132096451;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);285;584212;True;73;-199.817124218587;110.025276002288;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);36;140997;True;225;-165.88668498905;101.192928829361;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;196116;True;119;-154.520388191191;55.7914628522547;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;210733;True;86;-182.278587157246;60.7917340829581;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);148;371064;True;76;-203.242284998161;109.859199947389;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);110;889729;True;117;-166.839010649326;39.6752972632001;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);14;42285;True;112;-129.049734884969;130.325001050933;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;329349;True;214;-748.294148843695;104.214009892362;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;36547;True;140;-189.206990149901;149.866049277811;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;278501;True;117;-233.905480818237;126.880784292508;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);27;128831;True;310;-294.596950021748;194.504823267447;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);78;450882;True;117;-179.028291242009;58.7401067192322;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);183;466193;True;263;-725.941259899922;106.104834084826;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);96;293132;True;142;-523.099511174145;125.848117477261;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);8;1632;True;63;-14682.2792807479;64666.7297040281;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);16;1969;True;68;-94292.2898783219;173386.259679254;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);55;6670;True;130;-61648.6265249278;102960.152558984;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;41799;False;-1;-222558.148198838;335479.758452069;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);500;9150;True;143;-1100291.46697261;2376699.98503447;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);195;6315;True;111;-507336.696396834;1672178.18932029;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8288;False;-1;-2465753.8726468;4630550.11972588;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);653;8180;True;181;-2005715.64983425;2999523.09751501;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);8;3007;True;56;-18064.2082262361;72887.6725485464;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);9;2801;True;47;-32652.1658316528;107239.103601545;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);19;2623;True;54;-27173.6328121815;291136.986814766;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;1984;True;52;-114512.025269623;226437.544564973;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;2875;True;57;-36205.9996701431;121645.444083059;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);13;2630;True;57;-450323.645048982;180100.301964163;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;3653;True;64;-231844.374407775;257249.940793655;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);46;3564;True;80;-205478.928843243;557756.435833413;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);36;4414;True;85;-305530.415682659;312661.462281648;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;4199;True;76;-74953.1638779198;284894.947138537;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);65;5014;True;86;-247619.540436668;588120.341434424;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;5097;True;95;-398039.936247155;569027.74427652;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);191;7919;True;123;-652877.399798696;1185542.02784009;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);46;3711;True;95;-439565.768201142;546510.030051429;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);30;2676;True;70;-251031.674219851;454802.206278488;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);172;6799;True;119;-1082543.42123267;1283106.79210464;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);222;8869;True;111;-1188711.46480726;1266669.90352834;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);375;10186;True;141;-929237.520735455;1771218.36565512;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);89;3928;True;93;-409651.813690984;1113196.37486662;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);111;4419;True;96;-513980.288377841;1277915.27370161;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);451;9880;True;121;-1350582.71001795;2349270.37666956;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);683;2327942;True;175;-296.68715536111;214.230244975024;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2171412;False;-1;-249.307419093227;283.715924141135;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1962701;False;-1;-295.208119998142;303.055988620697;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1844679;False;-1;-329.673043773414;309.452917606352;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1742694;False;-1;-317.944292551772;324.873833604939;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1548728;False;-1;-365.745863621992;387.466071924663;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1483484;False;-1;-347.063220558923;394.066019140686;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1127881;False;-1;-177.46737603098;207.936037968768;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1288999;False;-1;-194.09981783581;180.165682989993;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1382637;False;-1;-132.177186645113;130.731893234647;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1245167;False;-1;-180.36136643492;205.773201203697;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1284381;False;-1;-200.292002972354;201.665140210542;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);273;1681966;True;49;-44.7504236502723;45.8288525692515;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4510463;False;-1;-50.9821149436803;53.8865324981192;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);86;420349;True;37;-36.6704084360017;40.0358159393877;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);695;3862545;True;54;-54.2281223760119;54.9664029768231;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);111;566286;True;45;-40.863059713312;47.9826418813578;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);18;108166;True;40;-30.0787197209192;41.2481806800834;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;48242;False;-1;-234.173789842798;365.990202907257;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;378231;False;-1;-513.667534136625;475.448520596961;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;117324;False;-1;-1550.80679054682;1654.10651857528;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3524;False;-1;-1685.7275132652;2836.00885300602;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;801;False;-1;-1917.27678144242;4661.13996184032;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4506;False;-1;-4678.99138195619;9722.68277568945;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7446;False;-1;-525.657447991303;1569.15896728013;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3269826;False;-1;-62.4333694076595;54.870779930463;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1842;True;44;-6.76494035417998;33.5751092871327;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;5917;True;50;-31.221960733701;38.5660237990839;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);28;44468;True;97;-45.7939850526504;65.0604456512377;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);25;48747;True;95;-76.4558982974032;76.1092763093378;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;54661;True;103;-68.313615886515;73.3813376583338;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);16;26253;True;99;-68.1381581866933;86.0355668772478;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;100412;True;100;-65.1997779684422;64.7639200207955;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);43;69405;True;104;-46.6368828737388;74.6120623450266;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);34;54131;True;99;-74.8289982464977;76.3974288891978;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;71976;True;101;-81.0746217745341;78.6041197804451;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);41;64350;True;105;-62.8852205451786;54.5156126079268;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);38;56137;True;101;-68.2639012858494;72.9077154521096;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);72;102878;True;108;-58.2839777287376;88.1750088964972;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);48;66524;True;104;-50.5838241286119;72.6165682914806;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);70;96889;True;110;-82.8101055450547;80.6661944038245;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);24;36699;True;112;-86.4856329266662;80.6501938919547;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);70;78316;True;103;-75.2292412807622;97.4312607883142;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;79276;True;113;-109.181590281014;90.7964853856407;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);44;54054;True;113;-79.7281459084795;82.197571391188;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);50;63547;True;113;-92.0042831327779;83.5086065629179;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);44;56123;True;110;-93.5669663312181;92.8433877494108;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);78;94978;True;120;-91.8676610831716;85.7093620458984;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);70;79450;True;119;-94.3679708686889;65.3226765010204;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);118;135425;True;110;-78.3217451255775;74.5161875386194;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);162;184149;True;108;-59.3273800278158;89.5800245817885;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);238;245457;True;122;-109.696090179849;92.934222102035;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);180;182641;True;112;-76.0581951311891;88.5327983113432;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);540;542906;True;122;-104.608673342244;101.7133559341;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);81;79669;True;116;-112.971745073914;84.3732587447819;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);57;59778;True;120;-64.7016620616658;89.2130502661959;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);167;163403;True;113;-75.4514234859283;89.1097895305546;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);308;298330;True;120;-105.722046789734;94.9799154783599;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);170;165475;True;123;-101.168929711271;107.756808186199;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);160;157270;True;123;-88.5541668110129;94.9998500091341;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1549;True;38;-17.4521751127451;48.1402299135179;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1412;True;28;-11.5278084167587;35.6199614540394;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1264;True;36;-9.32849831622102;36.374309738748;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;888;True;34;-11.2988320316636;32.5527370493994;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1262;True;32;-13.2078962858698;40.9397483759624;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1630;True;34;-11.0156658470509;30.6207905597473;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1218;True;40;-1.74518348057884;38.6069416705264;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1155;True;40;-10.3513188247963;36.5129197984506;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1074;True;34;-7.86774576495064;41.0316759635226;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1528;True;38;-18.6948412392084;44.2032050895403;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1379;True;42;-2.22504728078117;38.5306013973325;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1238;True;36;-13.2946039636625;42.3046800985922;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1901;True;44;-18.6190188534942;38.455406102168;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1570;True;38;-7.69553850350829;39.0007090292146;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1339;True;36;-22.1352072355431;32.4507275170542;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1872;True;45;-2.16644354294364;39.6950194491871;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1775;True;44;-11.7622897401055;41.1627232473277;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;3234;True;50;-20.9584462267294;43.872858529808;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;983;True;34;-15.2887745224008;40.9448743128146;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;3356;True;46;-12.7240663180681;48.7030451020012;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;6308;True;62;0;38.9124589062076;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);242;58609;True;71;0;50.6790935400625;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);26;9414;True;60;0;39.1809450644364;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;9157;True;58;0;32.3491908030749;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);70;1253;True;101;0;3628238.50787484;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);107;1116;True;109;0;79287799.3519126;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);597;17113;True;101;0;1268526.42291003;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;19879;False;-1;0;11.4465731134668;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;46823;False;-1;0;1.96496815751274;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;13170;False;-1;0;1826420.33171799;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;13297;False;-1;0;13.7633825631219;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;19344;False;-1;0;3265614.77795266;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6909;False;-1;0;17457571.4067591;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7282;False;-1;0;124043012.021609;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5396;False;-1;0;85452295.2530365;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5227;False;-1;0;86607415.037262;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3751;False;-1;0;41844566.2830942;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4358;False;-1;0;92324835.095265;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6674;False;-1;0;15571656.9704888;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;665998;False;-1;167.204924570771;204.359210862858;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);208;141275;True;40;0;95.1361008351422;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;383630;False;-1;494.00012717396;523.23667194654;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;288849;False;-1;340.100120328926;381.375595183557;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;448971;False;-1;509.200410108641;538.433819951716;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;237945;False;-1;302.100175238214;330.385090077752;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;326851;False;-1;271.700231971406;310.689666707426;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;359224;False;-1;296.400618483871;321.961676233811;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;156442;False;-1;712.507091020237;836.410983697739;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;218306;False;-1;457.90073242113;512.997025562627;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;126130;False;-1;497.803742620723;592.072187453377;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;100877;False;-1;1039.68358540376;1150.42420448887;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;147601;False;-1;995.994473717545;1179.93638634068;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;67561;False;-1;1219.49399153925;1344.88819649629;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;82292;False;-1;837.900585225318;987.335698626175;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;70200;False;-1;1295.80235321168;1459.57804972792;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;99017;False;-1;1894.42528747922;2103.25856905223;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;59492;False;-1;1917.10888706716;2153.25503491533;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;46353;True;64;0;69.2815306336693;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);27;121928;True;68;0;57.786586998823;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;102836;True;56;0;65.0097350741921;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);93;194833;True;30;0;41.7057546387059;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;35972;True;41;0;141.014567150032;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);188;1009199;True;34;0;34.0056018493102;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);815;3146404;True;53;0;64.0680186327742;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2460;True;26;0;26.0699306453185;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;22053;True;26;0;41.0651188427914;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);58;150257;True;215;0;1849.97626593455;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;18313;True;146;0;160.880505008023;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;18280;True;103;0;134.167542977217;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);13;70742;True;221;0;135.507042371964;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);31;265405;True;76;0;58.0174119762117;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;5387;True;100;0;58.6124405132757;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;111730;True;93;0;53.4457061588477;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);49;481232;True;88;0;50.2735263683087;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;85865;True;98;0;28.5056329174291;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);20;54334;True;229;0;841.469759699515;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;12916;True;77;0;79.6171553133793;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;105580;True;188;0;49.2165471733019;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;126729;True;95;0;51.5813439570601;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);42;346957;True;95;0;60.6410904535904;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;12829;True;77;0;81.1939075422701;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);80;772419;True;100;0;40.1090237801941;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;4781;True;100;0;59.7033193761696;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);57;161488;True;226;0;1718.81936626982;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;10702;True;117;0;187.873755626257;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;19804;True;97;0;122.03042915441;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);34;174455;True;210;0;162.352208376887;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);10;64696;True;127;0;51.5880294617987;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;68821;True;214;0;690.87155095275;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;3200;True;97;0;59.4107514331706;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);21;3851;True;44;0;40324.0818809031;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;1214;True;63;0;149824.21718564;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);32;3137;True;108;0;128683.845531047;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);43;3189;True;57;0;247942.069445289;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);39;2248;True;87;0;874200.569728675;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);75;2510;True;89;0;1696206.89858843;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);46;1779;True;84;0;1406678.91446765;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);165;3013;True;114;0;2455543.74808251;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;1658;True;43;0;79134.2085352203;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;1090;True;38;0;126129.450841477;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1742;True;50;0;111591.833837249;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1166;True;43;0;188801.287654518;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;888;True;40;0;249379.914450144;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1530;True;59;0;104700.938145119;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1594;True;57;0;139707.03127391;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;986;True;54;0;485656.71399784;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;2033;True;61;0;223839.181126349;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;1409;True;51;0;231798.744056749;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;992;True;51;0;302915.937545931;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);17;2713;True;72;0;269957.865682533;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);30;1534;True;65;0;975372.146616449;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;1628;True;61;0;333468.987736244;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;3554;True;68;0;267351.304321323;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);32;1567;True;50;0;1060814.82639243;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);40;2693;True;76;0;765961.40720976;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);39;1688;True;78;0;1267076.17780231;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);34;1599;True;81;0;1108113.46446406;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;1718;True;68;0;868345.499104317;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);50;2456;True;74;0;1088232.00061155;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;16739;True;145;0;252.217073709786;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;18508;True;171;0;270.54408024324;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;23001;True;165;0;290.857426751581;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;25731;True;197;0;302.188363802485;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;31636;True;193;0;328.441299139297;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;35988;True;215;0;326.432013369381;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;46044;True;233;0;362.947590081299;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6496;True;107;0;105.958811976235;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;4349;True;81;0;90.8793094176313;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;3480;True;68;0;87.9318964224163;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5141;True;91;0;119.621205234529;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5099;True;84;0;109.095085498195;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1082;True;38;0;36.1326454252653;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1410;True;48;0;40.3943855769173;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;954;True;43;0;30.5534713150388;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1317;True;49;0;42.8937184347507;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1056;True;44;0;34.4851558744297;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;808;True;34;0;29.7694428548044;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);325;26470;True;59;0;128.238412062832;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;10259;True;46;0;216.653508501031;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);413;86454;True;85;0;1007.43939783816;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3682;False;-1;2452.3111266614;2703.70364827576;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;861;False;-1;4496.52828025475;4766.70619668515;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4805;False;-1;8433.58246514158;9483.53370331129;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7715;False;-1;1205.7176371873;1449.92497882231;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;7309;True;38;0;25.9697142830273;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;971;True;39;0;39.1840315925389;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1393;True;45;0;42.8995458431787;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5030;True;83;0;85.4132028380979;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4343;True;85;0;79.9885135387391;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5069;True;90;0;83.1427789613875;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5378;True;92;0;87.5050972487366;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4617;True;89;0;82.282516681605;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5200;True;91;0;89.2121586786211;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5399;True;90;0;85.8162655620596;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5539;True;98;0;90.0081300737093;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5604;True;96;0;91.6287554214224;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6468;True;99;0;99.1909272200332;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5988;True;102;0;93.3126217468704;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6033;True;97;0;90.9537385852407;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6400;True;104;0;95.4899670763106;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6094;True;98;0;92.4112914534276;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6470;True;101;0;88.8559151710934;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6942;True;105;0;97.9129059409647;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;7161;True;104;0;95.9000065816715;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6369;True;105;0;94.9009775367149;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6270;True;104;0;97.2287330460783;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6595;True;109;0;99.9202114534873;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7175;True;109;0;105.470067795046;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;6877;True;107;0;92.9610939261859;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7742;True;107;0;104.694016102971;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7902;True;114;0;106.368883280648;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7482;True;111;0;102.740211383922;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7221;True;114;0;103.619234634849;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7762;True;117;0;103.184822878774;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7881;True;114;0;113.867510570553;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7606;True;115;0;105.569576103863;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8999;True;115;0;114.396435185873;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8935;True;111;0;112.387527420843;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7912;True;117;0;107.562136522029;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;783;True;33;0;40.7904881847236;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;527;True;28;0;28.3296215156015;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;781;True;36;0;35.3564193359689;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;723;True;38;0;29.0158810932125;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;554;True;28;0;33.5343957078926;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;753;True;32;0;32.4615960993318;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;797;True;38;0;33.724795491447;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;731;True;36;0;35.4478396509545;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;725;True;36;0;34.1027896101675;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;846;True;36;0;35.8391595379899;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;999;True;36;0;24.9046784177839;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;837;True;38;0;38.0819667530837;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1223;True;40;0;42.8011349807376;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1115;True;36;0;34.3348168276743;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2343;True;38;0;34.5786728456069;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1004;True;40;0;32.8994639770815;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1546;True;42;0;41.8398532453887;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1202;True;45;0;39.7372621341847;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1577;True;38;0;44.6256884897864;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1351;True;40;0;32.1092780548581;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;7277;True;64;0;39.1322900216273;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);130;33099;True;73;0;44.1097535173565;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;9226;True;60;0;39.4634250852596;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);28;10329;True;60;0;33.4000212181035;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);82;1488;True;101;0;36918140.179799;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);160;1942;True;109;0;90512061.3950892;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);590;16756;True;101;0;2841683.74807399;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;18830;False;-1;0;12.9726173963862;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;46698;False;-1;0;2.06322640026214;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;16685;False;-1;0;247121.885750949;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;13577;False;-1;0;13.7862520665753;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;18443;False;-1;0;2112140.2028899;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4353;False;-1;0;11092012.982805;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;8035;False;-1;0;79736258.0501055;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5282;False;-1;0;78175900.7276666;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;7780;False;-1;0;37700982.8701854;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3766;False;-1;0;36763267.792331;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4929;False;-1;0;70164437.6445543;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5826;False;-1;0;47591000.9374906;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);233;208534;True;59;0;225.917790888554;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;20353;True;33;0;141.623775522426;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;387724;False;-1;468.000295173377;529.029739332826;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;255508;False;-1;324.00221195072;416.788991437828;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;452071;False;-1;482.400450517982;540.359037805587;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;246518;False;-1;315.014294874861;390.520528969268;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);308;112808;True;109;0;419.549606010874;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;332015;False;-1;266.406552876535;312.02661688426;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;164898;False;-1;680.40365375206;839.38705853652;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;230618;False;-1;451.820489142845;564.83655945962;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;143494;False;-1;426.778371696816;603.739551367999;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;112897;False;-1;953.013723430975;1126.96430352301;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;151302;False;-1;944.071691410649;1184.3798165689;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;85127;False;-1;1018.80124254748;1370.09949780855;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;84597;False;-1;805.462438696745;1092.66594801401;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;67071;False;-1;1072.81897467525;1468.19778856652;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;96458;False;-1;1771.55604056965;2020.45767846247;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;62443;False;-1;1431.19729033122;2065.46763806613;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);40;89135;True;58;0;69.2007487979968;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;82239;True;40;0;58.3350369792263;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);73;248897;True;66;0;65.3268844507631;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);66;107589;True;29;0;47.6893758478119;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;35884;True;55;0;106.724786780612;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);202;1341287;True;36;0;30.9284548078035;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);428;1734264;True;57;0;47.7421083547111;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1943;True;26;0;22.0955026865534;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;176654;True;37;0;40.4916458447988;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);27;91751;True;271;0;1410.1884425728;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;16476;True;131;0;163.218852901553;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;14611;True;118;0;109.555688045099;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;69931;True;274;0;139.479632856691;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);36;300239;True;103;0;59.2983267597436;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;11581;True;114;0;71.3527889947255;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;93713;True;88;0;47.9216377064356;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);64;607531;True;208;0;39.4598809316357;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;96508;True;105;0;29.6531435693071;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;68142;True;184;0;585.291328206559;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;19542;True;72;0;90.6039454316185;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);101;478151;True;203;0;70.9812892081409;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;139942;True;104;0;48.8894619330218;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);29;249993;True;76;0;57.2055341771851;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;19111;True;75;0;87.1513855673812;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;99152;True;199;0;84.545135791927;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;14009;True;115;0;67.198881247454;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;189763;True;320;0;980.676935861882;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;17834;True;119;0;161.467752812861;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;138352;True;150;0;102.02528170726;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);16;76424;True;234;0;141.087493844219;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;141075;True;117;0;35.601967504062;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);26;70521;True;229;0;654.883820805066;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);1;6743;True;111;0;86.4800388373468;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;4019;True;45;0;39020.1890169131;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;1197;True;60;0;153098.792274511;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);149;11183;True;123;0;131020.084585405;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);333;18730;True;73;0;304476.438201284;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);67;2093;True;82;0;1666027.08830256;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);92;3035;True;95;0;1674180.74085933;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);71;2598;True;91;0;1302911.16351978;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5011;False;-1;0;5514674.01576905;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;922;True;37;0;83492.0407136235;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1426;True;39;0;133042.355975323;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1001;True;44;0;191509.120255448;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;1295;True;47;0;196703.869923622;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1345;True;42;0;124095.19076257;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;1398;True;48;0;136493.934560164;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;1351;True;49;0;210862.997346027;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);15;1680;True;66;0;357748.814218756;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;1316;True;55;0;285849.360157459;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;934;True;42;0;294978.834515895;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;1767;True;65;0;275039.753711594;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);24;2061;True;75;0;548136.879239722;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);20;1098;True;58;0;861241.879646843;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;843;True;49;0;542462.438427965;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;1612;True;61;0;292309.528681478;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;2239;True;60;0;1101238.09208067;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);45;2752;True;77;0;816530.589824735;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);42;1681;True;74;0;1283308.56663853;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;1212;True;64;0;900223.862392591;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);66;3447;True;84;0;984102.850286909;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);86;3175;True;79;0;1527786.72374438;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;18411;True;185;0;248.898600333137;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;20788;True;181;0;263.319342978933;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;25495;True;185;0;276.137575284193;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;34667;True;227;0;298.347131269127;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;38707;True;239;0;322.348839368804;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;41070;True;263;0;329.447727421092;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);19;53957;True;279;0;348.896617554243;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;7298;True;99;0;121.801135581961;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;7968;True;95;0;77.0407943011923;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6206;True;87;0;101.931661822643;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;6121;True;99;0;120.716961184103;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;7121;True;96;0;108.215990410837;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1086;True;48;0;35.5811007131201;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2124;True;52;0;45.2097643464015;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;939;True;34;0;31.2085252334731;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1769;True;55;0;46.6153684196379;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1137;True;46;0;34.500836415752;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1007;True;37;0;29.8292884862979;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);651;49030;True;69;0;126.469476550933;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;12982;True;47;0;217.811484352649;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;206565;False;-1;992.002202195768;1159.54326803331;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3564;False;-1;2342.381702644;2732.6510436085;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;853;False;-1;4291.56503925098;4746.40145113813;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4663;False;-1;7989.97688002976;9500.46760117755;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;7711;False;-1;1186.02731633113;1482.27152704425;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;12682;True;49;0;25.8610774214999;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1252;True;41;0;40.9922764474987;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1635;True;49;0;46.6113446255289;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;5351;True;87;0;80.3178336478753;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;5025;True;94;0;75.8099281962774;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6686;True;95;0;90.2553857161411;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6161;True;91;0;86.9832640415128;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6034;True;98;0;79.7734780846344;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6690;True;98;0;90.9169165210694;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6294;True;98;0;81.1796603579886;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6559;True;100;0;93.090249103981;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6503;True;101;0;94.4467449675661;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6414;True;98;0;95.8265667418318;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6642;True;95;0;89.2065606320613;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6865;True;98;0;96.0735059445458;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6998;True;101;0;97.8610891420708;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6236;True;105;0;90.9201509715942;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;7727;True;104;0;87.3313522838049;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6981;True;102;0;99.1588173866578;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6670;True;102;0;93.7514097284929;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;7887;True;106;0;97.2956291176012;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;7246;True;104;0;97.4141588514084;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8445;True;114;0;108.915491801129;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8453;True;113;0;101.512792989327;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8646;True;111;0;99.1827921579861;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;9736;True;111;0;102.82693870712;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8879;True;118;0;105.906247445004;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8008;True;114;0;97.0290917979692;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8552;True;113;0;107.855843760823;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8584;True;113;0;105.845303232709;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8649;True;114;0;101.410093358412;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;11421;True;119;0;106.611777982379;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9711;True;118;0;108.397254286943;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;10013;True;122;0;112.409370061578;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9589;True;120;0;110.194702437353;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;801;True;34;0;38.8678360969251;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;614;True;28;0;29.8738774188974;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;737;True;36;0;34.721849148286;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;586;True;32;0;31.0552297114212;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;596;True;30;0;33.0037916768476;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1000;True;32;0;34.2016919984512;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;812;True;36;0;36.3428955560396;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;887;True;37;0;38.5755214405004;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;927;True;36;0;38.6619628252326;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;798;True;38;0;35.0319609325317;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;814;True;36;0;29.5851300610046;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1043;True;36;0;41.0810596983796;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;865;True;40;0;33.1983178785323;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;889;True;40;0;34.8619183521711;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;962;True;38;0;34.7825950408723;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1136;True;39;0;34.9980704388166;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1944;True;40;0;35.2582996322917;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1487;True;48;0;40.7391305292309;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1217;True;40;0;41.4156065592183;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1110;True;38;0;37.7912711666181;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;6877;True;64;0;38.5456006445022;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);255;57349;True;75;0;49.1823112343223;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;9495;True;60;0;40.667007256907;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;9182;True;58;0;33.9359014810317;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);80;1471;True;103;0;59.2308349531021;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);190;2494;True;109;0;111924742.738465;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);610;17050;True;102;0;1028312.45449591;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;18609;False;-1;0;3055537.0568343;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;40485;False;-1;0;4.26158995096677;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;10831;False;-1;0;365196.15220714;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;10336;False;-1;0;17.682245184075;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;20089;False;-1;0;1121056.04166395;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;6613;False;-1;0;6866431.91168571;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7030;False;-1;0;157100314.299062;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5350;False;-1;0;85150179.0495399;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7324;False;-1;0;36499235.5817864;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3518;False;-1;0;24019396.8266269;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5013;False;-1;0;72788151.1149922;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5182;False;-1;0;18728328.5712176;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);147;131421;True;68;0;224.550845494237;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);213;194292;True;56;0;89.3552871272325;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;373510;False;-1;442.000540900976;527.617862203211;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;269168;False;-1;341.715424506467;452.473905996874;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;486712;False;-1;265.200134767592;317.910329919661;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;211353;False;-1;311.329618218369;405.313011368286;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;321301;False;-1;243.105910716115;305.156670750881;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;302993;False;-1;251.602434854583;326.672282056456;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;174208;False;-1;637.556121347033;818.412302120572;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;198094;False;-1;430.103444878945;560.881064174044;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;145884;False;-1;430.267490503456;590.766358172208;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;116074;False;-1;898.438607481512;1111.74517995442;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;146599;False;-1;879.02616692033;1165.18260246818;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;84180;False;-1;974.425934111013;1348.95789833075;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;86546;False;-1;590.548318165377;794.16242238048;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;71590;False;-1;961.005266496216;1284.25783796613;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;95050;False;-1;1580.68970958096;1927.05027954838;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;63312;False;-1;1149.20693406575;1759.61158728072;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;57935;True;54;0;69.2990571911982;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;41203;True;50;0;58.1369638999608;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;114535;True;60;0;66.1601034092549;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);158;229506;True;31;0;48.3909416084239;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);53;118919;True;42;0;110.675632938619;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);133;699756;True;31;0;33.9738606686075;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);327;1275565;True;53;0;68.6025810206302;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2210;True;27;0;22.9098308935699;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;136528;True;35;0;37.5055248951112;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;108901;True;345;0;380.057317357549;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;11170;True;120;0;163.684665532444;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;92077;True;176;0;114.232366492116;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;152058;True;238;0;134.905005182497;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;263955;True;91;0;57.176990962722;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;12381;True;114;0;61.5001922283668;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;133853;True;95;0;47.8596585525954;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);62;588510;True;112;0;40.2502453690454;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);56;371234;True;111;0;40.1613186406128;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);32;82899;True;255;0;434.921860324031;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;56090;True;68;0;88.9431588923947;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);35;173616;True;188;0;66.7906226995809;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;64837;True;88;0;47.5894078670686;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);43;339061;True;103;0;60.1232328324495;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;38289;True;72;0;96.5261603021328;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);146;1172152;True;180;0;38.6588658653782;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;4760;True;107;0;101.016364060079;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;29275;True;235;0;926.743293913893;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;18402;True;136;0;156.703629318911;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;20717;True;95;0;136.844365175971;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;126396;True;240;0;162.545182011641;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);123;726846;True;129;0;48.3112963402498;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;26105;True;289;0;1299.73678593732;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;12680;True;98;0;100.697041012544;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);39;6453;True;39;0;39755.7240297887;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;90113;False;-1;0;175215.155086538;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);51;4059;True;79;0;131504.792906699;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;32890;False;-1;0;314139.637151581;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);46;1705;True;81;0;1349026.49903342;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);54;2447;True;94;0;1123540.0569829;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);140;3186;True;125;0;2247969.09159819;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3036;False;-1;0;3678749.59459016;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;1574;True;43;0;80257.4603554442;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;1367;True;46;0;101836.587163186;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;887;True;47;0;194343.241738088;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1330;True;41;0;217076.218609253;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;907;True;37;0;191488.33900724;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;1176;True;44;0;187806.492908363;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;1612;True;50;0;206168.060288342;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);22;2184;True;64;0;425650.858497932;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;1454;True;53;0;325635.956408689;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1151;True;43;0;276113.706561463;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;1941;True;62;0;212621.047498926;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);26;3210;True;82;0;341114.392704427;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);72;3130;True;77;0;1158329.3817537;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;1229;True;60;0;435672.249677537;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);14;1289;True;60;0;443589.604459876;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;1764;True;73;0;687118.966509318;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);53;2975;True;89;0;881092.354285431;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);63;2176;True;79;0;1599756.87667195;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);25;1424;True;70;0;811045.67325073;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);32;1752;True;77;0;879000.379499117;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);54;2127;True;73;0;1338309.48191168;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;22025;True;179;0;243.599377187806;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;26169;True;199;0;254.175361887766;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;34365;True;229;0;291.301844247098;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;42480;True;237;0;301.451799912003;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;55489;True;235;0;336.978852947883;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;56861;True;259;0;329.898813052148;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);24;62663;True;283;0;354.457630390544;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;12089;True;114;0;119.018743306728;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;8845;True;94;0;103.025563468302;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7411;True;97;0;86.5353497389738;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;11027;True;112;0;122.237420502227;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;10764;True;109;0;129.563053420439;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1833;True;47;0;40.2032664173966;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;5057;True;54;0;50.7205039888473;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1650;True;40;0;31.3478147741198;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2994;True;59;0;51.1281446018853;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1674;True;50;0;41.7044803097286;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1639;True;44;0;36.6729977793143;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;51042;False;-1;109.034704876055;185.446795958869;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);26;26750;True;51;0;210.928396819972;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;179022;False;-1;583.178394345044;981.961636686658;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3470;False;-1;2277.02686338622;2747.40243642894;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;843;False;-1;4031.11563712713;4768.7910182913;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4705;False;-1;7725.00428413758;9550.18950359998;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7653;False;-1;1132.63759091778;1484.76145292865;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;15509;True;47;0;20.5538297307865;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1369;True;43;0;38.1711563083583;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2024;True;48;0;41.1574024129383;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6481;True;85;0;88.8050247049864;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;5184;True;88;0;81.768188299455;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7118;True;99;0;90.8453256543358;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6735;True;97;0;87.6088931131293;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;8694;True;96;0;89.0779724405936;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7145;True;90;0;94.6513794029616;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6957;True;95;0;90.8384981068305;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7379;True;97;0;99.3349713354464;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7271;True;97;0;92.4769722287467;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6474;True;99;0;95.8800149069348;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;9130;True;106;0;82.6751818866256;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8565;True;106;0;92.008337917501;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8630;True;107;0;96.5228480746019;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;7884;True;108;0;94.927244933903;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9947;True;103;0;97.3232199657257;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8096;True;111;0;103.222729217618;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;11391;True;111;0;97.1588416629997;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9167;True;111;0;99.63680054887;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9137;True;109;0;98.2547133300498;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9893;True;117;0;103.376589344151;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10592;True;116;0;105.696578233474;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;11171;True;111;0;99.4671628100203;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;8639;True;116;0;99.9670581288212;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;13734;True;124;0;111.222044852216;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;11090;True;115;0;91.9816980436768;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10677;True;117;0;100.107282688172;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10602;True;119;0;102.484638190362;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;9651;True;120;0;100.389900643608;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10619;True;117;0;106.790416264086;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;11281;True;128;0;112.614052401919;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;12996;True;123;0;106.579404941491;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;13869;True;123;0;119.391647016129;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;921;True;36;0;40.4757375439242;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;662;True;28;0;33.2541081147883;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;811;True;40;0;36.8620236226421;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;650;True;32;0;32.0746841646765;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;592;True;30;0;32.5457839443438;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1020;True;34;0;32.7729566330728;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1009;True;40;0;36.3913720507382;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;749;True;34;0;37.0274192955936;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;848;True;34;0;36.1658235902812;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1004;True;38;0;35.984600768435;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;947;True;36;0;32.6981563134923;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;836;True;36;0;36.2003098518429;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;969;True;40;0;35.9651781841238;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1115;True;38;0;38.8097021874999;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;757;True;34;0;37.1182334564912;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1353;True;44;0;38.4025219528497;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1644;True;42;0;42.852755450215;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2209;True;46;0;51.0724513081881;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;930;True;38;0;37.3845055987172;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1173;True;40;0;34.3874309977331;
