0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;6956;True;64;-39.7711719737048;38.2811953128533;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);127;31310;True;75;-63.6216137864537;41.3182679342991;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);27;10131;True;60;-30.6858767689839;37.7864635150668;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);34;11065;True;60;-31.7051774506301;33.8766115352824;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);85;1682;True;103;-45.6959457415602;18691451.8273562;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);81;735;True;111;-729735049.554383;463527922.566283;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);643;17360;True;101;-65.293478059703;125470.5782158;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;17660;False;-1;-27.3098701909607;362081.252617273;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;31494;False;-1;-39.2546789760767;7.97304348416622;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;8333;False;-1;-52.4100030638066;1670553.0178205;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;12192;False;-1;-35.3166829866695;16.1156870505947;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;18207;False;-1;0;2023390.51842205;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;6068;False;-1;-19.4664643010379;25746390.1829861;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7751;False;-1;-36.4300526559339;120564743.60088;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5089;False;-1;-706081055.745339;97838047.4392285;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;7041;False;-1;-322653172.678078;61896716.1489821;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3405;False;-1;-154217464.206862;193596643.19591;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3959;False;-1;-226195753.691091;100367437.448649;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;4281;False;-1;-442966663.538869;46813878.6062967;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);95;79108;True;71;-156.23487790026;259.354473692706;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);72;96623;True;52;-76.6482278681637;93.8214042420611;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;390791;False;-1;-441.006346011074;232.519159083508;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;323570;False;-1;-341.569871041812;440.75623337074;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;36310;True;78;-341.828039000809;364.771196592204;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;249444;False;-1;-468.522488503286;410.544188586534;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;326611;False;-1;-505.909191088735;346.99205620146;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;304933;False;-1;-313.243459917759;407.155540342448;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;167703;False;-1;-755.880818463497;993.313356430943;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;191959;False;-1;-525.647721049803;648.96554208005;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;131090;False;-1;-623.088896780691;793.101499547708;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;131121;False;-1;-857.318759541084;1037.5346353947;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;134067;False;-1;-629.272560761914;1120.47536824878;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;80192;False;-1;-988.742501279291;1330.83563652168;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;75641;False;-1;-953.335238450928;1534.58908032878;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;63700;False;-1;-1443.61191103358;2079.89010145894;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;77567;False;-1;-1219.81931274332;1941.0801676738;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;57079;False;-1;-1561.36149127597;2329.56523141106;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);502;1537890;True;54;-146.165850389887;99.9936498678796;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;95966;True;46;-98.2055662646341;72.6665521827082;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);164;584473;True;52;-138.825976918031;86.1884134771467;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;10341;True;44;-20.8312525353307;45.3254798966348;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);2;7534;True;83;-36.9961513658808;88.794416135411;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;23283;True;26;-45.0817769688055;54.1836411150969;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);257;738534;True;69;-207.185745492697;68.2679873451005;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;200672;True;31;-89.2310779338782;30.0567393098464;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;99181;True;30;-49.2469603412633;45.1021961999007;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;62785;True;204;-109.747357084836;103.126804675884;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;64026;True;142;-110.812433187892;150.166088422035;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);29;142295;True;93;-198.540061894269;138.976834689541;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);52;229215;True;273;-729.727156412113;184.508165205605;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);54;340505;True;92;-400.661199669802;62.4775665739659;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;30757;True;108;-141.403547459788;147.614870513241;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;162074;True;119;-171.278752936776;53.5799190448015;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);86;543351;True;264;-238.762581506388;54.0890063215234;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);140;678002;True;120;-535.878881129619;53.1604403266484;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1906337;False;-1;-700.001265040331;104.002829707612;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;120039;True;84;-121.025573247903;100.475808651972;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);50;234340;True;160;-458.3147417194;69.325366006103;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;126897;True;74;-160.217157111213;50.2929221421484;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);51;205910;True;91;-128.075385666449;62.4694548089462;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);349;748790;True;103;-150.501778322894;98.3214860225772;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);15;112979;True;249;-235.27277990234;50.5331378871447;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);68;168828;True;123;-142.622172652565;148.569390964148;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;23547;True;181;-453.701975008404;159.461706576992;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);5;16187;True;122;-67.9657290212796;163.188760983021;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);102;428835;True;125;-1054.53864496304;134.839773297669;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);13;43567;True;302;-377.20226009424;221.603763992409;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);179;881472;True;125;-228.472992560449;54.5429012447202;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2141214;False;-1;-593.079338193475;95.8029032506443;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);104;208401;True;155;-267.525052117007;128.200630319083;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);26;3133;True;75;-13747.5634504546;41223.2939236109;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);25;3073;True;91;-10140.6616583875;110737.261905831;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);66;5845;True;109;-102585.778765123;128275.989518827;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);373;15813;True;139;-173992.170003069;333480.778836583;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);134;3485;True;99;-343464.247532624;1619276.67121289;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);447;8187;True;126;-2087615.96608651;2372633.9096198;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);620;8559;True;136;-1907741.41514995;3067313.2884725;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3866;False;-1;-1353186.14522515;4655861.1567089;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);11;2163;True;45;-84651.9555245754;151566.205341963;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);6;1634;True;41;-2410.75177952836;87577.4627149926;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);21;2710;True;61;-8069.03824450615;267571.444679027;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);33;3776;True;56;-50596.8603198974;279263.081217353;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;2152;True;56;-20505.8634961468;143912.094271371;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;1539;True;47;-51823.8469309713;249551.364385515;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;2825;True;66;-123225.283368719;273360.573540488;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);54;3379;True;68;-249000.440633492;651945.840112958;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;4186;True;77;-179244.716416292;416898.738152565;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);22;2233;True;63;-163787.798992155;326361.660836135;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;3765;True;76;-129209.121596246;453287.638018059;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;4753;True;80;-238532.669592051;450632.435673934;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);165;5456;True;103;-642319.469642453;1132671.74258404;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);48;2192;True;82;-159177.191184486;770518.388375655;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);60;3662;True;82;-1211611.33826362;587005.178980789;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);53;2560;True;81;-310028.503099172;742675.467981237;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);234;8694;True;140;-465628.880973674;1100174.05430062;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);322;6091;True;127;-1216244.2680337;2159516.85064811;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);90;3575;True;82;-406693.722732642;874042.060379321;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);147;5785;True;105;-514688.79183915;891409.182132346;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);201;6670;True;140;-639638.357769946;1194855.53831757;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);443;1341819;True;173;-246.870539069671;246.40802262206;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2017305;False;-1;-300.002517697304;277.876114284037;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1677301;False;-1;-286.79009504072;305.838756196754;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1572201;False;-1;-290.793315109549;339.417483801039;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1471278;False;-1;-398.193917536296;357.558935002385;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1339855;False;-1;-376.870060577081;377.082078331984;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1274039;False;-1;-405.545818172761;415.149963863508;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;975054;False;-1;-158.899715841804;212.644623382112;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1111330;False;-1;-205.482647377799;179.036087831872;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1100143;False;-1;-156.543644397725;164.373824433315;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1029115;False;-1;-196.208365712094;205.19814387007;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;1158412;False;-1;-182.481986165796;150.76081076878;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);149;789391;True;45;-38.6577483486956;45.9126597745021;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);620;3103962;True;51;-43.9780651081477;52.5652109084931;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);38;155799;True;40;-35.4977978434088;45.820444214207;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);168;875900;True;52;-49.4191943978444;56.9263267224294;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;335991;True;43;-44.9677474925199;49.1486030309351;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);10;72054;True;37;-29.0940341245521;38.1818037956259;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;25600;False;-1;-162.999050579975;353.386092955555;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;494578;False;-1;-390.239494467294;390.226166620589;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;83019;False;-1;-1439.24304071535;1687.65839528241;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2191;False;-1;-765.965639956472;2946.11145902443;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);901;473;False;-1;-929.843964948645;4736.02033207396;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;3075;False;-1;-1448.61271447338;10002.3942058933;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;5309;False;-1;-567.204311567207;1544.35026703602;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);900;2692281;False;-1;-56.8646696269959;56.8732657037376;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2376;True;42;-19.620787341655;40.5679425401853;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);1;3408;True;52;-5.53105498544206;38.4855888740278;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);20;30238;True;97;-37.3868334663772;83.369786946914;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);12;19208;True;90;-35.012541944574;65.9862598805644;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);105;139595;True;98;-96.5969296067284;69.8676700160362;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);23;31233;True;100;-40.5300453259177;68.2482030717173;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);49;67309;True;97;-56.3749393559755;73.6098501498673;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);45;61188;True;94;-68.0910328368504;75.2281488256901;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);28;36652;True;101;-62.0072298046409;76.8800761767326;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);47;56601;True;103;-63.6510436493206;74.5614426615963;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);32;40666;True;105;-47.5333364564871;74.8484761332899;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);75;90994;True;107;-62.1866593128357;74.3580539951095;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);94;110982;True;103;-72.0226241900527;88.6711067883986;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);83;92155;True;108;-88.9312741847366;77.5184840027172;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);62;67705;True;104;-86.8748521082461;92.6714859975181;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);33;39294;True;106;-68.0774604729209;70.0559904418995;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);64;74137;True;106;-65.8709852933099;76.9010907495019;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);95;99944;True;117;-77.3721383596705;100.461271105383;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);110;112738;True;106;-71.8297593095544;79.6824065406689;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);56;58108;True;111;-69.2919061612126;77.0062213855514;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);77;79917;True;115;-79.4038644901069;83.5337685487446;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);58;55904;True;117;-62.8126408185047;87.1248260076119;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);203;192579;True;117;-83.3851144160075;78.6043992460141;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);55;53330;True;116;-70.0406136749898;87.1110978121446;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);151;140841;True;112;-57.0277050854045;84.4207028167904;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);99;83460;True;116;-88.7404254949925;93.5800439768776;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);625;505974;True;118;-69.1655504352858;90.0501735173534;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);155;105611;True;118;-75.6844624025467;87.3250841495722;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);181;131698;True;114;-84.3429535640388;103.725766096876;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);147;112451;True;118;-86.8737362693859;90.2570598925345;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);261;181171;True;118;-84.8806516389254;93.809169601089;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);189;128278;True;127;-102.313005523629;86.7048871697794;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);273;191317;True;122;-103.524784396128;88.8474427373161;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);186;133268;True;124;-87.6738317604488;89.6925998983735;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1068;True;36;-4.96628658604072;38.806397352503;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;797;True;29;-17.0449743002255;32.315142932792;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1183;True;36;-10.727897707941;43.7298514637438;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;781;True;34;-10.1347072411217;36.7006894516635;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;817;True;26;-3.61898330838019;38.6862835333411;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;696;True;34;-2.54673977653476;29.9837970940935;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;954;True;38;-4.90562824958045;33.6792836663951;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1051;True;37;-21.4310179002297;41.6479854857866;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1596;True;32;-2.71368536054079;40.4220959822822;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1429;True;38;-22.0175796680563;40.290465496387;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2761;True;42;-21.1278316711835;31.3213565730335;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1250;True;36;-31.0376740016829;39.5963651569163;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1669;True;44;-21.5547749600686;41.4916989900768;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1088;True;34;-12.8585896118505;40.4347623842865;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1790;True;34;-6.38781452191339;35.5033948154334;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1714;True;41;-10.1342875396938;33.091883083632;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2415;True;46;-17.1396649086621;43.5398223135475;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;2139;True;49;-12.1463468798339;39.5382308695194;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1351;True;36;-24.4529633074586;43.5831168062852;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 40%]);0;1908;True;43;-21.9156797107086;39.8212307860234;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;6717;True;66;0;37.1735464895703;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);131;32841;True;73;0;44.2090962199905;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;9604;True;60;0;40.2042752652031;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;9576;True;58;0;34.0817237821632;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);74;1312;True;101;0;57.5858500561175;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);184;2291;True;109;0;49273906.7198093;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);589;16946;True;102;0;125800.92531075;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;17639;False;-1;0;14.3644277367943;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;38234;False;-1;0;6.2332791013936;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;17341;False;-1;0;249551.027221433;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;13039;False;-1;0;14.1621832188636;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;19039;False;-1;0;2150579.04789432;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7843;False;-1;0;8749175.76388973;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);841;8566;True;109;0;60832689.5006044;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5755;False;-1;0;75567080.3415796;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;5374;False;-1;0;70152010.7007336;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3560;False;-1;0;28357298.8481746;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4522;False;-1;0;74019296.1602683;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;6583;False;-1;0;20721694.3716421;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;662829;False;-1;146.758133875717;201.9756759686;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;18920;True;46;0;139.356501685319;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;397933;False;-1;232.619985217805;317.231488201615;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;288309;False;-1;287.393561815729;415.966420352186;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;458915;False;-1;241.227737167035;446.268441734954;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;238641;False;-1;280.756424320879;390.321140163289;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;380332;False;-1;181.064286744147;252.122156137951;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;325560;False;-1;216.821867355029;304.415416478391;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;173592;False;-1;591.233036856231;816.535550617135;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;234673;False;-1;301.566100730347;419.343723636243;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;132503;False;-1;395.608886880029;564.900767874404;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;115132;False;-1;847.811330533756;1109.24343049549;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;144362;False;-1;811.894259632585;1145.27602112759;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;85738;False;-1;546.938886755671;960.696431813773;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;81423;False;-1;701.67159313674;1028.52656185684;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;73021;False;-1;739.445406678695;1122.49990126431;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;94743;False;-1;1653.72909061951;2073.18649718359;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;59973;False;-1;1342.32837187361;1858.42766991051;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);32;79941;True;56;0;69.9908222049645;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;63098;True;36;0;57.8206120853954;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;53477;True;54;0;66.0008837488318;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);104;200128;True;35;0;40.4886305145761;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);29;66590;True;54;0;107.080664382527;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);45;247078;True;32;0;33.1386846185545;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);340;1115391;True;65;0;66.2327965006684;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2139;True;27;0;25.4638656367929;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;105108;True;28;0;36.2697866509253;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);34;89417;True;260;0;1846.46367302478;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;10379;True;121;0;182.58429308011;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);18;106402;True;159;0;97.1688606581206;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);37;184885;True;206;0;150.422225862248;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);46;357665;True;97;0;61.0914204373231;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;4435;True;100;0;90.0983167286209;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;161705;True;95;0;48.0146494942172;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);65;602222;True;88;0;38.5572687216239;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;49177;True;139;0;54.2017064272021;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);28;62794;True;281;0;484.192696256424;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;21516;True;79;0;87.410773108541;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);71;387584;True;178;0;61.2421696646587;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;127954;True;97;0;46.8540360277741;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);48;376371;True;106;0;60.9342180665303;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;14299;True;77;0;94.2597484328176;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);41;352520;True;183;0;53.4837468884727;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;5759;True;97;0;110.048180181989;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;35236;True;263;0;1041.9700949215;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;14852;True;109;0;160.063878799697;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);22;130902;True;152;0;98.4932087076685;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);22;100946;True;308;0;147.007505480481;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;69027;True;101;0;28.4780933827704;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);23;73878;True;280;0;436.08014882686;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);1;6758;True;112;0;66.0526972889191;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);37;5787;True;50;0;39330.0566906589;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);117;8180;True;94;0;179275.183128469;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);40;3690;True;107;0;111837.741425182;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);361;19677;True;70;0;312935.017959157;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);46;1540;True;84;0;1382307.23493948;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);47;1567;True;73;0;1477775.27717522;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);89;2720;True;89;0;1520303.85478858;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);293;2750;True;137;0;3718969.80484114;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;1294;True;36;0;83501.4220839941;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;1762;True;48;0;83362.2372041772;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;807;True;39;0;223270.987657408;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;1019;True;38;0;206179.999643572;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;980;True;36;0;176957.364132886;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;853;True;40;0;163585.452182868;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;1648;True;50;0;158191.061589239;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;1942;True;67;0;285124.990845591;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);10;1748;True;64;0;191800.685647081;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;1208;True;50;0;281190.493214174;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;1055;True;50;0;275288.400375034;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);26;1963;True;63;0;599346.978516334;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);39;2035;True;64;0;884927.992056416;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);15;2438;True;65;0;221753.486110295;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;1503;True;63;0;294507.749369562;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);17;1029;True;55;0;692627.364649313;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);53;2657;True;79;0;993325.232833537;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);62;2082;True;88;0;1430877.336239;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);30;1577;True;70;0;878594.284331266;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);36;1386;True;66;0;1298313.09141325;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);74;2670;True;98;0;1369896.52400467;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;21174;True;171;0;251.043146537267;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;27789;True;195;0;272.058953279248;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);13;44961;True;213;0;293.776752157426;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);14;44807;True;233;0;294.716086254734;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);16;46685;True;243;0;319.69822850975;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);21;58572;True;235;0;341.283509778953;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);25;64859;True;269;0;351.34563098376;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;12780;True;118;0;136.975218460246;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;10440;True;108;0;117.489535381171;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;8801;True;95;0;99.0926136451166;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;10936;True;119;0;131.820702861174;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;9014;True;105;0;127.361798410983;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1156;True;43;0;37.2152741737463;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2914;True;57;0;52.1875345861299;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1298;True;37;0;32.3710798989695;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2453;True;58;0;45.758640164046;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1396;True;47;0;39.7556570902196;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;902;True;35;0;31.0628816759893;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;60365;False;-1;74.2948884133589;166.703710153487;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);21;25359;True;71;0;290.625305228622;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;129774;False;-1;1004.17722629962;1384.76401451514;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;3548;False;-1;2420.28447471526;2879.84210675089;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;827;False;-1;4145.63971898686;4781.08868626636;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;4424;False;-1;8184.94088774094;9957.97699950595;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);900;7549;False;-1;1318.75601033167;1575.37913207963;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;12423;True;47;0;30.533864443397;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1074;True;43;0;41.614020274544;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1360;True;48;0;42.5412381005356;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6067;True;91;0;82.5485895782535;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5320;True;89;0;81.4443787536629;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5919;True;95;0;84.2639223665276;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6465;True;98;0;87.0759417078707;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5886;True;93;0;83.4905403802727;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);2;5140;True;95;0;88.3639342654755;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6190;True;98;0;90.688341076744;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;6361;True;93;0;92.8227974901646;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5970;True;100;0;90.128062944247;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);3;5448;True;100;0;92.0036635306849;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7165;True;101;0;94.3292917027655;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6472;True;96;0;89.2743825201642;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;6455;True;102;0;97.4161849554604;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7421;True;106;0;102.301798789265;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);4;7225;True;96;0;90.3576554090414;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8596;True;108;0;104.542348604933;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;8124;True;103;0;91.330471408759;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);5;7116;True;104;0;97.549594696326;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8365;True;107;0;93.9508108638084;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;7804;True;113;0;102.48450705557;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8643;True;113;0;109.967306022607;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8580;True;106;0;98.6617385839573;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);6;8082;True;108;0;106.928491501577;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8688;True;119;0;103.113170815613;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;10766;True;113;0;111.356804867725;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8545;True;112;0;103.728209671647;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9246;True;120;0;110.11570368737;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);7;8432;True;122;0;109.456169732179;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9343;True;119;0;100.592872210934;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9166;True;118;0;105.282048719726;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);9;10108;True;123;0;106.521204948198;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);8;9081;True;115;0;110.91828624369;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;849;True;34;0;40.7601000030588;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;529;True;28;0;27.4794249377251;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;901;True;36;0;36.8254062655179;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;773;True;38;0;26.3944868714388;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;636;True;28;0;32.97319593228;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1017;True;34;0;33.5057927946368;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;880;True;36;0;36.7320588715817;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;838;True;34;0;38.2075409080634;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;766;True;34;0;31.9417821995393;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1109;True;36;0;36.9865134247358;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;878;True;38;0;33.328199951058;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;797;True;36;0;37.1240157097926;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;913;True;40;0;35.9003188643833;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1123;True;36;0;34.6478463813839;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;2217;True;40;0;27.9205201611494;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1332;True;40;0;37.2820591043418;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1563;True;42;0;46.0162725909749;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1369;True;43;0;42.3967185235674;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1244;True;40;0;40.4654061820972;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5%]);0;1564;True;42;0;33.3606548926491;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;6348;True;64;0;35.9167541949059;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);228;54318;True;75;0;47.9604406759347;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);29;9543;True;60;0;38.8608313177729;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;9631;True;58;0;34.7112335325783;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);81;1495;True;101;0;5406156.16412196;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);92;848;True;109;0;278814946.779744;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);663;14696;True;101;0;2382298.14778567;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;24805;False;-1;0;13.4394384530425;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;38029;False;-1;0;4.92525784530624;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;9522;False;-1;0;49574661.9504185;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;11715;False;-1;0;15.217842323902;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;18617;False;-1;0;1896660.05837628;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7073;False;-1;0;4230964.00305897;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;8063;False;-1;0;85134011.27732;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;5249;False;-1;0;77355051.7763224;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6441;False;-1;0;61754810.2034452;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3586;False;-1;0;26777239.8198171;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4815;False;-1;0;74011179.2490848;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;6019;False;-1;0;10857959.574766;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;736139;False;-1;140.820079740891;201.967833398193;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);208;201958;True;58;0;87.7502924262488;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;382627;False;-1;416.007385194305;524.802289084434;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;299499;False;-1;294.403811874987;419.075375979352;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;480766;False;-1;249.600957611204;345.064897703859;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;209301;False;-1;217.606811666492;335.006213465886;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;307515;False;-1;230.426160067332;306.905590736775;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;330469;False;-1;200.010067736735;306.366608293076;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;171440;False;-1;580.883517377117;864.841897321569;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;232506;False;-1;400.184579659339;523.071452709763;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;143090;False;-1;357.058268759892;562.154427398844;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;135790;False;-1;520.165436773824;842.477826878017;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;143790;False;-1;786.292957767794;1112.03086204873;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;86321;False;-1;776.026911595849;1116.53781871638;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;85716;False;-1;665.163600293716;942.362539674297;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;68844;False;-1;990.408234103028;1448.37487911001;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;95741;False;-1;1489.69429118414;1955.84580653828;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;62762;False;-1;1427.29098793272;2103.29223264229;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);68;172505;True;66;0;71.4866471985947;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);64;272977;True;72;0;59.3656915625166;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);71;246300;True;58;0;66.9173890732069;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);70;109546;True;35;0;44.7216702908313;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;20957;True;67;0;105.484643402933;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);89;663095;True;34;0;32.2716555828798;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);297;1246384;True;61;0;64.1485449538264;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3382;True;28;0;29.775068448399;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;14537;True;34;0;38.8710840105537;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;49226;True;329;0;570.926073662878;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;16282;True;148;0;133.41036494751;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;16227;True;94;0;127.38142735999;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;76731;True;317;0;116.815331824886;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);33;276196;True;95;0;58.953952612892;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;14869;True;136;0;106.037051077594;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;54449;True;74;0;46.0945260352067;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;216777;True;133;0;55.1368591834024;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);31;240467;True;114;0;33.8157379322707;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);31;83407;True;349;0;379.294386012296;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;26864;True;71;0;92.1192589636611;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);118;603661;True;206;0;64.1328280673843;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;130131;True;102;0;45.7061115092452;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);37;295501;True;102;0;59.0441029035801;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;57715;True;84;0;98.2273756342875;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);117;984566;True;171;0;37.4710404229279;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;4893;True;94;0;98.4832207192574;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;54213;True;325;0;209.443153970146;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;8919;True;113;0;168.98013776372;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);1;11842;True;101;0;138.735667360571;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;51588;True;249;0;159.640040958081;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);31;241023;True;111;0;34.5206674817371;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);15;50096;True;222;0;528.545486329732;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;16610;True;134;0;96.8279308099609;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;4112;True;47;0;40150.4765314557;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);134;8397;True;114;0;190487.172918492;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);26;2447;True;84;0;123117.610198082;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;38229;False;-1;0;318495.349779018;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);59;1824;True;86;0;1538111.07113753;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);83;2720;True;92;0;1546457.57256173;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);198;3971;True;123;0;1984071.01943677;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4592;False;-1;0;4470695.31739453;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;2044;True;46;0;76152.5928611608;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1977;True;43;0;118439.916799608;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1072;True;46;0;242764.720974498;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;1658;True;53;0;185288.668871339;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1072;True;43;0;244664.813273229;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;1273;True;48;0;123449.600626136;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;2298;True;61;0;206955.102930166;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;1585;True;69;0;444538.336358289;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;1570;True;63;0;339475.008093108;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;1141;True;51;0;236714.133283932;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;1809;True;57;0;211036.237067717;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);27;2402;True;82;0;516944.061832561;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);42;1981;True;79;0;940079.72173491;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);22;2200;True;76;0;419434.975740437;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;1512;True;56;0;421277.712955346;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);38;2094;True;72;0;900450.342722891;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);58;3452;True;96;0;786181.438976303;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);101;3291;True;90;0;1413380.23859912;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);26;1894;True;79;0;597859.692158343;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);57;2142;True;75;0;1330712.29489347;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);202;6098;True;100;0;1731251.94461105;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;32339;True;183;0;253.129650076206;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;31727;True;211;0;259.369436609152;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;40442;True;205;0;290.074165580974;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);23;76739;True;243;0;308.172356733486;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);17;53690;True;235;0;313.435532636295;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);33;93917;True;265;0;330.782384951424;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);39;101450;True;299;0;348.407595455507;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;16539;True;117;0;132.716456997051;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;12775;True;104;0;91.6007328419165;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;8321;True;91;0;108.703390120784;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;15815;True;115;0;95.03438810407;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;14333;True;107;0;111.716223760801;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3542;True;48;0;41.0441766028955;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;5268;True;56;0;53.3722674895802;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2102;True;43;0;31.3323724966158;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;3148;True;60;0;50.1598505020697;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2368;True;49;0;44.5066160456871;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1447;True;42;0;35.7274238245917;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);581;62856;True;72;0;86.496074387301;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);48;51732;True;64;0;232.212283096951;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;165714;False;-1;370.155014776324;950.151298596747;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;3540;False;-1;2076.4490054725;2721.3913156447;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;807;False;-1;3801.72639328173;4760.9993278774;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;4563;False;-1;7316.70647156532;9613.15839305015;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);900;7532;False;-1;1065.93773885534;1455.60103101006;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);2;11926;True;47;0;35.7594417539462;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1145;True;43;0;40.3625000927385;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;2179;True;50;0;44.7962953678816;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;8331;True;94;0;91.4857483008909;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7461;True;93;0;80.7258793856353;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9387;True;100;0;81.3325192327009;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7126;True;97;0;82.0553384995156;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;8559;True;98;0;84.0978766070414;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;11299;True;109;0;88.1580797586458;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);3;7004;True;98;0;88.6505099840506;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;8911;True;102;0;88.0180992081331;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;10941;True;99;0;93.0741388737912;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);4;7658;True;109;0;93.1467847817279;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;9368;True;103;0;82.5982245374907;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;7687;True;104;0;92.6409741468063;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;8827;True;110;0;91.7784326824187;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);9;14517;True;109;0;103.77042710384;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);5;8924;True;101;0;92.7141882691292;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);6;9513;True;108;0;92.1618389993499;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;11102;True;112;0;92.0661150769761;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;14256;True;110;0;111.185582376696;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);11;16254;True;114;0;93.5367844394198;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;11531;True;121;0;102.931189362034;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;13170;True;119;0;97.406040971621;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;10410;True;115;0;91.9888536163525;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);7;10170;True;116;0;97.2829765202121;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);14;16697;True;126;0;106.746707265423;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;16076;True;130;0;87.961147294323;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);8;10561;True;120;0;109.851697050757;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);13;16452;True;125;0;90.0976920522834;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);10;12256;True;120;0;103.463404875011;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;18336;True;128;0;101.628806316223;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);16;18158;True;131;0;112.271741816766;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;13710;True;124;0;116.966455317259;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);12;13560;True;126;0;112.352123569539;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;887;True;33;0;37.5001423358371;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;709;True;26;0;34.3482369051233;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;689;True;32;0;37.6942341406899;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1047;True;32;0;37.1965385613037;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;532;True;28;0;33.1383803344872;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1596;True;36;0;35.8303142837494;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;982;True;38;0;40.6006914852227;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;964;True;36;0;35.431155955578;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;705;True;32;0;34.5342239087361;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1217;True;38;0;40.7986656852421;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1228;True;40;0;28.6371191257665;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;799;True;32;0;40.4381682316718;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1481;True;42;0;38.2923264565824;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1065;True;38;0;36.3471793779863;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1173;True;34;0;34.8116262417175;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1454;True;42;0;39.8588934880281;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1165;True;42;0;41.6625430462462;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1507;True;45;0;43.1840756299673;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;1660;True;38;0;39.7766602203478;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-20%, 20%]);0;978;True;38;0;38.0780851949166;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;7421;True;66;0;38.3340190806777;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);127;32775;True;75;0;41.3539869843555;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;10110;True;60;0;39.5299695376627;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;9624;True;62;0;32.8451770968642;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);78;1480;True;101;0;4287441.70099495;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);185;2376;True;109;0;86405438.7068505;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);573;13587;True;103;0;3519891.96463661;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;22371;False;-1;0;15.8165061962443;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;35363;False;-1;0;6.52833614210735;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;9796;False;-1;0;100111778.745051;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;11897;False;-1;0;15.4005019266274;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;17442;False;-1;0;2175347.95975454;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4644;False;-1;0;6862703.26995439;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;8337;False;-1;0;103518387.821362;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5253;False;-1;0;73206690.7645002;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4988;False;-1;0;82821233.0051323;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3787;False;-1;0;38180310.612335;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4843;False;-1;0;66239074.7772667;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;5447;False;-1;0;10831912.5017979;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);103;96856;True;74;0;205.411168092517;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;22184;True;56;0;137.535512256123;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;412652;False;-1;217.02202170157;335.0090544834;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;330494;False;-1;252.003663327547;410.519420854965;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;490599;False;-1;217.022407129417;353.807350517785;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;223765;False;-1;224.736041516408;375.628216997492;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;395271;False;-1;165.217454945677;271.089597090038;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;291256;False;-1;205.914311356151;322.127309399096;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;175992;False;-1;591.204936086948;897.567618371124;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;211162;False;-1;354.723057090176;583.413376568702;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;147140;False;-1;339.093044446359;672.104119776348;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;155811;False;-1;333.419751955299;668.469849473708;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;140184;False;-1;678.717849863841;1078.27483260089;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;92536;False;-1;554.367495714672;941.544387249648;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;82980;False;-1;671.757896643671;1190.66919766814;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;69923;False;-1;873.657053938535;1450.96738528299;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;94424;False;-1;1277.91591479532;1898.30016961331;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;64018;False;-1;1163.95669073284;1975.63352157147;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);677;1708976;True;74;0;75.8057209351723;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);33;131232;True;56;0;61.2419550613687;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);52;189034;True;58;0;69.505313500926;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);35;55578;True;35;0;46.0165401694423;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;42278;True;58;0;89.1897776944803;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;85845;True;33;0;53.1306016334679;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);292;900308;True;61;0;80.8344345238281;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;3132;True;29;0;29.9871028443662;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;54443;True;39;0;35.5446048722701;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;27887;True;195;0;158.189333319527;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;20441;True;137;0;141.034338648519;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;18746;True;95;0;146.113998242296;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;50294;True;220;0;138.877121474122;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);28;234600;True;78;0;56.2284120205594;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;23770;True;114;0;73.8619312040469;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;118243;True;89;0;44.4932015969223;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;184402;True;117;0;33.5473411631442;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);87;541030;True;135;0;51.7214035954569;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);64;166715;True;274;0;158.768353119007;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);35;103774;True;73;0;105.687241325099;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);41;258133;True;213;0;48.3914018848538;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);34;210669;True;107;0;47.723342468745;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);21;173566;True;76;0;54.3158151479385;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;21663;True;82;0;84.027198899991;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);37;359776;True;151;0;45.3579507164885;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;22827;True;126;0;115.825428454467;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;61090;True;247;0;111.846352351367;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;6289;True;128;0;90.9539565260232;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);2;19504;True;129;0;123.431270664826;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;24632;True;277;0;191.830132035408;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);88;592018;True;136;0;45.5157782899519;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);23;60979;True;323;0;372.259140686081;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;92543;True;143;0;49.5312524790985;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);14;2665;True;99;0;44995.0770801843;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);52;4815;True;97;0;133690.584191724;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);74;6177;True;98;0;131634.177212596;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);150;8302;True;123;0;232976.201057616;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;9081;False;-1;0;2344613.66726925;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);57;2782;True;97;0;1066721.27636207;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);106;2571;True;98;0;2249412.80847324;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4873;False;-1;0;5052900.64702927;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);3;973;True;41;0;97817.2743943475;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;1283;True;43;0;141272.024576495;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;1430;True;53;0;240573.609919247;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;1321;True;52;0;204285.848176923;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;1055;True;42;0;227651.723447951;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;1248;True;47;0;130670.064130083;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;1163;True;47;0;216172.017679221;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;2086;True;71;0;382488.681494178;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;1752;True;64;0;243830.159647163;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;1796;True;60;0;194574.753214273;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;1606;True;63;0;291444.125131746;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);31;2931;True;95;0;470870.866844803;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);33;1911;True;74;0;864644.956048504;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;2320;True;74;0;371419.097316996;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;1489;True;66;0;426580.96348581;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);29;1387;True;62;0;1060793.26147749;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);45;2982;True;88;0;702838.389835074;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);84;3180;True;90;0;1374525.19965109;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);36;2247;True;85;0;718983.603361892;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);40;1951;True;85;0;1018655.10986513;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);96;3211;True;96;0;1591728.80257937;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;33372;True;185;0;239.668849785095;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;50262;True;205;0;240.662834413755;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;67629;True;229;0;274.868455806551;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);21;72079;True;233;0;285.511290363536;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);37;112045;True;257;0;284.35113632475;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);36;99021;True;249;0;323.378733968048;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);59;148055;True;291;0;354.439566723756;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;45731;True;136;0;111.62954279691;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);10;19939;True;101;0;116.831142180185;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;18050;True;91;0;108.040626913603;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;18629;True;120;0;108.666253876129;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;14705;True;104;0;117.342777940503;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;9434;True;46;0;42.7579539575473;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;12295;True;55;0;52.6158661958332;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;4056;True;43;0;32.1452678578468;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;7685;True;60;0;56.9204681824683;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);1;9318;True;45;0;49.2363876469113;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;8114;True;43;0;33.7700705698361;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;58227;False;-1;131.669815826449;221.547674339357;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;19833;True;54;0;165.377004374393;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;127085;False;-1;708.423662177484;1179.22224904858;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;3578;False;-1;1878.9987859902;2747.95548740082;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;847;False;-1;3347.74901551444;4755.19962944671;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;4657;False;-1;6526.2016043582;9556.08750457856;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);900;7629;False;-1;988.592179198373;1495.97035763913;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);5;31948;True;45;0;30.7242387048272;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1435;True;45;0;40.2719322691147;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2249;True;47;0;45.0095353242157;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);4;8425;True;89;0;83.3223563147636;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;15528;True;93;0;91.7206646579774;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11754;True;91;0;77.8257092874655;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;14051;True;105;0;75.5753825449854;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;9868;True;97;0;78.4363516968232;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11643;True;101;0;90.2291562900188;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;10994;True;108;0;84.7349018662542;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);7;13197;True;102;0;78.4946690469754;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;15389;True;109;0;82.4106207740971;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;13415;True;105;0;101.307661371189;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);6;11214;True;108;0;89.5106638665418;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;17316;True;105;0;92.1168595404044;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;14241;True;111;0;103.694587772512;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);8;12225;True;113;0;88.1483713286938;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;18008;True;109;0;94.6264450931715;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;14880;True;106;0;102.572078082216;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;20150;True;108;0;87.5340444555942;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);11;15644;True;118;0;93.3484309115896;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;18254;True;110;0;88.6936091743797;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;16626;True;120;0;96.5589659582447;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);12;15899;True;125;0;93.6436254294867;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;18554;True;113;0;102.72254942976;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);9;12747;True;117;0;88.1779349506781;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;18453;True;118;0;110.886126642614;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;19875;True;120;0;96.5686624886678;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);17;20599;True;122;0;92.5663174543883;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);19;22864;True;120;0;99.2071800905836;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);13;16446;True;120;0;111.178028950033;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);18;19849;True;128;0;98.4425644043565;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);20;22335;True;131;0;88.5345716710324;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);15;17156;True;122;0;108.834500879197;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);16;18963;True;129;0;105.348443092341;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;938;True;36;0;40.9132786276127;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;570;True;28;0;26.2358842389127;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1179;True;34;0;35.9569274983026;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;741;True;34;0;32.1375043597639;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;697;True;28;0;35.69789399096;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1239;True;38;0;37.4864640914452;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1148;True;42;0;39.4964400404669;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1048;True;33;0;39.7021516582811;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;969;True;36;0;38.0038894816242;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1027;True;38;0;42.1225872022221;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1526;True;44;0;32.3852963439468;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;933;True;34;0;39.8746399386812;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1230;True;40;0;38.8956763732462;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1006;True;34;0;42.4291141608616;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1192;True;36;0;37.9066311669969;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;993;True;38;0;36.2752122027298;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1763;True;44;0;38.7635448228679;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;2286;True;50;0;48.8118397492151;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1203;True;38;0;43.3978486240975;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-30%, 30%]);0;1578;True;41;0;43.0823420128758;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;6875;True;62;0;37.2836046765108;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);239;57234;True;75;0;47.856478186975;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;9236;True;60;0;37.5526860289572;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;9689;True;60;0;32.8895772775126;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);83;1582;True;103;0;10106549.9520563;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);212;2644;True;109;0;107644557.804421;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);627;16595;True;102;0;85897.6395035776;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;17587;False;-1;0;110228.90036947;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;33189;False;-1;0;7.18361842051536;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;16728;False;-1;0;1036774.25948906;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;11323;False;-1;0;16.1128873868649;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2365;False;-1;0;54594614.7314804;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7536;False;-1;0;14826281.8873867;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);819;7703;True;109;0;108820024.617986;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;5190;False;-1;0;73964063.2147699;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;7233;False;-1;0;45193552.2378243;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3617;False;-1;0;17376867.0503035;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4750;False;-1;0;37190589.8588726;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;5073;False;-1;0;15373403.0455182;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);198;172752;True;72;0;201.575648504381;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);167;190172;True;65;0;99.0579550817062;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);336;150458;True;100;0;169.235183486839;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;378710;False;-1;222.490408815672;424.93225283366;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);164;97033;True;84;0;328.479816473079;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;244287;False;-1;206.348508415906;539.058120369919;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;343173;False;-1;156.072411477599;302.060831769267;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;345220;False;-1;187.21487522722;325.253288473424;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;171926;False;-1;516.07071924958;935.922115321932;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;216489;False;-1;289.444595439101;528.002398329389;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;141070;False;-1;287.010233279416;645.338451000999;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;120215;False;-1;355.667115843514;833.298861253282;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;133476;False;-1;384.041003465672;707.60732019514;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;72539;False;-1;587.267973853866;1247.96688277617;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;66793;False;-1;582.076251298225;1358.52127642286;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;59271;False;-1;781.133531041785;1636.45241496644;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;80923;False;-1;1189.98367169499;2077.5451385967;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;54583;False;-1;854.938656332222;1863.08751223012;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);550;1307982;True;60;0;79.5858698155649;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;102224;True;46;0;62.3812104346561;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);363;1083609;True;60;0;71.9050877290269;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;9296;True;38;0;48.0798956101866;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;64237;True;67;0;97.7022329288918;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);60;269939;True;35;0;37.9547284434222;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);351;1054356;True;66;0;69.0431774510524;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;3778;True;30;0;25.8046646200449;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;34042;True;35;0;41.3565925771275;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;43503;True;297;0;181.418274128097;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);1;4849;True;115;0;146.503406113228;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;37990;True;101;0;150.307213796752;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;37026;True;291;0;161.226593726826;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;155361;True;90;0;55.2339493479178;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;16474;True;116;0;125.962049599845;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;205567;True;114;0;48.7959359536213;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;65502;True;131;0;32.8003782329627;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);276;1163961;True;158;0;62.9062682622543;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;26872;True;310;0;536.94731706307;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);14;32742;True;81;0;105.273232569807;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;67260;True;198;0;81.4455902020485;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;136349;True;128;0;51.7076198378874;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;204617;True;86;0;57.0111054632869;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);24;61149;True;95;0;65.103968321181;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);88;667791;True;128;0;38.0821839230775;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;28834;True;112;0;115.089573226914;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;10853;True;257;0;631.387477477531;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);5;15782;True;120;0;143.586160228135;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);10;54656;True;98;0;138.420309053926;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;23953;True;226;0;170.106530383544;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);57;333036;True;88;0;39.8777092865869;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);267;823626;True;340;0;88.8731347263178;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;40994;True;125;0;110.378432722658;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;2989;True;78;0;46274.1699019298;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);70;6954;True;111;0;134133.562758861;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;3502;True;113;0;119155.506444012;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);467;21308;True;129;0;308214.049691926;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);63;2324;True;87;0;1142010.12530767;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);119;2934;True;91;0;1818658.11801846;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);145;2869;True;102;0;2462123.65181085;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;4474;False;-1;0;5565156.41399467;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;1648;True;46;0;84239.1214038852;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;1418;True;44;0;132203.51474406;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;1492;True;54;0;290570.951017867;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;1340;True;53;0;199534.871460498;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;1785;True;52;0;236893.264845986;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);12;2152;True;52;0;159578.315847269;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;1293;True;51;0;219089.838607658;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;1952;True;65;0;404029.080933001;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;1441;True;56;0;354509.323947172;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;1542;True;50;0;210695.218997502;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;1644;True;51;0;498499.69193682;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);41;2567;True;91;0;621721.083251174;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);53;3005;True;93;0;659951.802365524;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);33;2484;True;88;0;424485.946314693;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;1695;True;67;0;320948.022553123;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);87;3829;True;96;0;923078.611723643;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);60;2888;True;86;0;816579.396187199;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);147;3847;True;98;0;1711972.01266841;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);44;1802;True;78;0;859350.454329144;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);116;3596;True;81;0;1345279.51857943;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);164;5141;True;115;0;1428199.5437713;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;69480;True;191;0;221.537721267336;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);28;90964;True;197;0;238.350404432526;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;103819;True;207;0;258.105162932946;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);45;119423;True;229;0;276.789226581775;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);110;262261;True;267;0;313.54748716995;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);179;377523;True;267;0;314.100621618457;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);129;245439;True;283;0;362.435168632558;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);53;80815;True;120;0;123.095809224332;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);38;68089;True;103;0;94.5853880964848;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;41714;True;101;0;76.2440691007646;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;81900;True;124;0;108.851925479947;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);51;95085;True;119;0;78.0256616573033;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);6;45237;True;49;0;46.9849543127773;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);3;25489;True;53;0;57.454980092684;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);4;29172;True;36;0;39.0819349881011;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);7;48793;True;61;0;51.5111515176794;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);2;17698;True;48;0;37.3984868921334;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;5274;True;38;0;34.744356924158;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;43993;False;-1;115.4022924901;223.701050021305;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);44;32221;True;69;0;259.976948349537;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;97479;False;-1;705.940801754753;1265.66294423727;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;2413;False;-1;1719.96015487516;2892.9921672867;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;533;False;-1;2868.35888769457;4855.27865978304;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;3321;False;-1;5863.31878497122;9818.92419580146;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);900;5674;False;-1;855.709169337391;1533.40700813248;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);78;215476;True;43;0;29.2624511408212;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1585;True;45;0;39.4908154062525;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;3015;True;46;0;45.5240147815155;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);8;12274;True;95;0;81.444150365292;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;21650;True;95;0;83.5150111776037;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;23723;True;100;0;92.4486778957944;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16174;True;98;0;80.411357356721;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16620;True;100;0;83.2388599761212;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);11;16393;True;106;0;87.0360385330597;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);9;14475;True;105;0;75.2902531561465;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);20;28510;True;110;0;72.9278913666686;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;20494;True;115;0;66.5746426168146;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);13;18427;True;113;0;103.851342532778;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;24449;True;105;0;82.3929529717221;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);21;27568;True;103;0;74.9961922815404;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);22;28070;True;113;0;90.1406553182204;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);15;19343;True;112;0;87.7424102825831;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);17;21384;True;103;0;84.1239284944539;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;21231;True;114;0;79.0015617693845;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;29268;True;112;0;91.0549359905876;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);27;31763;True;112;0;94.9948890173413;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);16;19422;True;112;0;84.1181334431419;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);30;31658;True;122;0;90.6155256266209;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);18;19787;True;122;0;99.5365310149707;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;35543;True;116;0;107.692865526122;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);23;24894;True;127;0;92.6119531312929;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;33798;True;123;0;102.099088925205;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);25;24363;True;122;0;93.1958200347414;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);35;34884;True;130;0;68.8153545742407;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);24;23964;True;131;0;102.628695435105;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;34446;True;130;0;87.8660697357391;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;33945;True;125;0;94.0152937649516;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);34;30896;True;124;0;134.293689803885;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);36;33476;True;130;0;116.95414872253;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);31;27762;True;137;0;99.3533683466483;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;849;True;34;0;38.4572358646983;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;891;True;34;0;30.0902860544679;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1094;True;38;0;35.6246902774094;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1250;True;32;0;36.9181591105395;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;601;True;28;0;35.850035190023;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1111;True;34;0;40.7149138809315;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1344;True;38;0;43.5379323318375;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;881;True;32;0;32.7356523082409;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1097;True;36;0;37.4666584652376;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1576;True;36;0;39.1786210735348;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;995;True;36;0;39.8514212892825;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1636;True;36;0;45.923717350121;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;965;True;40;0;40.2559893892424;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;894;True;34;0;41.0076538515022;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1655;True;38;0;37.2964868933812;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1606;True;38;0;40.8813889972187;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1816;True;42;0;43.9785172206881;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;2716;True;47;0;35.6379733091194;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1463;True;40;0;46.9807538379009;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-40%, 40%]);0;1289;True;40;0;43.4729172100691;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);17;6484;True;62;-0.999700427986542;38.7887599841381;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);133;34242;True;71;-0.999610787257371;45.5764152833894;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);25;9069;True;60;-0.998252601361951;37.9415476018907;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);25;8717;True;58;-0.999748351983609;31.1301917753013;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);62;1061;True;101;-0.996265047228087;6690034.28630842;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);105;1140;True;109;-0.992032651785776;36674345.1237963;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);566;16844;True;101;-0.999887396581419;514935.304129135;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16429;False;-1;-0.999532497487745;263622.634622029;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;48928;False;-1;-0.999961823225004;1.42486071564308;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;16716;False;-1;-0.999927910976078;258827.552398228;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;15423;False;-1;-0.999966051429494;12.3040957899933;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;20461;False;-1;-0.999900942668273;320058.559023892;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8450;False;-1;-0.999861801974411;1287014.6572324;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;8714;False;-1;-0.999322606250328;38739348.3553017;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;5256;False;-1;-0.999522128142194;82348107.8082483;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7182;False;-1;-0.999722067266573;34454894.1495464;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3737;False;-1;-0.999699762090901;9357250.66072395;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4377;False;-1;-0.999269441701132;63613971.4614815;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7180;False;-1;-0.999531686305782;13070328.9672897;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;618612;False;-1;175.033317338691;214.175215651675;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);127;143457;True;30;0.405537243655667;139.575762176766;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;356394;False;-1;519.000039744191;530.487250863189;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;307100;False;-1;357.000017190352;370.95307923692;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;293495;False;-1;535.000052793883;539.67969344847;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;254440;False;-1;349.000042951666;404.720370831482;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;369259;False;-1;279.000518695452;345.691085994563;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;333774;False;-1;313.000011566095;357.522620376536;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;170124;False;-1;859.030730987913;885.45312946249;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;198040;False;-1;501.00040903315;563.050812980071;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;129580;False;-1;689.000042210333;724.149495044329;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;115315;False;-1;1093.03426802439;1135.55635256334;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;143600;False;-1;1047.34104859752;1184.54083726564;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;79007;False;-1;1067.00017082971;1291.49689059434;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;80101;False;-1;905.000614232384;1028.54652248819;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;67068;False;-1;1371.00001690816;1527.72741772112;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;94127;False;-1;1995.00707835518;2239.3995210039;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;52795;False;-1;2133.00002683047;2296.75866703903;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;23003;True;50;0.25610917678853;69.086450819142;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);33;140255;True;38;-0.855010908960836;57.5208948036212;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);75;243742;True;56;-0.26741286239932;65.1309572170064;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);54;126999;True;28;-0.164209774306142;38.1080555398349;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);95;208179;True;57;-0.872291739039259;117.29777611222;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);111;579414;True;34;-0.505050032169116;33.7215129380505;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);382;1365926;True;54;-0.00959376851543492;64.8483927639334;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2166;True;26;-0.178712593009096;22.6421551704475;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;29820;True;26;-0.0633415044580314;41.7921933078553;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);85;245578;True;204;0.926863479393937;1613.57174840518;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;12340;True;113;0.705779503893936;173.846545392574;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;12525;True;97;-0.728423668876488;151.037079917695;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;24066;True;209;0.0484227906206729;138.047586061452;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;329303;True;76;-0.310421552187959;59.8552186908962;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;5548;True;100;-0.924879344145246;63.2728991878547;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);11;117521;True;88;0.319173523839178;52.9220762028511;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);48;462205;True;88;0.87399973435048;39.2908810678221;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);113;690223;True;130;0.785251545619802;45.4812996542458;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);33;82674;True;202;-0.188202573539784;653.057483660995;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;15218;True;77;-0.0648775450256083;82.0333240673743;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);48;291668;True;176;0.233708292820355;57.0184500147856;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);12;123322;True;88;-0.518328748419103;53.1868502487278;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;314934;True;76;-0.131599390474893;59.7584920877938;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;15175;True;75;-0.777710406006179;83.7697348260433;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);46;448914;True;88;-0.0685240677876976;38.9539189190768;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;7271;True;106;-0.80881234435775;54.7340998088168;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);85;249216;True;200;-0.334372742722916;1599.72855960564;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;10938;True;113;-0.918919763490055;188.723776317843;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;12389;True;98;-0.00294400425764918;152.919584757589;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;24180;True;209;0.451506949705774;142.685151863871;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);103;661106;True;129;-0.620232651764635;44.8989837083929;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);28;72626;True;208;-0.55775174012303;731.564237977545;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;10724;True;103;0.455540289848829;77.6265288055342;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);15;2174;True;43;-0.98235849755926;38160.4353441514;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);13;2204;True;70;0.229918505637869;119173.365639128;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);96;7339;True;66;-0.991715790700035;163293.758062035;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);39;3242;True;100;-0.985990800888273;203199.275516682;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);88;12311;True;100;-0.968922381274832;281485.463674948;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);103;11564;True;78;-0.766015949550092;392141.874519705;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);172;3845;True;81;-0.989485684777371;2551717.24201924;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);266;4024;True;119;-0.992870413694936;2673496.17458268;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;2197;True;41;-0.407967061460003;96031.4272383604;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1370;True;41;-0.14749685262679;116123.959789255;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1028;True;42;0.959830414485107;183716.713272854;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;1240;True;42;0.646611415616521;148246.138423824;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);26;10267;True;47;-0.354960674119629;55959.7043298922;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;895;True;42;0.905420780137843;174402.433222023;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);8;1589;True;52;-0.326811123325867;175737.589426127;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);19;5212;True;54;0.52763363976387;91200.6744758237;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1271;True;51;0.822483631699571;274788.846650039;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;1461;True;44;0.972233192050938;175600.790311351;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);9;1188;True;48;0.604207859190278;298422.530037399;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);20;2339;True;63;0.00605823984651743;356445.94105177;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);47;2158;True;71;-0.933681741325968;1064263.35677377;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);42;11156;True;75;0.142270982797384;93330.6269823237;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);24;1914;True;59;-0.985667308785798;584561.738100559;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);55;2514;True;59;0.164456387592692;1128623.84507327;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);38;2186;True;76;0.521553789973983;869137.571634055;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);102;12832;True;104;-0.523098801971925;317405.250129605;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);72;6767;True;81;-0.955793727168717;426424.574490413;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);50;2277;True;67;-0.996228702364596;1160106.32656373;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);118;4137;True;88;-0.986438717686775;1468718.31260023;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;8234;True;117;-0.330723078609781;239.131357996649;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;11254;True;125;0.534270276098638;258.984026565616;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;12721;True;135;-0.861737339692999;273.417252420893;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;15263;True;143;-0.572683195384537;300.251727932638;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;15228;True;149;0.220170820700084;320.485311332362;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;19503;True;157;-0.216594674259701;333.777974572689;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;20606;True;165;-0.503601259320789;341.052539373815;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4668;True;84;-0.714177706145764;108.615245478981;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3948;True;76;-0.478400164040923;89.6865866047839;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;3253;True;66;-0.779798082904796;83.0212461915234;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4566;True;80;0.136749519564561;104.590572092429;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;4026;True;74;-0.781513664769714;102.762717341039;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;890;True;40;0.254771792914146;34.3555877327943;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1264;True;50;0.259493070309746;39.7412396418046;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;914;True;38;-0.340252356296523;27.5871779682756;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1196;True;53;-0.608233472149928;43.1697952119359;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1027;True;42;0.104830353103965;32.7281815050889;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;933;True;34;-0.078646713438745;27.2624248092169;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);154;16255;True;52;0.499549319734587;111.07481401918;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5793;True;38;-0.776029667712762;208.567421710412;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);74;18080;True;55;-0.735690246213083;752.50623953548;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;3716;False;-1;2567.13606198697;2703.45453672501;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);901;873;False;-1;4685.99369218899;4763.14601349257;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;4701;False;-1;8639.26628173528;9444.6810324087;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);900;7611;False;-1;1259.79268825836;1447.05438824134;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);1;9105;True;40;-0.621181122782259;22.6245185723602;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1115;True;41;0.251049710088898;35.1690830556594;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1381;True;46;-0.503595635995081;44.2148103154187;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4652;True;86;0.550504660955865;77.2782882913423;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4606;True;84;-0.0769221200965914;76.3734843185266;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4790;True;91;0.479912870321382;78.0786097556214;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4897;True;93;0.301295968378566;79.4638699546887;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4627;True;88;-0.37924036913516;79.9864061611167;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5147;True;89;0.204377574475658;81.394900490463;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;4816;True;94;0.778632946209346;81.8863190609541;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5002;True;94;-0.227814653528768;81.7916823277733;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5594;True;94;-0.927107843536468;82.1908031204355;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5372;True;96;-0.64563970437536;89.9440390314975;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);2;5020;True;92;0.552095701709434;85.7368310610558;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5630;True;96;0.921056786515311;83.7633966166599;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5444;True;103;-0.444609907197119;89.5106500994759;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5785;True;99;-0.992954806421397;86.2954635825214;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);3;5335;True;93;-0.3412976951065;88.5333332908746;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6672;True;101;0.0579813230121422;92.2758351626883;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6416;True;95;-0.805073106570669;83.1665973040345;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6002;True;100;-0.949757595523148;93.657479689306;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;5707;True;99;-0.290986229335417;90.5941149725481;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6871;True;106;0.536320669360608;93.9798430215157;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6836;True;105;0.488605738379343;95.1643922151501;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;7344;True;104;-0.192658918533781;86.2576381568964;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);4;6313;True;100;-0.59657654240568;95.2595955657007;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7140;True;110;-0.993069914166382;96.1105631192916;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7645;True;107;0.89119805856198;94.757235140484;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6811;True;108;0.782734581168152;100.8992382169;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7323;True;106;-0.968070246264371;94.9257843931625;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);5;6616;True;113;-0.890501456284198;101.272001996233;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7831;True;110;0.678898288718843;95.1777356611703;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);7;8088;True;113;-0.4051265192242;99.2532424993194;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7311;True;106;-0.209741707523233;103.548149956888;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);6;7428;True;106;-0.285103073010735;103.254176116725;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;964;True;33;-0.527679975855947;42.3790920816747;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;530;True;30;-0.566480359792002;24.2319395352262;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;913;True;36;0.0510792802325819;39.88255404393;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;726;True;34;-0.779862371170829;29.9087866727621;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;657;True;30;0.461179749789266;35.2592777849384;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;921;True;32;0.168193883806557;34.9414750169178;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;871;True;40;0.734486079651157;35.1898509634464;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;731;True;36;0.945511459347564;35.6707640417421;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;731;True;36;0.707873383400903;34.3531167857881;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;778;True;34;0.441017926410315;38.3473587317805;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1040;True;38;-0.919339385777404;27.3549304732346;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;853;True;36;0.84845945790804;39.0850339888141;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1084;True;40;-0.624843323428577;36.3461253410149;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1070;True;38;0.868377985371453;34.3601125188886;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;2102;True;38;0.537940025114426;34.3178771181238;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1188;True;38;-0.956512511687592;35.345851010901;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1528;True;40;0.624501189973439;41.626026524628;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1406;True;43;-0.0411718483274671;41.5673453478341;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1401;True;42;-0.906539620788088;45.1868971551142;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-1, 1]);0;1556;True;36;0.105010163553529;35.6646808953447;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);16;6648;True;62;-1.99987421184772;38.9969727855721;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);227;55423;True;71;-1.99988491833205;50.6162837743529;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);24;8638;True;60;-1.99745257757486;39.0810053081377;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;9205;True;58;-1.99798303656186;32.4361780262901;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);68;1245;True;101;-1.98600638284628;3751124.19837265;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);107;1162;True;109;-1.99757639504856;40102453.4639884;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);582;17153;True;102;-1.99994865246115;505481.664812669;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;22503;False;-1;-1.99993432313201;9.20245153749547;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;48725;False;-1;-1.99999871104956;1.73372886548266;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;17134;False;-1;-1.99983683228485;252959.543600918;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;14626;False;-1;-1.99882017634754;12.7800698458064;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;20417;False;-1;-1.99962530285103;320187.351306822;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;9056;False;-1;-1.99818648956632;1200663.61084379;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;8783;False;-1;-1.99981963261954;46315819.7153389;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;5494;False;-1;-1.99836310744209;85686176.2534274;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7609;False;-1;-1.99919394962452;26790130.55443;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3721;False;-1;-1.99885708279854;9400772.61609776;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4442;False;-1;-1.99713618866966;54315772.471553;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;6943;False;-1;-1.99982342496506;14134394.0330584;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;644285;False;-1;174.03399680929;210.907544329845;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);100;119132;True;33;-1.47573453536059;133.800151869048;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;366780;False;-1;518.000028595328;534.60849928412;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;319204;False;-1;400.000251717866;453.056367763904;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;405863;False;-1;534.000029750168;538.619101217537;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;268093;False;-1;394.000508127734;479.840593391613;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;376296;False;-1;278.001799676568;333.161336332214;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;344084;False;-1;312.000021295622;343.672479684173;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;174938;False;-1;860.00004670769;888.074682556104;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;207152;False;-1;532.000155491755;568.500593148449;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;141553;False;-1;650.000029094517;674.866106479214;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;102114;False;-1;1076.00138440728;1151.80903390984;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;151717;False;-1;1048.00197836012;1184.00440589982;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;82403;False;-1;1274.00001657382;1344.38632586268;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;81742;False;-1;670.000027604401;778.481528183846;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;71654;False;-1;892.000477800146;1297.89466396917;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;96031;False;-1;1994.00244185887;2235.47294617378;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;54233;False;-1;1956.00157035142;2204.27021955742;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;21758;True;48;0.472158959355279;68.4375455794594;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);50;215080;True;44;-0.687141220405298;57.6672722738621;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);72;238143;True;60;0.915960913019237;64.7766870824224;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);126;251551;True;29;-1.32950009933184;41.0347637923178;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);76;160880;True;61;-1.5530021318947;117.709719691844;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);152;800365;True;33;-1.67122835464367;34.4409477795384;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);515;1950147;True;57;-1.62414612976096;60.0575258250432;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3982;True;27;0.041741645914382;23.582514445193;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;37977;True;25;-1.28513028998167;36.4548215751684;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);85;247551;True;202;-1.83452961213632;1594.7331674019;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;19845;True;128;1.1254443168293;166.938799434641;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;17727;True;99;0.696595797639618;143.358350992422;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;25222;True;201;-1.66206204875468;134.881160417602;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;331542;True;85;-0.80178033877247;59.719943480129;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;6098;True;102;0.330082092587874;62.6934299615737;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;141331;True;88;0.00514170155168592;48.5385959646577;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);40;399941;True;88;-1.15953225603305;38.216978159809;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);53;358896;True;125;-0.70010271607903;40.3218760274449;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);26;68451;True;206;-1.93954566490815;777.357238338433;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;15730;True;77;0.0984530896406868;74.8735772799445;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);34;202592;True;180;-0.115348951013456;61.1234070801807;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;134215;True;88;-0.520285469722136;52.3047338551591;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;332570;True;76;-1.23284943552355;60.1183943682497;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;14191;True;77;-0.315593692621027;84.1161026286953;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);44;452636;True;93;-0.929314687349514;33.2993162212947;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;3260;True;95;-0.634786836167232;97.5675370427004;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);83;249422;True;204;0.0471777972053633;1599.01457978804;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;10858;True;115;-1.15948478838405;192.118205080321;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;16407;True;107;0.00643613748552108;161.220212065647;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);33;171871;True;200;-0.404809226470445;182.345257363592;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);16;132794;True;106;0.0492271818449848;33.7139279368487;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;69161;True;206;-0.0994987590701779;752.854120185608;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;6331;True;105;0.330392167126011;76.7336867630765;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);15;2177;True;43;-1.96613953074726;38120.1711656292;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);13;2206;True;70;-0.500043540494537;119044.480789377;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);109;9582;True;80;-1.88031046459466;144820.722350182;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);48;3783;True;98;-1.98570283129146;210719.739725837;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);75;7104;True;96;-1.98484280704746;441998.083779226;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);118;5074;True;85;-1.48231840854619;1225325.71562902;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);173;3865;True;81;-1.97762114367337;2532165.12160541;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);266;4023;True;121;-1.96021318620081;2679172.80290233;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;2197;True;42;0.667406263140685;96031.2557945895;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;1370;True;41;-1.33241812853721;116123.927866926;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;1028;True;42;-1.65677143244854;183716.673683816;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;1512;True;44;-1.92198086153808;123307.912048932;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);25;10341;True;47;-0.529654111028488;55752.0580023582;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;902;True;42;-1.11013686242985;173119.324977665;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);8;1742;True;51;0.297194942039062;175893.462454387;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;5213;True;54;0.535766694944243;91184.7376485588;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1297;True;51;-0.231450381796551;272333.907022873;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;1461;True;44;0.443111116272915;175600.80722825;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);9;1188;True;48;0.714507735667056;298422.498954929;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);19;2338;True;63;0.0615907572496639;355889.554082717;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);47;2492;True;77;-1.34980803325298;886469.83525034;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);41;11155;True;75;-0.173070262266821;93384.8005230812;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);24;1898;True;61;0.123508046438689;585562.465396113;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);55;2469;True;62;-0.169396703210378;1144336.82890901;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);39;2186;True;75;-1.09517504232711;869137.45843279;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);95;11948;True;97;-1.70000625946559;317236.363637886;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);71;6769;True;76;-1.54789792352724;421254.620978891;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);51;2327;True;70;-1.97275182044727;1139356.10085947;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);117;4147;True;88;-1.98329637571391;1465355.49273318;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;9603;True;121;-0.394926757735632;247.291831198444;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;10535;True;129;-1.31001324360725;261.979314941658;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;11900;True;137;-1.27964298393561;271.634759572529;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;14015;True;145;-1.41772539700276;304.732825328355;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;18257;True;151;0.0372395040640789;323.100527862835;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;19726;True;163;0.112093271739824;325.907744217575;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;18773;True;165;0.599397527333069;341.098603662662;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;5313;True;93;-1.62558025104254;94.723268856627;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;4419;True;85;-1.71216433109351;88.6563177781158;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;3518;True;72;-1.65984602442935;76.3345458935003;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5052;True;90;-0.624872309446741;91.3161326527663;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;5266;True;81;-1.68325896546396;80.3376031498173;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1347;True;49;-0.24947560310805;30.5271740219304;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1522;True;53;-1.29429231364946;36.1795814605905;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1129;True;38;-1.57755952867566;29.3637410802605;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1452;True;57;-0.586173073661594;36.2317569378211;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1059;True;49;-0.556049444971629;33.1840671926232;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1070;True;38;-0.235609932912332;27.8032210563823;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);145;18490;True;57;-1.90178754921154;108.685613949798;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;9011;True;45;-1.93841623884552;180.029407074451;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);75;20826;True;58;-1.38120963581894;699.398748156293;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;3732;False;-1;2566.27965076467;2703.43325399344;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);901;871;False;-1;4684.39734080452;4763.17883891116;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;4705;False;-1;8638.03954886274;9443.6687441258;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);900;7707;False;-1;1259.65755449499;1445.46780904168;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);1;6944;True;46;-1.86624413536221;26.3391373872744;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;957;True;42;0.536133593197974;38.8123021152115;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1403;True;47;1.01859593997644;43.3757668257614;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4771;True;88;-0.289297769912191;78.1108013748769;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4390;True;88;-0.19418265213919;75.1282636947972;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5244;True;98;-1.47259802532969;77.9921983842224;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4741;True;93;1.10810454986436;82.5186327486019;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;4982;True;93;-0.341442612158806;81.0381786194038;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5083;True;99;-1.61569668707237;79.5154465259261;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5138;True;92;-0.0256791385010253;82.543020093149;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5268;True;94;-1.94995056835467;82.8132048359888;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);2;5152;True;97;0.807567800771244;87.200109359032;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5438;True;97;0.9539868305223;86.4758957307094;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;6137;True;101;-1.2605253678097;77.1892761737646;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;6006;True;98;0.201065369975318;78.1553858419897;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;6060;True;104;-1.57008494602986;88.4136113518177;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5811;True;101;0.59402861194407;85.2946976400123;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);3;5813;True;101;0.977720669926014;88.6649339228736;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6270;True;104;-1.45130942736348;94.9135928863831;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6132;True;99;0.886931147839376;86.9201749491518;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6263;True;105;-0.311577041778516;90.7760666484168;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6153;True;101;0.0111505910806127;90.1265849915146;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6667;True;105;1.0585524901089;95.1974970378236;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6450;True;104;0.601028633583816;97.9381068695413;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6435;True;101;0.880805547759312;88.4218651324287;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);4;6365;True;108;-0.024553419102241;99.4572380922868;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7755;True;115;-0.394895623621948;102.497347290634;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7549;True;111;-1.38647229382138;89.1956110679359;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;7146;True;106;-1.15936014762118;95.3851001962108;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;7011;True;111;-0.841221928056898;97.3517798601743;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);5;6921;True;113;1.68775739692513;97.8034577498822;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7936;True;115;0.541913690297824;99.8968978082806;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7453;True;114;-0.763050048967381;100.068020488625;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);7;8109;True;116;0.537000089202542;96.8898806533823;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);6;7999;True;116;-0.240100492835092;96.282526656299;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;828;True;34;0.282995299567932;35.7540180769473;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;586;True;28;0.245444333295079;24.0758882898023;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;735;True;34;0.0896548787549394;36.3637304434485;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;692;True;34;0.0694562988679186;28.2926263995687;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;574;True;30;-0.587990763870995;33.4387215965893;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;685;True;32;0.73146481566665;31.5505933091178;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;864;True;40;-0.75235006900148;36.7265450211008;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;714;True;34;-1.09010295154997;36.9659995736131;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;871;True;32;-0.111961781099421;36.3474168601655;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;887;True;38;-0.86816017835781;35.530685775107;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;917;True;36;0.702647457226481;24.3795468245206;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;984;True;36;1.011041135998;42.8505137490443;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1505;True;42;1.58064984510683;44.8930347713343;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1127;True;38;0.311552559170664;36.6352372089712;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1263;True;40;1.25275202246977;35.0808652917911;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1179;True;40;0.539385156025824;32.7008938078592;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1410;True;42;0.792432448264413;42.454172018515;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1158;True;46;-1.17935708126955;38.9502380442944;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;1302;True;42;0.82019699775623;41.4418171110977;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-2, 2]);0;889;True;36;-0.71174209132406;31.6482488408179;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;6683;True;62;-2.99535110313229;39.2923501410078;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);199;49266;True;73;-2.99984595179551;48.7434127758111;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);26;9079;True;60;-2.99776560533688;39.043229608949;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);26;9332;True;58;-2.99941744375947;31.5775720311731;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);69;1242;True;101;-2.97688427845802;3760978.3317257;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);109;1185;True;109;-2.99325218237622;39367303.9519361;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);595;17454;True;101;-2.9993574321267;497029.164674888;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;22015;False;-1;-2.99996724352239;98170.7086833688;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;45393;False;-1;-2.99995662365107;3.51707279527694;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;16759;False;-1;-2.99946522060757;258344.946120344;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;13232;False;-1;-2.99881114996914;13.7333756696679;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;20595;False;-1;-2.99974055495101;316520.645948034;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;9408;False;-1;-2.99981465935698;1156069.74843284;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;8442;False;-1;-2.99982047639779;39773120.8933352;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;5056;False;-1;-2.99359709210396;80625316.2789707;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;6960;False;-1;-2.99885485600627;31313579.7234823;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3733;False;-1;-2.99841209594086;9370009.2182213;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4567;False;-1;-2.99563351459598;62872373.9330531;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;6270;False;-1;-2.99996966868638;16395680.5017575;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;645114;False;-1;173.047728939935;207.981718946438;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);114;126514;True;33;0.259707719674198;134.453058122264;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;345022;False;-1;517.000048955902;523.482480714008;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;264435;False;-1;357.000056248158;430.324142382547;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;394914;False;-1;533.000010552816;538.97286643341;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;242312;False;-1;393.002917732113;479.22759335394;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;293155;False;-1;355.000042577274;379.672276715651;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;314440;False;-1;277.000022790395;314.322886078071;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;177516;False;-1;723.000168582425;751.037077064037;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;203169;False;-1;479.000125968829;559.93953562401;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;128868;False;-1;649.000048274174;678.237865387421;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;95122;False;-1;1091.12527490786;1154.40694411992;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;144329;False;-1;1047.03792466691;1184.36878285499;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;80804;False;-1;1091.00007538404;1287.49548362099;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;80608;False;-1;871.000611820259;1000.13471590389;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;68376;False;-1;1157.03731091322;1355.33078998099;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;94384;False;-1;1993.00038793404;2173.02445177093;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;53625;False;-1;1903.01084778924;2118.82966336794;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;14275;True;50;-2.35125402703474;69.678560401705;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;115515;True;32;-2.85417517733489;57.4201770131057;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);65;212277;True;62;1.1291213790556;65.4520313700518;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);126;188034;True;30;-2.54941045192509;49.3459023002567;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);11;27339;True;49;-2.71287438353192;109.33644728019;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);151;992148;True;34;0.771763371197397;28.9594719878761;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);162;462025;True;51;-2.50023760902706;79.0662998673814;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;4030;True;29;-2.8276430702897;21.5125698643813;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);19;156191;True;30;-0.0629377230363608;35.044497924122;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);139;258145;True;198;-0.945275017966179;1521.4404872639;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;12939;True;121;-2.60823560115333;180.210494521322;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;20812;True;99;-1.28922365526167;142.240924878056;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;23926;True;203;-1.79149168487242;138.359352533979;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);38;300924;True;76;-0.989091042424129;59.7150098860397;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;10012;True;108;-0.685878184477742;56.8841794887482;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);9;94715;True;88;-2.05428575680325;55.2279574286166;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);62;576520;True;93;-0.998417438007154;35.1780614482398;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);14;108826;True;97;-0.996905731035818;32.7406776997516;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);28;74867;True;210;-1.1476011919545;713.36538664945;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;22645;True;80;-0.882703937535502;78.8810132745403;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);58;343454;True;180;-0.863786515716364;58.5007233351138;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);17;157237;True;89;-1.08085146736393;48.5977188081729;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);44;344632;True;101;-0.821225329219003;59.1492176634579;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;13858;True;75;-0.660209145238721;82.8645657250359;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);41;405186;True;93;-0.997859236783282;32.5649163956462;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;4912;True;101;-1.57050803516549;64.1305701543079;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);86;255449;True;195;-1.60409638034371;1555.59290416742;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;14238;True;117;-0.0355123193168607;165.146650463731;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;17920;True;109;-0.838006248622204;128.194330564518;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;26767;True;201;-0.987080243410114;131.691134222833;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);13;110176;True;106;-2.83740905199079;33.4118204584668;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);12;31352;True;197;-0.947735299331944;1574.76785326805;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;11115;True;103;-2.97953845559598;88.3852256323377;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2177;True;43;-2.94678568558152;38123.1959516938;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);15;2209;True;68;-0.606298896300745;118645.69420994;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);119;9581;True;81;-2.84684410777262;144798.503091592;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);51;3793;True;97;-2.98456913418349;209361.068644057;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);80;7113;True;96;-2.97920422441289;439563.479631732;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);123;5059;True;85;-2.8223512758605;1228884.62815321;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);173;3907;True;83;-2.99254659935485;2495372.31605978;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);276;3923;True;119;-2.93163297322189;2624026.23292244;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;2196;True;41;-0.24531233089292;95963.9604288184;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1370;True;41;-0.612393502896835;116123.971445852;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1034;True;48;-2.82240100289807;182761.937617254;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;1240;True;42;-1.33605787173661;148246.07271332;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);27;10378;True;47;-0.721305299420518;55726.2908167826;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;896;True;42;1.66569412437533;173679.23921217;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);8;1591;True;52;-0.828592824669831;175676.531904028;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);21;5212;True;54;-2.54266951863778;91075.0573916617;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1614;True;55;-1.09213629182993;219957.766736192;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;1466;True;44;1.48538020182651;174918.441867792;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);10;1201;True;50;0.410629100823137;294692.24027772;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);22;2378;True;63;0.817717551168854;356781.894953542;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);50;3466;True;87;-2.97805150597266;648021.714540322;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);45;11156;True;75;-1.82847876605973;93469.5964081782;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);25;1853;True;58;0.823534284636161;602305.012087011;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);59;2469;True;62;-2.30131468144307;1144336.92553931;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);41;2266;True;78;-1.66441693653558;838417.395039647;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);96;3352;True;97;-1.88789203431825;1368899.16512951;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);63;2429;True;75;-2.50425820402068;1191463.56616497;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);52;2242;True;69;-2.94684586485235;1170397.50567453;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);124;4191;True;90;-2.96413244491635;1453831.88555117;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;10306;True;123;-0.897598435123264;248.651163656946;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;11043;True;129;-2.18384168259047;261.195956900474;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;13194;True;139;-2.5983529293902;275.275933615841;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;17601;True;145;-2.3563152604533;300.006717857505;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;18046;True;157;-0.995653645133439;311.319103990416;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;19368;True;165;-2.27123981773445;330.934469881639;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;20728;True;183;-0.714910177381202;326.801112655065;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;6162;True;102;-1.77904209158339;108.56156814443;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;4990;True;80;-2.90170339024705;77.7362673603756;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;4026;True;72;-2.80302419411159;67.995480362032;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5224;True;93;-2.5975116098288;111.911622693049;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;4867;True;93;-2.1993663251397;95.2408066319337;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1178;True;42;-0.824071354150805;34.6467862533477;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1657;True;59;-1.09152718172014;36.7958440504365;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1307;True;43;-1.2040994941276;28.9310140894061;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1482;True;58;-1.4701318249433;41.8116938021114;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1004;True;49;-2.72989047678648;32.8531289099373;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1053;True;40;-0.967477561890836;25.9298766511658;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);387;90074;True;66;-2.04766602024793;31.497415941187;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6030;True;42;-2.29359732628502;199.027453716316;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);90;25594;True;66;-2.84266060210888;691.413145283076;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;3742;False;-1;2567.15917068634;2702.93794749999;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;863;False;-1;4683.37194367888;4762.92859670219;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;4591;False;-1;8638.94688245372;9459.19720262523;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);900;7557;False;-1;1269.3495049916;1448.25246316323;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);1;8707;True;45;-2.68205587737358;29.3692382456605;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1086;True;41;-1.50861398061207;40.3313000078702;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1558;True;50;-0.65785738530469;42.166432358036;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5332;True;89;-1.91755903182438;73.9794062220481;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;4416;True;86;0.535658571652909;76.9588960462565;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5232;True;94;-1.90175463766873;81.0082626825412;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5238;True;94;-2.1101315920754;77.1133089816126;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5187;True;94;-2.34646143361296;80.1354355511058;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);2;5167;True;94;-2.85529123333064;81.3873440506567;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6320;True;96;-0.18326137269999;74.7907123310654;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5651;True;100;-1.56297361504425;79.1394927559123;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5589;True;100;-2.654943971734;80.288941476772;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5826;True;100;-0.974949067446845;82.247791003807;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5770;True;102;-1.71353581674096;81.352068639202;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5695;True;97;-0.461969759064712;81.5299078069871;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;5871;True;104;-0.319477822314704;92.1172592638278;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6211;True;100;-2.76513009321183;83.7811496713869;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);3;6049;True;105;-2.89713633428194;84.8610062851366;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6913;True;109;0.80836868184077;89.1596161888301;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;6714;True;102;-0.564148573933239;82.0502706288653;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;7113;True;108;-1.67024744705774;89.2729677683744;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);4;7132;True;109;-0.13309889525785;87.0043765917077;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6791;True;111;-0.694578250727885;93.7510192773127;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7039;True;115;-2.00923046237288;99.0678138078238;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;6791;True;112;-0.926305780152933;96.001709752375;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7081;True;109;-0.252432799549975;94.4704361144346;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7870;True;120;-0.984093290746256;91.1561222264651;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;8030;True;116;-2.78151215137053;88.0177872742584;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);5;7175;True;111;0.395001139210072;97.2385000276375;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;7731;True;117;-1.97576524176438;90.7549962226489;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);6;8311;True;114;-1.88585573476081;85.7659324014711;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8457;True;119;-2.08234461354201;94.5466447682456;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8642;True;119;-0.75699566665897;92.575853539957;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8403;True;118;-0.671740566227464;96.9133622987882;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);7;8448;True;118;-0.0582956704582536;95.1987301177108;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;719;True;36;1.17247366447583;36.3019232651617;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;688;True;28;0.591504728231349;30.8512477893033;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;927;True;38;-1.11490989202396;31.9479845383253;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;789;True;36;1.00770749524595;27.4481975606223;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;572;True;30;-1.84849476481252;33.1092461535802;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;756;True;34;1.28663100315567;28.6856870173123;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;863;True;38;0.410639297874011;37.0372795579828;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;776;True;36;0.113126709644276;35.359429032045;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;797;True;34;-2.51958172280322;34.0837715332773;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1103;True;38;-0.0553037985485529;38.5714472262739;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1012;True;40;-2.2851481667185;31.9855164507362;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;990;True;34;-2.81792021906838;43.7323311730067;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1214;True;40;1.08968831975464;38.9485712497739;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1147;True;38;-2.61339189932374;36.1947967392321;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1614;True;40;0.0470929290387281;32.2513750320156;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;986;True;38;-0.350909582036971;35.4364530213729;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1665;True;40;-0.87550556560769;44.6933231312526;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1649;True;45;-1.69125845594856;43.6304346785128;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1161;True;42;0.600209429673948;43.7110419002699;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-3, 3]);0;1401;True;38;-1.04506535643948;30.4228936291266;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);16;6500;True;62;-3.98673552646615;39.1097198512049;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);128;33455;True;73;-3.99698365107038;45.011220721264;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;9414;True;60;-3.99530050530811;39.4324636225951;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);28;9494;True;58;-3.99715147167312;33.4538342867583;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);69;1233;True;101;-3.95379995552534;3800915.94898151;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);108;1179;True;109;-3.9714130796359;41602594.0982826;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);601;17372;True;101;-3.99992803484198;499050.698130044;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;20528;False;-1;-3.99945969879602;210558.08927377;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;44654;False;-1;-3.99990894272919;4.46758024614332;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;17129;False;-1;-3.9997441023587;252989.252217798;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;12755;False;-1;-3.99926413223113;14.3170733563384;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;17485;False;-1;-3.99841576814578;388641.437645795;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;9381;False;-1;-3.99616277217686;1160316.53796061;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);839;8602;True;111;-3.99903758615211;55906553.48658;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5115;False;-1;-3.99801531806496;75283168.3768681;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;5375;False;-1;-3.99994353577492;66095399.9344215;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3482;False;-1;-3.99298123269946;9413650.16346715;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4481;False;-1;-3.99851128458907;56051802.2106512;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;6477;False;-1;-3.99711958691344;17560816.4218944;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;650912;False;-1;172.737292874948;208.069768827206;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);47;53524;True;31;-0.834695557521049;132.315814259654;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;363124;False;-1;516.000018987805;528.533778904649;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;327453;False;-1;354.000045020133;385.548949254685;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;406895;False;-1;532.000112082809;538.474258198999;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;244894;False;-1;346.000724367798;399.310525830015;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);354;150663;True;63;2.45116635712384;343.764045532763;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;349106;False;-1;274.000507302582;339.229516376979;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;146561;False;-1;746.000708326698;812.994195020758;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;200098;False;-1;574.0054515861;734.204516161728;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;137087;False;-1;648.000157471746;671.407086958626;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;104339;False;-1;1088.20334954197;1170.66296339604;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;149171;False;-1;1044.08416334544;1176.50708878371;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;83222;False;-1;1064.00015006959;1198.15203045979;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;81151;False;-1;902.002354353667;984.898830715553;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;71873;False;-1;1144.0087937899;1347.98935753389;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;95519;False;-1;1992.00070678443;2234.37132186523;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;50719;False;-1;1910.00037341937;2193.65445034756;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;13001;True;48;0.743588289592223;69.6226062225045;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);10;44854;True;36;-0.610021425695169;57.0881563100121;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);22;76926;True;42;2.26745633234617;64.5103602685858;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);100;204321;True;33;-2.01463122573431;39.1490186030815;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;46374;True;49;-0.839775535669073;96.1650585209972;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);86;460491;True;35;-1.97225300873269;33.8258260040583;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);104;318014;True;52;-2.08139526009625;79.8959842679467;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;11027;True;33;-3.63894626481409;16.2001009574779;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;126025;True;34;-1.86370017745704;36.2723647962601;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);82;240744;True;202;-2.12955076905412;1606.17160127862;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;14444;True;132;-1.37083404854445;171.21837439858;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;12508;True;107;-1.90670167277879;158.03417291833;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);22;120869;True;205;-1.56776509320725;167.605326965291;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);35;282455;True;82;-1.99113005399291;57.931560990953;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;3097;True;100;-2.75382471771623;101.542950133693;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;85331;True;88;-3.55564891898802;56.7087843065438;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);39;400430;True;93;-2.22475579670852;32.3356473248002;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);51;348558;True;131;-3.02046837239548;38.5178839567234;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);23;62044;True;192;-1.99668266251529;836.361692007213;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;23089;True;77;-1.9554227329583;85.9415147622218;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);47;284037;True;176;-1.73975450160902;56.6149056247902;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);11;106956;True;94;-1.95387603712914;60.835322749158;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);38;305883;True;80;-1.95121370998733;58.3748665431302;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;27990;True;75;-1.80740663772794;83.7599786261436;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);56;535566;True;88;-1.98529586940319;38.5006870466562;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;4295;True;100;-1.99116588010973;67.6733582648062;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);84;251552;True;197;-1.90151404957358;1602.90786281657;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;23457;True;130;-1.36432193935119;158.729088109;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;19961;True;107;-0.944558877006433;140.340454855367;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;21059;True;203;-1.16036279460432;143.295291511297;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);17;141284;True;98;-1.98888838290651;33.6639725051559;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);12;32063;True;183;-1.51638004161249;1538.53452893994;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;16480;True;102;-0.979934483291551;92.0698563974477;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);15;2164;True;45;-3.9838761165663;38257.5698579571;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);13;2190;True;76;-0.103234655271859;118724.74392168;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);111;9567;True;77;-3.70505885766123;144977.512367272;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);40;3146;True;97;-3.99913721904118;206948.875885927;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);91;12120;True;101;-3.88168316328976;284989.604909882;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);105;11470;True;78;-1.17145669794244;394994.801692646;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);174;3873;True;83;-3.95293287185623;2518977.81925831;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);263;3885;True;118;-3.84971566118752;2675206.38179776;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;2199;True;41;0.63598714053444;95865.178272746;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1370;True;41;-0.44329976590504;116123.974321073;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;1881;True;47;-1.22906087675554;108338.595938349;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;1246;True;42;-1.87796412402669;147339.316532973;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);26;10434;True;47;2.00344654359084;55528.6510324819;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;886;True;42;-0.304425849721034;176206.635186336;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;1588;True;52;0.0392805459160734;175737.558860144;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);19;5212;True;56;-0.701356502576432;91067.309046267;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;1272;True;51;0.45894191435489;274381.625965696;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;1461;True;44;-3.453224524601;175600.825000459;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);9;1206;True;48;-0.157413201479899;292862.025645423;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);20;2409;True;66;-1.58128690979503;348260.156656548;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);47;2681;True;77;-3.57034806142112;824649.621983561;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);42;11162;True;75;-1.98544676135548;93281.6026054875;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);25;1894;True;60;0.283468917144215;586727.777946082;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);56;2476;True;62;0.124942039197749;1139209.21393272;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);46;3059;True;81;-1.52174925781868;724816.136262745;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);89;6958;True;93;-3.38867239253068;527356.346588951;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);76;6760;True;79;-3.95685035733359;426660.357179096;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);52;2251;True;68;-3.43678134653567;1168925.8099466;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);122;4192;True;88;-3.9872093982935;1448102.50403152;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;11314;True;127;-1.99989179521794;235.17491736122;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;13344;True;141;-1.37055490136638;257.040338971109;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;17952;True;149;-1.95421078799023;278.206081008944;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;21377;True;151;-1.97656770794493;260.31348514562;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;22748;True;157;-1.99407906084977;301.94475408059;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;22189;True;169;-1.87513355532434;324.715352938654;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;25110;True;189;-1.46345300947477;345.979116695811;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5654;True;98;-2.82284973879477;101.497652522157;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;5159;True;81;-1.86491646611361;86.1363027897272;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);1;4997;True;82;-1.84290526054935;67.7115629788186;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5803;True;92;-3.77929142852281;88.9821284865157;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;4704;True;85;-1.19319968912434;95.9607623425284;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1627;True;55;-3.96339687330806;32.2327878774652;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;2151;True;60;-2.36818220762917;39.2110693152192;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1518;True;45;-2.05149452297552;27.2912314254076;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1457;True;53;-2.08589320913232;43.2506244895049;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1700;True;51;-0.895121025338359;33.0475588599488;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1181;True;44;0.275921283418276;31.659767668271;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;51847;False;-1;66.0005109123888;104.316631801542;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7210;True;42;-2.74821757466915;159.93244168006;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);98;28203;True;66;-3.167255535334;571.620500456357;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;3812;False;-1;2566.78163325823;2701.22871718952;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;847;False;-1;4684.38311436883;4762.99345046656;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;4783;False;-1;8640.57246737395;9434.93794246384;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);900;7679;False;-1;1261.50830116566;1445.73647596602;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;15668;True;50;-2.84272936677687;23.7394709707568;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1392;True;44;-2.59259165012864;34.7195183911236;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1825;True;51;-0.918414077217883;36.9740767921774;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;4911;True;90;-2.55643773384226;70.5734299864974;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5121;True;99;-3.14767985751279;69.561885918078;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6164;True;98;-0.691308657029322;68.5688254207187;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5526;True;93;0.111500453255838;76.3829533427455;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5924;True;98;-1.7261331489897;75.4072078482875;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);2;5827;True;97;-2.82977396567807;73.8970357192149;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6320;True;99;-1.95128781346199;74.7576197285396;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5783;True;103;-3.23943106049645;81.0756678000343;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5591;True;100;-1.89436602494417;79.8348145545701;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5860;True;103;-2.98583846492033;81.0461093058586;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;5955;True;99;-1.93605420735481;80.0133869434456;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);3;6643;True;106;-0.681888552700118;80.5828599665837;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7137;True;107;-0.125506713113518;82.2831780767478;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7302;True;108;-0.501739802072635;75.5777779267251;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;7803;True;101;-2.48771130223186;72.8724288650434;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6562;True;106;-3.38015810743913;89.6565607758612;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6886;True;109;-2.13583910005905;79.4713652038097;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6581;True;110;-1.80133043127196;91.3241201524189;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6904;True;102;-1.1945069316749;84.241735185556;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);4;6547;True;114;-3.97242237998751;95.7852276112144;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7157;True;106;-1.26909217483787;90.8883810482247;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8652;True;109;-1.89521227027067;78.5429303585314;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);5;7838;True;112;-2.35744432283446;87.2804166566229;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;9171;True;118;0.0404756851682793;82.4992412138385;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8085;True;117;-2.61643001745289;92.9430154041403;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8453;True;118;-1.82255400336466;97.654457958078;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;8383;True;123;-0.97517211221865;90.6253368294868;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);6;7848;True;121;-1.45940886692116;93.7078041719749;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8969;True;113;-3.43680538955927;87.0871613566948;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8801;True;119;-0.108539925938723;104.175608821809;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);8;10330;True;117;-2.62400651286543;93.2765584025197;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);7;8483;True;118;-0.76980663033659;97.6573523505041;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;745;True;36;-1.14024613757629;39.1126817087378;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;656;True;30;-1.69534050565927;25.9021708229124;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;908;True;36;0.300568703701984;30.9602745026584;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;612;True;34;-3.77282708127649;29.0536104102746;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;609;True;30;-1.14456534997773;32.6349853331217;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;705;True;32;0.362004092131743;33.8822097127988;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;845;True;40;-3.75347346428478;35.5793893635437;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;835;True;34;0.337222101323876;36.3482428507288;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;731;True;33;-1.52422895260352;31.0048374953382;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;826;True;36;-3.91285774480219;33.6161083722182;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1721;True;36;0.133482147070338;19.3552870766923;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;877;True;32;0.452458139719655;40.5995914481949;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1336;True;40;-0.490149419051665;34.2967248126133;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;965;True;38;2.55375613297976;30.0478290143021;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1281;True;38;-3.26682178641987;28.6654700273109;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;916;True;36;0.0214035436610707;35.2603124310817;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1190;True;40;0.316139668373456;39.9359110345839;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1752;True;48;-3.43763173717895;40.8472972455732;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1186;True;40;0.0412462055875205;39.4320129757886;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-4, 4]);0;1032;True;40;-1.46620318175582;33.6952940275802;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);16;6234;True;62;-4.99732058495158;39.2116135131301;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);221;54783;True;73;-4.99895018059711;49.929986572134;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);27;9648;True;60;-4.98393202665445;40.1204838223345;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);24;8526;True;58;-4.98929632827141;32.1085560991314;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);75;1476;True;101;-4.98796095139718;17734532.8090723;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);107;1208;True;109;-4.97244345488606;34667948.0419965;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);614;16701;True;102;-4.99717045575249;520111.841325271;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;18182;False;-1;-4.99803523532955;13.9726306754989;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;43692;False;-1;-4.99975817743678;4.00277938657336;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;17185;False;-1;-4.99838186427876;252172.353416652;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;13490;False;-1;-4.99974642414588;13.896833485315;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;19354;False;-1;-4.99966791830941;343874.013642514;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;10097;False;-1;-4.99951679725177;1078826.74188042;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);818;8530;True;109;-4.9966522585585;55083789.6106847;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;5659;False;-1;-4.99995268881319;74161172.5880978;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7843;False;-1;-4.99831664375882;26043560.3443514;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3789;False;-1;-4.99568981583961;9231548.99879071;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4544;False;-1;-4.99952011276014;65779695.4484612;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);901;6419;False;-1;-4.99992070719596;16665627.5789729;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;655862;False;-1;173.146810663932;206.402687876765;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);75;95332;True;36;4.50818610354708;128.257948335619;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;375945;False;-1;515.00000230968;525.119959230136;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;284043;False;-1;355.000044242479;417.723523784356;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;418574;False;-1;531.00000144355;538.629333068503;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;247545;False;-1;345.003441562878;394.333893747634;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;383234;False;-1;275.00221299939;359.167831856268;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;298701;False;-1;293.000014957041;350.336363272618;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;180350;False;-1;857.000044973567;872.177476571476;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;210038;False;-1;477.000089271925;552.014977264477;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;137834;False;-1;647.00000551343;688.083090630935;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;97044;False;-1;1087.3389903113;1149.69266266462;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;154783;False;-1;1045.02351003234;1183.79647913234;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;84136;False;-1;1063.00006242655;1205.17132252878;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;83100;False;-1;847.000336011872;986.162645350028;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;73711;False;-1;911.002708034591;1033.86269219447;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;96096;False;-1;1991.01448439435;2230.56193444763;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;56098;False;-1;1877.00304725953;2135.53726101767;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);43;111059;True;52;-2.3276353568433;69.4746787196958;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);39;168287;True;42;-0.666092171178242;57.8651868498858;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);21;74591;True;46;-1.02641707566866;65.8501593073534;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);88;188000;True;32;-2.87230712262555;37.7773220512839;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;100367;True;44;1.59357959711625;122.638406472276;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);61;339341;True;35;-0.630436088717746;32.4951846380175;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);294;1167281;True;61;-2.93714877401346;54.1470225573265;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;26910;True;36;-4.09569375174851;18.2668672867211;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;31122;True;34;-4.47101642818703;38.1979478257193;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);85;251984;True;200;-2.89877440961952;1604.46016886481;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;14074;True;125;-2.47014573471162;179.09729274078;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;17640;True;95;-1.73593788069484;133.471556503266;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;185078;True;217;-4.00805932889136;183.438634232533;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;291191;True;104;-2.99780739657479;58.7252142737809;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;8344;True;106;-4.8901115683327;50.2948887235143;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;129389;True;91;-4.30866877050543;52.777860567626;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);43;428053;True;88;-3.07633472982623;37.160746901382;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);19;156822;True;111;-3.13954712736399;34.0975682394783;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);36;98015;True;206;-2.88623330829955;552.604166067439;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;18400;True;75;-1.77935046273253;79.5207233447421;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);38;223613;True;176;-2.94515083727667;59.074931128717;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);12;131096;True;88;-2.97286511583853;50.0311297666653;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);34;281178;True;76;-2.96388992292988;58.1352873648516;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;20896;True;68;-3.8177905179643;85.6202204889316;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;431240;True;93;-2.9861590377922;32.2453162846318;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;4151;True;102;-3.89609898854797;71.9325970598236;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);84;271045;True;193;-2.94158137121311;1436.43628883968;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;17240;True;127;-2.91459460925059;165.023767018576;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;32414;True;99;-4.14595313330458;146.381174401699;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);34;175409;True;204;-2.9854129087112;182.88445613944;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;65632;True;101;-4.55025674288639;31.1933855050354;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;32418;True;196;-2.61124127712624;1527.76472767524;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;8024;True;103;-4.31328777657509;78.3307603614636;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);14;2171;True;53;-4.9692761292538;38217.5723120787;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);13;2202;True;75;-2.66005056149329;117896.513346339;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);98;7324;True;73;-4.62777146586579;163656.250717144;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);40;3057;True;96;-4.96543896382928;211610.607447266;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);77;7139;True;97;-4.99661261215648;437939.80806174;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);114;3427;True;81;-2.8588577005355;1768140.67233335;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);178;3832;True;81;-4.99983240850262;2551337.4135312;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);247;3450;True;117;-4.98208571690232;2795922.48107969;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;2198;True;42;-0.193301081281761;95949.2938533875;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1370;True;41;-3.85297356119984;116124.037289421;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;1901;True;45;-4.53559148103725;106731.026738152;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;1240;True;42;-2.49354494898279;148245.992955403;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);26;10428;True;48;-2.46487805781182;55619.8743433209;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;895;True;42;-1.71757989689595;174039.302827106;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;1725;True;51;-1.59366100867915;177103.328648143;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);20;5235;True;51;-2.75552331644833;90896.6114235964;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;2110;True;63;-0.972065645257041;172282.635278095;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;1461;True;44;-3.40615568608332;175600.780187716;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);9;1188;True;48;-2.43267021022396;298422.564365641;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);24;3073;True;68;-1.2454283480744;307891.012598925;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);47;2884;True;87;-4.96676257809939;776004.69694948;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);42;10991;True;75;-0.891763703847194;94661.5541382881;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);25;1920;True;60;-0.967083892769685;582264.939803883;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);56;2477;True;60;-0.554404599384593;1142564.47419187;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);45;2795;True;76;-0.399577376153123;788422.988484098;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);114;12278;True;101;-1.88147872075507;373348.131730315;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);61;2523;True;77;-4.6335527205996;1151174.90065482;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);51;2240;True;69;-4.8592109837845;1168443.66502872;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);121;4181;True;89;-4.99898642301512;1452659.29925897;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;14533;True;139;-1.36296823265169;254.093176954815;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;15524;True;153;-3.65767089587528;259.012878098526;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;15545;True;159;-2.91780059408294;251.34461595894;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;24290;True;163;-2.90685493680968;254.35967855622;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;21313;True;171;-2.60903340653006;310.254418953025;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;24312;True;179;-3.9234231221133;327.542242183598;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);11;31900;True;203;-4.34183023373682;350.885970027165;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;6663;True;104;-2.32705631448285;85.0443003390438;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;6764;True;96;-3.5217185963512;80.4850395840943;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;6768;True;77;-4.74909334897487;57.9300967883512;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;10552;True;102;-4.22105730940637;62.0080137977349;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;6485;True;92;-2.69575892188389;81.5666936041968;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1550;True;53;-4.17703056203994;25.3207377866683;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2118;True;64;-3.82984378786285;36.9608272664791;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1681;True;42;-3.11940974002677;29.3956765788617;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;3243;True;64;-2.68236769534758;41.0213900541906;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1578;True;44;-2.35317819162886;33.4085805183927;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1419;True;47;-2.82429428017898;25.0284076575427;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);201;28380;True;72;-3.13799218187946;89.8317448345756;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;11509;True;48;-4.11639547400009;131.172477803118;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);115;34204;True;75;-3.75325906963705;602.743656565034;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;3708;False;-1;2565.34489792788;2704.00794824182;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);901;859;False;-1;4683.64943560709;4762.88049533581;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;4701;False;-1;8635.17039783307;9443.94333354737;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);900;7498;False;-1;1279.04954283128;1449.76949244859;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);1;9946;True;44;-3.239546408057;22.0274094153604;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1516;True;43;-0.992736787531868;32.9428018901005;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;2006;True;53;-1.41337207165238;37.4749341958154;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5824;True;95;-0.950756691373305;73.0591479381314;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5602;True;100;-1.81532272455065;65.97188954587;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5614;True;94;-2.23507921827728;77.8575130010677;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5420;True;96;-3.22448589756362;81.2029567771896;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6212;True;104;-3.99642349639741;68.7015312066455;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);2;5194;True;94;-1.17689971634042;81.3225016723559;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;6241;True;94;-2.39583560423732;68.0761600061609;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7078;True;105;-2.41000813590829;70.9480970230798;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;7263;True;106;-0.956518141532558;68.9035080694371;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;7264;True;103;-0.962934427877392;69.7459451022869;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);3;5708;True;98;-2.30622623456001;88.5279758095742;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;10203;True;113;-2.46451306783804;64.1577496648989;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;8139;True;109;-0.945631515209391;71.3500539073744;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7885;True;105;-2.13801372942422;74.5378295651928;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7869;True;111;-3.14494505438253;84.3063289852141;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7147;True;107;-2.40103365080479;87.3947290339331;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;6813;True;104;-0.912835624959709;84.2494859684947;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;6895;True;107;-3.06924328583723;84.3431407640423;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);4;7262;True;109;-1.03932558653845;78.9611490967164;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7503;True;116;-4.10875783260388;90.5553974660207;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7838;True;119;-3.0421137707504;87.3421332776855;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;11819;True;115;-3.8698833663342;73.9810143953377;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);5;7878;True;109;-2.4077668448015;90.7091638836527;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8826;True;114;-4.12012602161622;85.2243976681758;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;8386;True;119;-2.29846988026913;89.5342260278436;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8669;True;112;-4.5910652212757;98.3303642762647;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8536;True;115;-1.84687697181798;85.1543563777777;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8667;True;117;-1.68226580726088;95.8583816876389;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;8922;True;120;-1.245978233519;91.494558388723;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);8;10160;True;127;-0.98991923871912;85.6265603031974;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);7;9398;True;117;-2.78983039212871;95.3880347044222;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);6;8592;True;115;-1.97088375546545;92.0183013134153;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;720;True;32;-0.832724137153813;36.2014237900315;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;589;True;28;-1.54707969471211;29.3060428812304;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;634;True;32;-2.50961767207348;36.9100428431516;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;903;True;38;-2.59438161626197;27.0866172823003;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;634;True;32;1.26487810363289;31.734152048306;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;945;True;32;-1.86746889579458;33.6290767165506;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;957;True;40;-2.92428259454867;33.6707501765123;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;754;True;34;-4.62375212908897;38.2708847329298;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1329;True;38;1.07894032638471;41.5353813365633;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;965;True;36;-1.1269894159059;38.9812521620239;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1131;True;40;-0.674984058213878;34.3002415837525;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;819;True;34;-1.92314819755179;39.1661358127868;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1437;True;42;-1.61809705971652;42.020880802111;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1019;True;38;-3.84594262523853;33.6752602466581;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;903;True;38;-0.792294814154643;33.559156003015;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1198;True;40;-0.545189216521191;32.3808167630682;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1454;True;44;-0.853525827570597;32.2007714599207;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1520;True;48;-1.09330114074671;40.0061136635251;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1187;True;40;-2.7281796735377;37.2955009373448;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5, 5]);0;1268;True;45;-1.5604084900396;36.8663974085846;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);16;6363;True;62;-3.04271107332432;38.9333976772158;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);134;34647;True;71;-3.52030780163338;45.8450001757345;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;8945;True;60;-3.43431150844214;38.4137193929757;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);26;8957;True;58;-3.85064194301113;31.9500204272896;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);69;1198;True;101;-2.95785566072678;5856832.75369297;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);107;1136;True;109;-3.04840857599382;32661399.7230466;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);565;16961;True;102;-3.58598207686149;511409.514284506;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;22245;False;-1;-4.06133446550786;9.31604295298376;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;47648;False;-1;-4.28020969384894;1.56602432263608;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;16598;False;-1;-3.68250696805116;260759.96249217;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;12706;False;-1;-3.72977547349965;14.1377067786089;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;20115;False;-1;-4.1642357029697;323871.880810341;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;8321;False;-1;-4.32254840742073;1311057.70817638;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;8574;False;-1;-3.46410961285208;38597743.8574109;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4932;False;-1;-3.72959206261088;87849536.6539398;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;7051;False;-1;-4.28490089608203;32293010.8052682;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3593;False;-1;-3.20937397166112;9736418.61476383;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4256;False;-1;-3.58879753266144;54766652.4291185;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;7262;False;-1;-3.22610867988658;11105097.4756272;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;589827;False;-1;231.306465184643;248.205658103761;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);81;100467;True;33;0.362578591531998;131.834100533511;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;368300;False;-1;515.515110407431;526.939832015756;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;325506;False;-1;354.184964696429;426.81110975879;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;394757;False;-1;531.298858663722;539.397807331421;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;262483;False;-1;392.536153439525;481.950603140782;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;346306;False;-1;276.274599370185;337.543111820239;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;339723;False;-1;309.590483482315;339.435797615415;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;174865;False;-1;721.469592498937;783.050066426048;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;207367;False;-1;498.91184051376;592.021080534746;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;131569;False;-1;460.59996678403;723.131741687202;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;102586;False;-1;1089.83713073414;1155.01299345244;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;148905;False;-1;1047.66477351919;1184.24225305134;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;79339;False;-1;1065.10420642861;1312.26761691003;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;79039;False;-1;847.632769526357;994.901832479685;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;72127;False;-1;1116.49478420871;1283.73766115801;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;94943;False;-1;1993.60704771383;2235.45766279894;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;55414;False;-1;1694.28568194396;2084.05818677411;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;12133;True;48;0.887906099490372;68.7812589311642;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;34187;True;40;0.474684863085963;56.916373174256;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;12358;True;48;1.03559399330863;64.7310943927874;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);92;148742;True;30;-0.538968166575111;49.3103865883189;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);20;50657;True;44;-0.953896836416634;132.760607080235;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);156;805708;True;37;-0.0273223286417581;34.6278399550569;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);196;585516;True;55;-1.7249845106762;80.7257762196015;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2830;True;26;-0.0192443363568721;18.3654389986752;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;23009;True;27;0.787231465231423;42.4237876588327;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);86;250449;True;195;-0.184040178402104;1588.4875291599;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11337;True;113;-0.114503956466147;183.506485373817;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;18508;True;95;0.0754611812036345;140.52445511232;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);35;174268;True;200;0.00539009594872709;184.796072517109;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);40;312604;True;76;-0.571837746207999;59.1252787293118;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;4805;True;101;0.975314689036133;62.629029359063;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);15;153500;True;89;-1.81761140963044;48.8881410501328;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);39;373702;True;88;-0.761882990431858;38.4192297261463;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);79;506731;True;127;-0.865175413054154;42.8046144532101;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);13;32816;True;187;-0.477370617054381;1516.18242969918;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;9959;True;75;0.338521666714784;80.560029421255;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);27;161854;True;176;-0.699349464307104;61.9867031663958;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);10;108254;True;88;-0.413175692454225;53.4788254103323;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);39;303400;True;76;-0.544562196996233;58.6935260149723;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;8289;True;75;-1.61435759193164;80.1799095193554;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);54;516915;True;88;-0.603014810134023;39.4243271153049;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;5032;True;100;-0.102780416033585;65.7507600967292;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);86;256773;True;202;-0.126220063453971;1557.20387895877;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;11262;True;113;-0.345629055759922;182.582500666037;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;15532;True;96;0.48327734486867;142.481338209781;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;20784;True;201;-1.12826298384396;143.618033043657;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);98;623463;True;129;-0.442682017154537;43.3522697162769;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);32;82174;True;199;0.324467096456425;655.584101464062;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;9674;True;98;0.474897256223029;88.9589564701253;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);14;2163;True;43;-2.98641578181541;38456.2009634862;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);14;2206;True;70;0.744570011506535;118623.310139316;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);97;7341;True;66;-2.96008106377437;163404.193421312;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);40;3149;True;96;-2.5774499322277;207926.051105593;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);77;7107;True;94;-2.54128795682239;441905.642893328;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);121;5059;True;85;-0.992809181146744;1228884.63025388;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);176;3908;True;81;-2.63362790780469;2506131.20656332;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);271;3116;True;109;-2.07084450314953;3431576.36221171;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;2166;True;41;-0.481575149934669;101396.781522271;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1370;True;41;-1.05571088892613;116123.922855054;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1028;True;42;-1.63243083554021;183716.699019531;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;1240;True;42;0.483829149604241;148245.864766392;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;10263;True;47;0.263495486369017;55989.9520372923;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;886;True;42;0.28839640630303;176206.083245954;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;1589;True;52;0.977557339513341;175737.568681507;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);19;5208;True;52;0.544422033080522;91332.5223640136;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;1271;True;51;1.65516620586834;274788.868158205;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;1461;True;44;0.903224729250192;175600.726949022;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);9;1190;True;49;-1.20520688139506;297967.128546016;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);23;2435;True;68;-1.26864698538525;404342.753895183;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);48;2157;True;70;-3.56275086548252;1064474.73188259;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);42;11153;True;75;0.702744508504395;93543.0887180187;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);25;1853;True;58;0.429326104870182;602305.068691539;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);55;2505;True;61;0.188666493678654;1130331.28675258;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);45;2781;True;77;0.148093038208163;787488.107900257;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);73;2773;True;88;-1.79665534750329;1349915.99413568;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);74;6765;True;80;-1.87062087570412;426519.077850758;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);51;2276;True;67;-2.12138553667951;1159098.10056446;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);123;4147;True;88;-2.22668104505594;1464727.70629224;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;10327;True;119;0.74274548291911;243.153462767182;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;11479;True;129;0.393561591262514;256.065213725411;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;13585;True;137;0.60845029405521;270.023816189188;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;15995;True;149;-0.0224622055740691;289.978285770107;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;21119;True;159;0.304130015324292;317.908439739086;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;22885;True;161;0.812863755030681;338.391495368889;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);8;24064;True;167;0.862424519513045;342.383192521256;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4835;True;92;0.0835689804555073;108.955051224125;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;4971;True;79;-0.957175155866898;73.4815758705614;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);1;3465;True;67;-0.160460848308222;78.6816749921913;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;6012;True;96;-0.0221598747390067;83.8164771926639;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;5332;True;86;-0.631539915066548;98.5476691209718;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1626;True;49;-0.983082149206193;36.1940916954245;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1343;True;54;-0.120749510185714;39.8970960785538;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;847;True;34;-1.54215873155687;29.7358889329654;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1428;True;55;-0.371593201143901;39.1966952716843;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1189;True;43;-1.1842924033619;33.1023095351657;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;901;True;36;-0.309373838854542;29.6942492166265;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);201;42796;True;55;-2.02568149856518;47.2919569843454;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6382;True;42;-0.535064694968447;188.959708623193;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);114;36836;True;64;-2.96732878099878;530.94539525587;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;3724;False;-1;2566.453130165;2703.18420490386;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;861;False;-1;4684.27297509727;4762.8966291639;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;4665;False;-1;8638.31639208636;9448.66162423649;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);900;7739;False;-1;1259.63859163778;1444.33346691445;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;9429;True;48;-0.8340980876557;27.5126002760315;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1115;True;43;0.859528880451186;42.489253861677;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1501;True;48;-0.400155619482659;40.4472233298033;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4699;True;89;-1.14795035846725;76.8943621152014;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4305;True;80;-0.129384305255159;76.7851845898537;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4746;True;90;-0.03154320587007;77.2980742241553;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4969;True;88;-0.763384449743348;83.605907549332;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4766;True;91;0.509532730064972;77.9434512593882;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4942;True;93;-0.227032873723292;85.7411057957447;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;4855;True;90;-3.47037177081;83.1368000751767;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5481;True;92;1.40416946417694;85.5684386994958;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5439;True;97;1.42526958157737;85.0267712107653;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5225;True;102;-0.547050935805845;87.2371556077413;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);2;5066;True;95;-1.24601001793366;84.1425088433452;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5388;True;93;-0.332897862021176;84.2548046101283;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5656;True;100;0.0588667107992489;88.2853978961389;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5877;True;102;0.632148033022606;88.8104030926547;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);3;5778;True;95;-0.700675010597301;85.0658576077892;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6114;True;105;-0.45597138886119;93.9230434455456;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6240;True;100;-1.56784591545014;85.8314885117171;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6012;True;100;-0.220139983754878;94.7730768036356;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6428;True;102;-0.902556298109882;92.5851976134783;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6668;True;108;0.967365939260025;95.7467854374698;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6681;True;105;-0.411476040933711;97.0611526614503;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6511;True;99;-0.0440217727177224;93.7068365860286;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);4;6568;True;109;-0.390766184467427;95.1636254433883;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;7069;True;112;0.19724084560133;96.9132183932077;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;7230;True;109;0.744778453100539;93.8126954137237;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7600;True;115;0.54415729115389;90.1973567361519;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7269;True;114;0.666109654273195;98.9019366692238;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);5;6918;True;113;1.27417006564646;102.516232901409;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7538;True;106;0.809518927991188;98.4551271832225;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7426;True;112;0.0775025110128823;99.6376231117002;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);6;7756;True;112;-0.803497397198382;105.808888713722;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);7;7758;True;113;-0.94139562904222;96.7981276086837;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;755;True;34;-0.0848423565439037;36.4022191339798;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;488;True;28;1.33330834869793;26.0258522000345;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;694;True;34;-1.31001238620016;36.2622787605198;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;739;True;34;1.64199260015474;29.4030771444004;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;616;True;32;-0.991995875250207;33.5733612471516;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1095;True;34;0.635035568325178;33.1398963209711;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;899;True;38;1.0000458003005;37.0865333378272;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;713;True;34;-0.0858452696632301;37.0099733861679;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;696;True;34;-0.652070634037989;33.4961206059356;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;940;True;38;0.547842586812679;34.6582028968005;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;877;True;36;-0.178085354942944;28.1853107945687;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;799;True;36;-1.22326726180303;37.3710213617425;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;942;True;42;-1.87118652874587;38.3352030694893;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1033;True;38;-0.217004492801371;34.1065215139843;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1561;True;38;1.38696257017287;33.3863988404772;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1124;True;38;-0.0032405070103935;32.8653180994512;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;2823;True;40;-0.985802789567262;48.7054526660413;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1316;True;45;-0.17814676349582;42.9485954937852;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1412;True;42;-1.11349753940863;43.0758041366733;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 1]);0;1086;True;40;0.649870316328105;31.6100315265409;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);16;6355;True;62;-6.21364450719702;38.8735235573867;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);248;58549;True;73;-9.13387486949363;51.0045586678531;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;9169;True;60;-6.03643536836814;39.1334151304619;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);25;8880;True;58;-6.95247903905958;32.3239347970479;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);77;1539;True;101;-6.20708875430882;18433391.8103549;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);107;1141;True;109;-6.3543361058423;32599423.952472;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);587;17278;True;101;-7.65820884940495;502113.508516521;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;22727;False;-1;-7.34289244302944;9.30983800100126;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;46646;False;-1;-8.74218938833105;2.75179314235278;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;17331;False;-1;-7.97189639980652;249724.382590647;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;14269;False;-1;-7.05759307142568;12.9433011910476;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;20392;False;-1;-8.95849620637928;321159.468566987;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;8788;False;-1;-6.97446718689034;1240476.46195752;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);872;8871;True;109;-7.21590944327689;51184354.0781602;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;5208;False;-1;-7.52446563952953;72396739.0869365;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;6997;False;-1;-6.87930880495107;31658260.3224295;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3626;False;-1;-7.01242277095453;9638098.52584118;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4256;False;-1;-6.75429531154301;61446735.4672809;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7036;False;-1;-8.05978369662246;12719865.0016667;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;637861;False;-1;173.32233290777;207.562627917799;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);226;160873;True;44;-1.01100200268277;100.229444335475;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;361648;False;-1;511.736378409184;525.282750316035;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;329455;False;-1;348.899215385073;386.922708245719;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;405815;False;-1;527.591915896915;538.727348544537;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;245205;False;-1;342.183103694873;392.338290093853;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;351172;False;-1;273.117008992356;349.389431443274;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;332845;False;-1;304.400031202793;348.461946785057;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;182729;False;-1;852.721348222683;869.495220721963;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;195147;False;-1;604.225235649474;777.087537353495;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;122456;False;-1;506.012129517932;714.854744432806;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;106699;False;-1;1085.72096280153;1163.87888998922;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;149633;False;-1;1043.60103354862;1183.99921536547;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;79234;False;-1;1250.65790929778;1318.56697416137;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;81213;False;-1;881.168705933425;986.666080283087;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;61997;False;-1;1645.8030443492;1733.86359252716;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;96113;False;-1;1990.30206160722;2234.2164871741;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;54240;False;-1;1698.11902981453;2074.88728285969;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;25023;True;48;-4.25946993038193;68.6944962573346;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;34286;True;44;0.0685982826295644;57.220468717396;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);269;833206;True;66;-0.0220890952782467;65.2688201605422;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);97;142232;True;28;-1.78221652350903;48.6185483576639;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;24456;True;52;-1.40493317911432;116.261789661763;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);182;933438;True;33;0.90621300474058;33.2967377531249;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);241;654403;True;56;-3.03884841379775;80.0799391179383;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;7007;True;32;-1.09849234145625;19.9190522512182;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;16969;True;29;-0.489500464993726;39.0412923465313;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);92;291700;True;218;-1.97216478960293;1371.24311059965;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;13380;True;115;-3.18161328328739;166.930769140845;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;14237;True;99;-2.47938782868349;153.435257384118;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);35;180163;True;202;-1.17137931765732;183.117204189497;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);32;256442;True;100;-2.47909055271127;57.9669685807323;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;5441;True;100;-2.48526628433737;71.8711972803278;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;115394;True;89;-3.10228346688186;53.1816784470994;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);37;367652;True;88;-3.50519646095079;35.0445223787616;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);102;630749;True;129;-3.58763346891056;43.7852334579477;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);34;89130;True;208;-3.50984485709599;605.248814794999;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;21904;True;77;-2.50500766732701;85.5333917371837;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);47;266092;True;178;-4.73318091001006;59.217438081071;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);11;108863;True;90;-3.17664306748317;56.7102588588435;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);43;338226;True;95;-4.26342171314275;59.1463410719919;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;17722;True;75;-2.66210341317189;80.1278256431275;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);71;658270;True;95;-4.08937217964202;35.8512831295751;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;4884;True;108;-2.31946912722855;72.345391063885;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);92;271649;True;206;-2.81967333595826;1564.26557971248;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;11202;True;117;-0.628149015290574;183.994319799023;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;15859;True;97;-0.964517067711042;134.197815259882;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;26545;True;196;-0.25803597833361;131.976570596836;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);73;483430;True;133;-3.60231371736169;45.5183606617184;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);13;33039;True;189;-2.53331100024437;1500.72211355369;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;7341;True;103;-1.18567171677772;76.6857407930145;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);15;2155;True;42;-5.38106298118679;38144.6635762453;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);14;2207;True;70;1.69664555828448;118773.531885352;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);112;9583;True;78;-3.20386802778471;145226.759936524;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);49;3885;True;101;-3.77310824126215;205314.098374702;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);76;7112;True;95;-5.83150291627575;441253.769183998;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);114;5075;True;85;-0.880980622296581;1224426.36435279;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);169;3910;True;83;-6.61777713162597;2497510.06908205;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);264;3884;True;119;-5.57818776917637;2770550.53000365;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;2175;True;40;-0.371160726656838;101120.870526157;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1369;True;41;-1.12505732227338;116123.995785786;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1028;True;42;-1.44577952324813;183380.235634445;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;1240;True;42;-1.61393954415004;148246.258218355;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);26;10443;True;47;0.5399730453315;55585.2713888595;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;895;True;42;-3.07564881845227;174402.483656527;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;1726;True;51;-1.1714204885847;176909.151098362;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);19;5211;True;52;-1.51141609330366;91155.5109386539;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;1541;True;56;-2.15506914693494;227235.636951117;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;1461;True;44;-0.899304905364226;175600.765101822;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);9;1190;True;49;-3.68759393143845;297967.122613417;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);23;2985;True;66;1.03816438973199;318807.417877467;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);46;2883;True;85;-4.86316712706908;775836.961345121;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);41;11074;True;75;-3.33578851973926;93917.5709847742;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);24;1887;True;57;0.866249444961947;592769.466820085;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);55;2483;True;60;-2.72418984567846;1140006.58820928;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);39;2188;True;76;-2.47717318545909;867638.954976228;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);90;3375;True;102;-1.66861178823015;1367891.65518344;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);59;2518;True;80;-4.5699849164718;1156719.14813358;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);51;2287;True;69;-4.22793264839537;1157945.11698034;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);120;4136;True;88;-7.30242309804531;1469032.7452685;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;11972;True;139;1.09791255898682;245.480380494717;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;14472;True;143;-3.44703581986859;263.235362118456;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;15973;True;145;-3.67243165574124;281.379482952268;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;18445;True;153;-1.77673484962242;296.142470879928;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;26340;True;165;-2.73761988662111;315.050634023031;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);8;26705;True;179;-1.00090068496613;345.153413242773;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;27683;True;185;-2.1940066507147;353.43652095467;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;8867;True;108;-2.9893152264488;75.7160575631287;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;6239;True;98;-4.37035618553362;76.8970687359933;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);1;4085;True;75;-2.84283739090598;76.301659516382;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;8610;True;96;-1.61508025413353;69.3583552932736;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;8204;True;98;-2.30280550252834;91.3925401474798;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1730;True;46;-1.1023399410668;29.0139067133674;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1779;True;59;-3.36461667584317;43.1914037695248;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1577;True;42;-1.65313524590606;24.3582928191873;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1994;True;64;-0.266642700892161;43.8009028483488;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1159;True;45;-0.935490636145124;34.0742059863472;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;946;True;39;-0.788088631809194;30.6366477939282;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);590;116980;True;73;-4.84311878325635;33.9438382595574;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);10;14960;True;50;-4.04712207126851;147.963288529642;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);315;119532;True;79;-5.60293838442027;444.934506374041;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;3582;False;-1;2565.78337193876;2708.10880855467;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;811;False;-1;4684.64926337412;4762.61206657664;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;4633;False;-1;8637.35318537537;9452.65739417763;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);900;7637;False;-1;1261.08658141966;1446.5688467025;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;20167;True;50;-3.66422445246679;22.8815534093387;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1029;True;44;-2.93347237679386;37.5015345553127;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;2110;True;51;-1.1089690256614;33.596139581133;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5040;True;92;-0.227672142637996;77.4407326335227;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5002;True;88;-1.11494422676377;78.1145434287591;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5650;True;98;-1.16498659220398;74.6913515960882;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5530;True;91;-2.94182999468383;72.066730840955;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5138;True;93;-1.23941505796577;76.2288710436919;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5453;True;94;-0.575673627891321;82.0916287710494;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);2;5944;True;94;-1.92869465921139;69.1770817556256;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;6280;True;102;-2.71955855462302;82.3773911767505;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5770;True;96;-1.74089787993289;85.8583440943682;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5882;True;101;-2.62744447978894;80.761757925454;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5744;True;101;-0.257305018021508;81.5497133675016;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6626;True;103;-0.780031681096052;83.7507122818023;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6401;True;107;-2.37550298649553;84.127625614399;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5821;True;100;-0.546753817070583;94.7212421968722;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);3;5911;True;103;-1.65041858698854;87.1646728329064;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;7073;True;104;-3.30425147252357;89.6852423406747;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;6579;True;108;-1.16162392674448;88.5844227782541;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7561;True;109;-3.56158409641551;86.6596109574886;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);4;7080;True;107;-2.23450118587762;85.173953982723;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7270;True;109;-3.27633803635855;89.1673528846696;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7340;True;112;-3.35117031784601;90.5169057094273;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;7979;True;109;-2.02096539237568;83.1680203529281;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;6910;True;111;-1.59636960690065;97.5177428688448;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7939;True;114;-2.26250323763795;89.8580081751689;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;9257;True;121;-2.93007449978855;82.5597704225461;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;9103;True;119;-0.595557661559469;89.0750227860386;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);5;6893;True;110;-0.914614014537504;97.2878001480232;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7701;True;113;-0.306089977953869;101.62769731423;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;8394;True;112;-1.85507960447672;97.4070650551255;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;8387;True;120;-1.00421272663418;99.3178751579998;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);6;7930;True;120;-3.28338322036029;98.2655952692734;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);7;9383;True;121;-1.61083126508564;86.0721858122368;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;766;True;36;1.02850485348482;34.5747960695508;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;667;True;26;-1.53092008003229;27.5132036957473;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;900;True;34;-3.66473410710289;39.9687539141635;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;775;True;34;-1.08653890268778;32.2280365517785;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;523;True;26;-0.421207691544588;32.1577025573503;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;767;True;34;-1.00613942203165;32.283285995091;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;837;True;38;-1.30880519370544;34.8168719508374;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;748;True;34;-1.01910926481513;36.2654999863327;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;854;True;34;-2.15702326288425;32.7803403415605;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;803;True;34;2.72291427235562;37.9914528814761;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1004;True;38;-2.10019228617492;28.532674863713;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;889;True;36;0.648999532321896;39.9824818838469;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;975;True;42;-0.618097032265924;36.2316769621901;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1162;True;36;0.0786984381259865;33.7527075732966;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1327;True;40;-0.398531879335159;35.3136452086371;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1039;True;38;0.225509382192398;34.107055026438;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;3027;True;42;0.846776205107805;46.1298414812135;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1179;True;46;-1.12311243576316;39.7112934364616;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;1453;True;40;-0.326148221394659;39.4463701772837;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 2]);0;910;True;38;-3.75760831051032;33.5305874146096;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;6620;True;62;0;37.6211974195549;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);133;34001;True;75;0;43.9293788169828;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;9658;True;60;0;40.6978657717532;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);30;10324;True;60;0;34.8778615490624;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);74;1426;True;101;0;4742358.53381211;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);129;1427;True;109;0;89064169.7162952;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);729;17770;True;101;0;2676538.49398043;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;17672;False;-1;0;14.7209089755076;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;41985;False;-1;0;4.87861442306516;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;17977;False;-1;0;223543.965910055;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;10871;False;-1;0;16.9438285013748;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;19846;False;-1;0;301981.524403252;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3504;False;-1;0;9053305.54779768;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;8019;False;-1;0;80832978.8523885;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5340;False;-1;0;90035853.4150645;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5239;False;-1;0;72747147.9615332;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3777;False;-1;0;31064639.608108;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4719;False;-1;0;61857524.8361353;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;5438;False;-1;0;14211235.4718849;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;686071;False;-1;109.051976097777;199.95888249373;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);39;40221;True;51;0;151.106860745417;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);176;88514;True;100;0;338.980552037596;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;345226;False;-1;221.825578898883;407.707934780233;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);193;113891;True;96;0;335.48106096855;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;264832;False;-1;181.096247138801;327.71527607103;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;413792;False;-1;152.759761063822;292.144615453194;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;373947;False;-1;142.484842405272;284.096121151475;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;167881;False;-1;484.326103619009;883.368972029078;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;217896;False;-1;273.286123795148;508.326018242613;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;142291;False;-1;299.412648350695;619.364608671041;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;120695;False;-1;471.313570006895;932.735857827475;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;141088;False;-1;622.505293858476;1101.90299065726;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;88586;False;-1;448.614543807301;1080.18635286685;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;71078;False;-1;458.314977806813;1053.93129152835;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;69918;False;-1;721.582629923817;1344.03971832561;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;91867;False;-1;1115.94812814591;2008.65272456064;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;58766;False;-1;1004.04154148956;2054.03084928677;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);40;99647;True;56;0;70.2802021526406;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);22;98244;True;36;0;58.9164057914495;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);221;701090;True;76;0;66.1739398240477;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;89674;True;37;0;32.9428868657213;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);77;151259;True;61;0;112.791602300664;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);37;195479;True;30;0;37.0861061402072;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);466;1695695;True;67;0;73.6410657876144;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2912;True;27;0;19.7132343936619;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;42926;True;34;0;38.3719803559904;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;69945;True;327;0;178.423534774852;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;15935;True;139;0;153.723874246589;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;12806;True;140;0;139.712233205593;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);45;214932;True;245;0;165.890442200249;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);37;281474;True;79;0;57.1805219144651;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;22256;True;144;0;65.1931025862898;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;110875;True;95;0;52.3584633121247;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);44;400499;True;124;0;42.8845956127459;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);68;432934;True;134;0;42.6907656097684;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;61834;True;243;0;409.796655261159;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;29269;True;72;0;91.4504039547664;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);24;120158;True;183;0;66.8762346753795;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;102907;True;100;0;53.5737284239358;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);39;312909;True;76;0;58.422509160276;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;7712;True;77;0;93.9481364781578;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);53;517769;True;120;0;35.8350689334579;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;7471;True;112;0;120.52720252155;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;21088;True;263;0;254.305816067457;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;12988;True;147;0;172.973076343109;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;29651;True;97;0;147.200802222393;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);32;162511;True;255;0;150.600926092988;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);251;1301670;True;141;0;55.895852544756;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);480;1631168;True;283;0;85.2543226212306;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;6166;True;105;0;88.5860494367852;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;2161;True;52;0;41552.3096520018;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;4284;True;73;0;81281.5212141196;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);43;3723;True;98;0;129182.450582597;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;28019;False;-1;0;318986.852524097;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);44;2004;True;89;0;1116048.8352975;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);56;2239;True;88;0;1423091.65680847;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);140;3811;True;100;0;1805091.92241601;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;6712;False;-1;0;4307345.43719517;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;950;True;36;0;100098.684302371;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1318;True;39;0;114814.70259919;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1316;True;48;0;210645.196575753;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1351;True;44;0;193862.18953137;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1481;True;45;0;154318.08072532;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;1141;True;44;0;127388.212757459;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;1670;True;58;0;198190.834611022;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;1075;True;52;0;477414.302199415;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;1452;True;58;0;273011.363798682;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;1519;True;47;0;162761.837466652;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;1822;True;62;0;278350.224726714;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;1588;True;62;0;524647.240865917;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;1908;True;67;0;950318.500893828;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;1025;True;53;0;527147.938281898;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);17;1537;True;61;0;502869.138876361;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;1600;True;68;0;845834.623332561;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);53;3249;True;108;0;820331.282701414;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);94;3682;True;99;0;1275013.82957476;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);28;1438;True;74;0;918153.295235124;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);30;1776;True;77;0;813969.552403985;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);61;2320;True;74;0;1393926.90872412;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;30610;True;213;0;244.925566492281;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);15;58160;True;231;0;269.757999659414;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;40407;True;213;0;270.453792118018;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);18;59807;True;245;0;294.342681814083;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);29;86002;True;257;0;337.665278018011;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);38;100065;True;273;0;333.74201672916;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);45;113157;True;269;0;335.390057528112;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;26714;True;136;0;110.675362245684;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;22344;True;114;0;119.50449175915;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;19881;True;104;0;103.972362585901;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);20;36872;True;127;0;117.91671688959;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);9;19098;True;137;0;121.556125846942;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2380;True;44;0;41.8986434898863;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;4845;True;55;0;52.6371715625078;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1082;True;38;0;34.9588609488035;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;5633;True;65;0;47.9077117747301;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;2041;True;44;0;38.9532459043977;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1889;True;37;0;34.9730331311425;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;51079;False;-1;84.3440039801651;220.332500310724;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);133;133253;True;79;0;211.811287219263;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;127406;False;-1;657.716254346136;1351.83600114398;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;3552;False;-1;1954.52417590862;2879.23470520703;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);901;825;False;-1;2519.30098603484;4719.89737503678;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;4641;False;-1;7005.00471116942;10095.7387687156;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);900;7635;False;-1;1025.32105395926;1571.35457372531;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;22954;True;44;0;29.1093074050286;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1190;True;42;0;41.5588145296058;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1800;True;48;0;46.862329561448;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;8625;True;88;0;78.8433564192216;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);2;5710;True;96;0;84.6898269190246;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7589;True;92;0;86.7254120325722;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;8544;True;94;0;91.6739841462613;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7570;True;98;0;80.8386023080978;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;10669;True;94;0;93.551224751608;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);3;6846;True;93;0;83.6609824531875;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7716;True;108;0;87.2760378322082;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;7970;True;99;0;94.1636351574091;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);4;6964;True;99;0;96.6199747034605;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);5;8926;True;105;0;93.6635387548778;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;11077;True;100;0;81.5051453076464;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9438;True;115;0;93.5731977484374;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9506;True;105;0;92.3976474117262;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;10277;True;111;0;95.5639263666122;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;8575;True;106;0;105.348557589257;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10985;True;120;0;94.8453728427975;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);6;9042;True;105;0;100.982906067408;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9944;True;117;0;97.1335416434344;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;11219;True;116;0;106.700318701389;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);7;9297;True;115;0;95.747238792869;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;12188;True;107;0;90.8658197746126;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);8;10396;True;115;0;101.861424795652;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;11926;True;110;0;111.899654535376;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;13935;True;116;0;113.001701588066;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;11742;True;122;0;105.376642522671;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;14941;True;122;0;112.237005659667;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);10;12365;True;112;0;112.328164458277;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);12;12614;True;127;0;110.254723463864;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;12629;True;124;0;109.20713118744;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);13;13682;True;123;0;108.476036468329;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);11;11753;True;126;0;114.624511257933;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;936;True;35;0;42.536012503818;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;643;True;28;0;32.2251650624794;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;810;True;36;0;35.3012379556784;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;889;True;36;0;27.4611987626581;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;697;True;30;0;31.2262407588048;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1030;True;34;0;36.0574588976589;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1047;True;40;0;39.0978567766628;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;830;True;34;0;38.4712669140955;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1030;True;36;0;34.1256429084339;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1062;True;34;0;41.2746349729898;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1081;True;42;0;32.0421480917896;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;800;True;32;0;40.7973099300235;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1016;True;40;0;38.4847288089271;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1029;True;38;0;37.0919211360405;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1024;True;42;0;34.3738928305449;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1243;True;40;0;39.2854688717529;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1784;True;44;0;40.3011826642845;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1891;True;46;0;37.8804686219668;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1290;True;44;0;43.6143003695505;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 10%]);0;1131;True;40;0;37.3510125138674;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);17;6467;True;62;-10.3843218314432;39.9795151952768;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);201;48979;True;71;-12.5540264784305;48.726578816088;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);27;9304;True;60;-8.80490117026705;39.5865608607421;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);27;9134;True;58;-11.2244189463982;33.6798086929283;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);68;1211;True;101;-7.3494796847121;1938221.93030468;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);109;1204;True;109;-7.91991145175006;26963970.8779018;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);615;17125;True;102;-13.1443748841852;506853.96842405;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;18865;False;-1;-12.1243581996345;12.4562173263078;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;43496;False;-1;-12.4552231037776;4.35713699071333;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;16932;False;-1;-11.4425357138594;255715.084041274;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;13314;False;-1;-11.3880025875975;13.7759842665918;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;20282;False;-1;-13.1416639365649;326862.956540759;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;9121;False;-1;-12.0340080225098;1197584.33018509;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;8370;False;-1;-10.0567434489472;38078791.2488286;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;5159;False;-1;-10.3251339660993;94974728.5830786;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;7475;False;-1;-9.8537999971684;30020492.3188055;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3674;False;-1;-10.871510486191;9528514.34026709;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4452;False;-1;-10.4057290276073;70517442.7971483;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;6463;False;-1;-10.6731874944409;17244803.5837;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;650986;False;-1;168.322606686422;205.65923884722;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);50;58519;True;31;-0.723974560692676;128.106758188022;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;366982;False;-1;506.765970310263;523.679191696078;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;266403;False;-1;348.042382832122;417.959366167149;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;408481;False;-1;521.442906488587;538.637491384891;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;236961;False;-1;337.797833616954;392.039481701114;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);776;312136;True;69;1.0147331660502;332.451525245288;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;318434;False;-1;300.569811166165;322.327465482494;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);647;105888;True;79;-0.143996549730914;811.964304684792;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;207315;False;-1;469.621852634946;540.432897339875;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;140550;False;-1;452.465094377785;488.951195205319;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;106755;False;-1;1074.43929107209;1204.06239743685;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;145692;False;-1;1039.88034365712;1175.86779959995;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;80103;False;-1;1038.90607589972;1182.45694031261;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;81537;False;-1;588.365069507785;860.498078853015;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;72003;False;-1;890.263901693909;1146.08496166974;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;93259;False;-1;1985.30083500136;2236.19252872383;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;53089;False;-1;1903.58514505842;2245.35526768356;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;13125;True;64;2.09279440279392;68.4266146647208;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);1;4530;True;34;-2.25118559448172;57.4063434918962;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;18063;True;50;-1.28346565126884;65.5650054372625;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);20;32519;True;35;-2.58744953159595;48.1349729228437;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;25773;True;51;-3.74440846862341;109.421801388433;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);70;359326;True;34;-3.78972114410892;33.9652281446434;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);220;619666;True;61;-3.10019921100333;88.0174122802964;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;7061;True;32;-1.59712313708227;21.2893516230913;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;39278;True;31;-5.76309731175387;33.6393854483681;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);91;267257;True;199;-7.2029800117929;1514.92930260379;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;11662;True;122;-3.7248235753331;184.275079040937;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;21542;True;113;-4.12041189791816;130.520592844122;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);34;167712;True;227;-2.21736914791371;178.802602523625;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);43;328754;True;76;-6.98727008211714;59.7415843825309;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2860;True;100;-4.63614189043944;82.3159278775466;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;105794;True;89;-5.86981291103743;52.5254776631411;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);73;652139;True;95;-8.51844695283014;39.1080026236551;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;111840;True;103;-7.81992497699356;32.8685407835304;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;65240;True;211;-3.20620401549067;792.332640882439;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;45613;True;71;-8.2197178997088;87.1227155067668;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;147288;True;177;-7.25734662764146;56.7850443184972;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;126885;True;82;-5.84490769270941;51.7400073799285;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);36;285586;True;87;-5.74283815436608;58.7831997100007;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;12652;True;77;-3.90861399982944;84.8154421278644;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);82;724399;True;94;-8.20270842951517;37.6833673932168;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3356;True;95;-4.34603899643341;95.9532492345734;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);89;266006;True;191;-7.39560254143008;1507.3552335399;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;10554;True;113;-4.33280458662802;180.189413414239;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;28543;True;107;-5.32756856779454;129.43101005595;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);27;139833;True;227;-5.79520954761487;173.595197685601;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);22;169126;True;110;-6.99574732936443;35.8038677025516;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;33016;True;185;-1.18795528476174;1498.59300787308;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;9755;True;98;-5.92628163039605;84.8435351655187;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);15;2131;True;44;-6.89064273610829;38162.8877040588;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);14;2198;True;71;0.824118275822883;118228.713998954;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);99;7344;True;67;-8.11227575524996;163243.101043918;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);41;3110;True;96;-7.38438763035962;208717.272370807;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);81;7115;True;98;-7.18851483154353;442540.314770978;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);110;11649;True;78;-1.24559330875737;388711.202661537;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);184;3881;True;83;-10.2764638051652;2512986.99470418;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);302;3809;True;117;-6.80937342845002;2715635.28119755;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;2177;True;41;0.668926206063482;101047.438282757;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;1369;True;41;-2.15087512513048;116123.773279862;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;1878;True;45;-1.00439833178642;108346.321911575;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;1246;True;42;-3.10671973797609;147114.179806761;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);26;10300;True;47;-1.97975655852444;55837.2611499568;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;882;True;41;-1.11570956331235;178599.95132848;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;1721;True;53;-4.16616152805726;155083.456175381;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);21;5233;True;51;-1.43355646019914;91253.7642561445;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);11;2027;True;63;-2.5280808491593;178794.91116657;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;1460;True;44;-1.12567908027663;175372.628875937;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);10;1197;True;49;-2.37751050276763;295616.120670937;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;3058;True;72;-1.08241093365358;323185.590552774;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);50;2672;True;78;-3.58731680092664;832327.354692344;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);44;11165;True;75;-0.875984225518353;93204.3547223926;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);25;1928;True;59;-2.34083481304196;576040.619603859;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);58;2488;True;62;-2.01494957138161;1137460.02941065;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);42;2184;True;75;-1.80492474413337;869867.54754998;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);101;11990;True;97;-6.96777289917117;316036.876606566;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);79;6768;True;83;-2.88617515016594;426926.909802104;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);57;2280;True;68;-6.68877657926409;1162974.08428172;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);129;4205;True;90;-8.57860507811204;1451609.43634511;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;11724;True;137;-3.97763724283386;234.305750475838;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;17206;True;151;-2.58965303472412;256.100823858621;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;19764;True;149;-2.30186479532901;286.44084529831;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;21553;True;179;-2.5779686971002;298.731655925;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;27845;True;191;-5.37542862199607;276.098847184868;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);12;34334;True;197;-5.9548097068339;327.481830185212;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);13;37238;True;199;-4.83439929639499;320.66296686254;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7919;True;112;-5.63750671538208;102.207234043541;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7564;True;92;-5.19872063366714;81.1576230785733;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;7011;True;81;-5.42688109767292;55.1981602668404;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;7757;True;105;-5.59058473272892;94.5173983477673;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;15623;True;92;-6.42447122019309;44.5640522769661;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1695;True;47;-4.73353114246548;30.8353072413717;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;3656;True;59;-6.07747431017826;37.5624608768949;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1820;True;42;-6.54424482388295;27.0252916216321;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;2208;True;63;-3.21418678665069;39.2071411346187;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1790;True;52;-2.22162542638328;28.4397754865393;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1994;True;42;-2.80900107459637;24.2355896025676;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);686;89191;True;72;-10.1170553472557;59.2862577307544;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);22;52380;True;54;-7.78020722351912;63.1658174154339;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);292;112396;True;70;-11.2756798422511;298.901402794089;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;3464;False;-1;2572.33266228066;2712.90921992003;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);901;829;False;-1;4685.3014712352;4762.86539608926;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;4601;False;-1;8634.13052132398;9458.16150599212;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);900;7492;False;-1;1283.89161305489;1449.4427921776;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;23027;True;49;-7.63897530035977;23.2551495549562;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1116;True;43;-4.74853103652608;39.6883631653889;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1497;True;53;-5.22663702638411;39.5653611022143;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5183;True;98;-3.95642906835582;73.5756664392091;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6939;True;94;-2.61507662511373;69.6494936735176;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5028;True;94;-5.482032080699;76.3890684124326;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;5768;True;96;-4.98358302553052;70.7018763594431;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5537;True;95;-1.14430075558783;77.4947618224284;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);2;5077;True;97;-4.09297298009396;80.1709924887858;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6327;True;101;-4.72292638149831;73.6356481464681;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6915;True;105;-4.20867710106459;78.1124858604896;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6531;True;104;-7.25257590314123;78.0050761802073;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);3;6314;True;102;-5.18570955705675;81.076216797706;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7052;True;104;-3.77337647324999;80.4650509211486;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7601;True;106;-4.71065722820408;69.784229090553;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6479;True;105;-3.24284743203347;91.7736379970901;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;6535;True;111;-3.92389522890391;82.3121540339855;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);4;7467;True;106;-5.19030087648437;77.0522468840493;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7533;True;112;-5.0460331885248;90.6497015796466;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7134;True;106;-3.45072433190104;86.6323910568327;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7637;True;106;-3.48479686428854;86.471325187855;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7772;True;105;-4.82389381618347;87.5157613609814;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;7934;True;113;-3.55916695702043;95.1850214521874;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);6;7660;True;114;-4.50425559787484;90.7063162865938;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);5;7806;True;103;-4.44983606205997;89.2079388938162;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9712;True;119;-4.00841192782524;76.6060700938447;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8819;True;113;-2.29431209176343;102.130955548294;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9539;True;118;-2.99981978427254;82.2245788633712;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8692;True;120;-3.43293382609048;109.474062229503;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8607;True;120;-1.25251459435894;92.8176901547847;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;9635;True;125;-5.785307501768;83.5507784634457;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8136;True;116;-4.45447229774503;93.277156445997;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);7;8925;True;116;-5.19990176234216;96.2722626616798;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);9;10952;True;118;-5.88384682846793;98.5499308451125;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);8;9774;True;111;-6.70531732454096;87.2239773674014;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;722;True;35;-1.04078716696784;38.0485187605062;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;592;True;30;-1.11653431027211;31.8257898477048;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;764;True;36;-1.44300771018224;30.840369273656;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;660;True;34;-1.03609821104964;31.0883087241886;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;566;True;30;-4.87682409744042;30.4913163728929;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1129;True;34;-2.23060558849096;33.4211078392737;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1120;True;42;-4.14457042723081;34.2996307565623;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;883;True;36;-3.13712575157017;35.4566572796814;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;854;True;38;-4.9750301866808;35.4944644335698;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1169;True;34;-2.64916660122583;41.8514918422383;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;912;True;36;-1.75424686644476;28.3536548999069;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;894;True;32;-1.33368127599448;40.675396210236;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1040;True;40;-3.47027367373538;39.3128381639539;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;932;True;38;-1.33240012222038;31.9341804944153;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1411;True;38;-4.33475425228794;35.7738880013232;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1026;True;40;-0.00749480238703678;37.22940245968;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1603;True;44;-2.40349345706069;36.4036291197355;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1553;True;50;-3.38495709200264;37.9443103691363;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1543;True;42;-4.40381422622745;39.1440745142448;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 3]);0;1475;True;46;-3.26161936543513;34.2548149307991;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);39;6854;True;62;-13.1565404019646;39.6800231267153;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);351;39999;True;73;-16.9924537613563;46.8246922266729;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);58;9318;True;60;-15.1468321258349;39.349808512198;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);65;10013;True;58;-12.4956740204024;34.5173330342531;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);161;1380;True;101;-10.0517881843684;5158149.69569214;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);256;1361;True;109;-14.3300218237551;43087597.3416651;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8441;False;-1;-13.4149167499544;1026419.18493375;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8348;False;-1;-13.9912418709072;20.7562908507837;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;16245;False;-1;-15.8385056714884;6.69146443224589;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;8809;False;-1;-13.2171766059525;492105.341810053;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;6877;False;-1;-14.4458114853417;11.8137499580475;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;7200;False;-1;-15.0729908127721;908669.194326539;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2601;False;-1;-12.3353513891685;4230679.75439295;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;4225;False;-1;-15.1118244359048;39826469.2659855;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2366;False;-1;-12.1183400089834;37461577.542174;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;3096;False;-1;-14.7365097760505;30546434.5236692;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;997;False;-1;-14.6005764511698;11713573.741462;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1610;False;-1;-11.9168693124414;18116371.4188681;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2106;False;-1;-13.9093576030517;11489470.8866507;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;292608;False;-1;177.531295299505;214.082044822305;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);121;69786;True;41;0.050556145038762;137.025996375802;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;174093;False;-1;503.712404641809;526.170133288219;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;163792;False;-1;342.480893781131;391.743180236501;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;206457;False;-1;517.847864083;539.751558666174;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;118035;False;-1;314.638480995937;389.452878687978;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;187908;False;-1;271.564790900452;320.993937655406;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;170411;False;-1;296.193153112226;351.34335046803;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;86622;False;-1;711.771364715646;784.552964751338;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;104672;False;-1;466.87785484002;556.876509521108;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;70331;False;-1;653.537623404105;696.154242931246;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;51676;False;-1;1066.99890303262;1160.65767988729;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;72491;False;-1;1038.97148217058;1176.90469595629;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;39488;False;-1;1307.56659855311;1356.77411828508;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;40139;False;-1;898.039575716778;1061.88338496596;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;35002;False;-1;916.177907468193;1371.00087149322;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;46089;False;-1;2155.05980992587;2328.34284962648;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;23562;False;-1;2184.70710688034;2353.80363247666;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);37;48375;True;48;-5.00002516561892;69.1172459324027;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;12123;True;34;-2.95162766973953;57.1413939036056;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;31681;True;50;-3.56740023666219;65.5456348054539;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);70;55620;True;36;-9.30645216622494;43.0454624063315;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;22661;True;53;-4.79378766648954;114.632689992576;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);112;296595;True;39;-7.09760166400352;31.6084734720765;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);252;438824;True;65;-14.6925433022658;80.6641550628067;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;14585;True;33;-8.1512330763902;18.9385582762494;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;81464;True;30;-5.0133568211617;36.6197318170306;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);184;285600;True;219;-9.94377280346075;1403.71224597599;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;18673;True;134;-10.1086057080101;163.568365139411;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;19693;True;104;-11.5526805125091;124.209027149906;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;15196;True;202;-7.03160637911314;146.549529700133;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);54;218464;True;76;-6.36543073970082;55.413140726011;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;6535;True;111;-9.6904769622641;50.3676654546977;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);31;152938;True;89;-12.9978853832498;46.7347307406133;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);103;475700;True;96;-12.198999069216;36.5718910557016;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);48;182411;True;112;-8.01171709066847;33.1534767502489;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);87;110866;True;238;-6.13979047259036;494.94638361713;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);51;90091;True;79;-8.57215017483085;90.9139363495309;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;163047;True;193;-11.6898287160529;46.6420040778314;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);21;100854;True;88;-8.35348415200182;51.7499626476286;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);79;307846;True;80;-7.70825120929388;58.5610454633699;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);29;52251;True;75;-5.93779566967885;87.7315928978578;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);133;599869;True;105;-12.4038075305318;33.0212465310366;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);2;5742;True;102;-6.77357686583323;51.2543741425017;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);159;231272;True;217;-8.41772945828483;1626.83496825975;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;11729;True;115;-8.34041291129932;175.766023671555;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);3;9180;True;112;-3.73298184313154;167.318112552354;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;26619;True;216;-1.25243915669065;141.592763080533;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);69;246767;True;128;-11.0163447241695;38.9828886506424;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);26;32122;True;183;-6.85095163489382;1509.22468073896;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);4;8949;True;103;-7.45313658561677;89.7619412493232;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);33;2163;True;45;-11.1272701293824;38204.3744485316;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);32;2195;True;74;-1.36971008693654;118365.28521386;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);267;9589;True;77;-11.0080274780147;145390.14369163;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);121;3780;True;103;-11.3510863684363;208502.931682168;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);149;11557;True;99;-9.69069912907162;187437.431914757;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);241;5083;True;85;-6.79743476010466;1222631.6530802;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);338;3830;True;83;-9.78134116045298;2558214.52344313;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);502;3969;True;121;-8.51978494182812;2716612.51933365;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;2176;True;41;-2.3963871937501;101032.380950873;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;1323;True;41;-3.26052603449623;109726.915306684;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;1891;True;47;-5.44146424883622;107687.975852258;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;1527;True;44;-1.19542796507927;121476.941634906;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);60;10079;True;48;-1.58538967967927;56470.7509876905;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;886;True;42;-3.20432333608845;176208.448996276;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;1609;True;52;-2.86000644618907;173965.717099195;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);46;5228;True;53;0.139472706007789;91120.0565220581;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);25;2042;True;63;-0.909798211270011;175980.078816525;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;1470;True;45;-6.15219605357897;174241.159968814;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);22;1205;True;49;-2.05958607290524;293333.168696391;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);49;2511;True;67;-2.44886070524068;352284.047900213;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);100;1914;True;67;-6.63759405304168;1163892.09429972;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);96;10921;True;75;-5.16463331039699;95157.1250784895;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);56;1885;True;57;-2.39560982663339;595142.835289954;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);124;2492;True;63;-5.66767277099773;1134924.85937793;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);87;2186;True;75;-3.91078502485532;869137.467328556;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);197;3389;True;100;-4.13622616563839;1364684.89742817;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);164;6799;True;76;-4.16949480872728;414823.907735419;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);109;2262;True;67;-10.0277505953388;1160311.37882977;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);251;4180;True;89;-10.4044173529194;1454258.99484717;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;16281;True;157;-12.930970442808;216.635386539259;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;20749;True;167;-3.75912225071304;265.478792079167;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;22279;True;179;-6.94542855334226;276.179143462072;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;22484;True;189;-6.12291375237144;291.798188802132;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);20;30061;True;203;-5.09283164625063;312.487482595253;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);26;36709;True;217;-8.53131761775884;296.38169013082;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);32;39302;True;213;-9.42841903003561;354.906933649252;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;12825;True;111;-9.73051543403885;67.8410664156988;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;20982;True;96;-8.60429673482211;40.4706667862188;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;15486;True;87;-10.2974645555228;46.9151845042704;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;15861;True;109;-7.22829087238494;74.1071322606503;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;9420;True;98;-7.67083686738186;80.6107555960113;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;4966;True;49;-4.82627853175871;24.2725715535156;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;3045;True;64;-7.98656147945043;32.4582930125564;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2037;True;42;-5.23178323026302;26.2592292954232;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;3476;True;60;-7.11796898654479;30.6926930810956;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2568;True;51;-8.03528334711584;32.9020366583798;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2690;True;43;-8.04623878644561;23.2507740067458;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;23919;False;-1;119.531959614989;175.472536996491;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);94;46371;True;60;-15.2237317680141;155.513656822289;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;81469;False;-1;886.904428807923;968.427963973695;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1420;False;-1;2590.43361503253;2827.34249247553;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);901;273;False;-1;4716.40848104276;4737.50997070626;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;1693;False;-1;9311.48382603028;9844.2972242708;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);900;2884;False;-1;1400.78554584693;1539.27782887716;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;32819;True;53;-12.1283587323024;19.9022551669342;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1987;True;48;-8.11716549969744;23.979508573543;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;2060;True;53;-5.49029090177229;36.0510218122474;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7693;True;95;-7.83612340216746;74.6575045026776;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);5;6114;True;93;-5.96750918557193;62.7837231899718;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;8626;True;104;-9.26409258130502;61.7203410542502;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);6;5846;True;93;-4.3812748764111;78.1489527782117;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7739;True;93;-7.43000101639583;68.1834492547548;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;9636;True;96;-4.39415753566346;54.5710574340568;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7685;True;97;-8.62836037861145;70.4368715905235;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);10;9296;True;106;-9.75248237564553;60.3986171569633;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;6235;True;102;-7.60979531945291;81.2696389220496;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);8;7240;True;114;-6.55866117700973;79.5091888926101;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);7;5929;True;101;-4.39031273515944;81.9836120928658;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;9246;True;105;-9.02399594942009;64.9588977190158;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;9050;True;111;-5.99056547188849;72.778253420153;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;7457;True;105;-7.52240539557378;87.6314213048506;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);9;6915;True;113;-6.82489728676685;84.4322818074396;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8364;True;110;-6.9344330322009;79.0045627757573;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);13;10617;True;109;-10.5366260554822;64.7738775733284;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);11;8053;True;114;-8.08557738835279;82.7369793777906;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;9815;True;108;-7.86800258286589;77.3296958250269;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11056;True;113;-7.51022230223572;69.1550529043168;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11519;True;122;-7.3193167766274;74.7727416201415;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);15;9935;True;116;-7.46943009845692;83.5362490963433;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);12;7914;True;110;-8.97880443596432;101.110672515231;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);19;11285;True;117;-10.4632577015183;79.4405377623348;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);27;16212;True;114;-6.95180147431839;71.5239386180095;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;11414;True;122;-7.80610142301337;85.377130421863;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);17;11704;True;126;-10.7826443369719;69.2604962484559;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);14;8367;True;117;-5.46221635900707;90.4760875057093;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);23;12537;True;127;-8.17335351826442;73.4451972326658;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);16;9221;True;122;-6.20062893380793;96.9289616171292;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);18;10184;True;118;-9.09998837319302;95.3642276633106;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);23;12749;True;125;-7.12092646778287;77.0220962613416;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;801;True;34;-4.60685987439833;37.7772077954776;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;871;True;30;-4.93278761588628;23.3011937131617;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;760;True;36;-4.20305488531021;35.8991643196705;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1205;True;38;-6.70903804847445;23.8054968461627;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;624;True;30;-5.04349665236933;31.9059905347001;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1259;True;36;-3.69075341344906;29.4843834940874;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1023;True;36;-4.90754082250112;36.0184758644232;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;868;True;36;-3.90355380360316;36.0721943749204;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;665;True;32;-3.62594611625565;36.4502800831719;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1064;True;34;-3.97088018964152;38.889302881796;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1167;True;40;-6.24967127439231;33.5509108225202;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1104;True;34;-6.79225972741855;44.2680586128386;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1014;True;42;-6.04705285294783;36.615109236248;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1034;True;38;-4.69399552647455;31.267129232504;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1114;True;40;-5.16897528592557;31.8430146761683;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1226;True;40;-7.32798337426156;33.6149669814714;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;989;True;40;-7.83015407198988;38.1587177365934;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1444;True;44;-7.01428393790557;42.3173582438805;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1225;True;37;-3.40034278101738;41.7052456062431;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 4]);0;1211;True;41;-6.43664958188216;30.7363163300561;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);38;6801;True;62;-15.8137865800032;38.8882064258638;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);303;32938;True;73;-19.6081742704568;44.8925457173791;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);61;9586;True;60;-16.1299550444761;40.6042648829608;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);58;9243;True;58;-15.3515449918337;33.133223914072;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);148;1300;True;101;-14.1442989496084;7206383.04655293;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);222;1176;True;109;-16.3609963133132;37849951.1116165;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8949;False;-1;-18.030427403258;483797.056246959;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;8222;False;-1;-23.9652269014396;18.3901820457836;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;14896;False;-1;-21.7204984177111;8.10874303376766;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;7962;False;-1;-17.6656587859712;547632.886765143;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;6584;False;-1;-17.2588141133381;12.3199629897194;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;7254;False;-1;-18.683939739023;928843.496140782;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2581;False;-1;-14.5915536310696;4313967.73789813;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;4232;False;-1;-17.945581994127;45000901.7672;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2364;False;-1;-18.5636137730994;35418588.8594749;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2654;False;-1;-16.7727153231101;41297790.537228;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1091;False;-1;-16.2615382247477;14154815.6607535;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1552;False;-1;-17.4511090035464;55063707.5731575;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2025;False;-1;-14.5823335068229;9678208.73387433;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;299284;False;-1;161.633930843746;213.600541833026;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);80;47464;True;42;-5.53170623145671;130.601286071433;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;187780;False;-1;497.021369408547;525.025569511395;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;131495;False;-1;340.081932518544;415.41569852529;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;223668;False;-1;514.515934382726;538.572503985037;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;119834;False;-1;333.123751890586;388.528307229053;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;181138;False;-1;258.543157335392;361.698194262619;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;167348;False;-1;261.754131746863;301.596968477398;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;82661;False;-1;911.008334202234;971.497037855922;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;99039;False;-1;558.367168535294;637.244527939122;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;81233;False;-1;447.37666771718;601.397864630575;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;47859;False;-1;1077.5026860363;1166.25506023147;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;74498;False;-1;1034.76008509425;1177.1863524531;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;41443;False;-1;1255.95161583591;1330.21575565149;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;40797;False;-1;887.250269568497;983.785927401421;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;36386;False;-1;910.430800299458;1299.19094398732;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;47134;False;-1;2153.56877602441;2328.48056678178;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;24059;False;-1;2288.51659170029;2376.85749790558;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);67;88641;True;58;-1.73746286936345;69.4112409091064;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);49;109713;True;46;1.39195611065968;57.9404784906549;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);117;202843;True;62;-2.07243224555225;65.4841482228326;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);180;152382;True;40;-12.2066768889359;40.3614500703885;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);28;34892;True;47;-2.89125830098519;137.291666017152;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);152;392061;True;37;-9.93295786773695;34.8429416635505;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);244;374498;True;73;-13.8497516045747;68.2802693383005;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);1;9049;True;34;-6.25394581854403;24.2902070228712;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;36075;True;32;-11.0195952654825;36.9416311107075;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);180;289171;True;199;-11.5632211735896;1395.18491573327;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10155;True;123;-11.8941690342901;182.542536700716;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);79;230690;True;145;-12.7656154063945;87.8445819146137;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;22991;True;233;-7.4173842887831;144.613615060265;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);66;265801;True;103;-9.50716294328791;56.2496934394667;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;9711;True;108;-11.5129562779662;87.3579807935068;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;79785;True;88;-13.1062509270002;51.5948334605449;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);146;683141;True;108;-17.1617345454837;30.4174250794553;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);37;123307;True;130;-13.9365265925086;42.9882552633042;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);48;85482;True;200;-16.2405425771201;595.561974545282;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);4;9733;True;85;-9.37241359775682;77.6847822451003;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);120;357559;True;185;-11.3628184940649;54.6462950692636;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);29;145512;True;88;-13.6324572294524;45.9160352278136;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);78;303073;True;104;-19.5439680203354;56.9576712511177;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;37768;True;77;-9.64826813946742;89.5638458203501;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);209;897987;True;90;-16.8181967531297;37.4928974020269;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;23414;True;124;-9.49682751580938;64.5961262682357;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);170;247381;True;197;-11.1898979952747;1623.05300593937;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10436;True;119;-15.8057662290218;189.696378282484;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;36735;True;97;-11.0926887966438;117.158083284485;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;37902;True;218;-3.54906576210236;121.13162311264;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);63;238560;True;103;-17.9162317032847;36.6302310174333;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);52;68034;True;235;-7.21973040633071;756.640229484804;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;17071;True;119;-16.5448969226069;79.4158543513635;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;2177;True;45;-12.1344576996357;38281.5707004747;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);33;2216;True;79;-7.10955810541577;118145.039206145;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);272;9591;True;78;-10.7228134424091;145059.062608083;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);118;3771;True;101;-11.8601862594566;208716.073307697;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);147;11783;True;98;-8.52666841139003;183185.566022141;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);242;5085;True;86;-7.25512236095028;1222183.94101854;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);333;3758;True;84;-17.3693014907141;2607197.54548023;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);503;3901;True;119;-10.8938619123944;2751920.96512233;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);16;2197;True;43;-2.3632788970783;96031.0955415841;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;1370;True;41;-3.56994548865991;116123.556999092;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;1072;True;46;-9.20590614727876;175106.894782892;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;1250;True;43;-5.3314636668778;146443.551422902;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);61;10348;True;47;-1.58565486617772;55822.1834160027;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;889;True;43;-6.32504409119927;175104.092569546;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;1633;True;52;-7.86019101517912;170857.111091642;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);46;5236;True;51;-5.03319460763993;90873.6478023511;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;1304;True;51;-6.7801054597339;268412.465680435;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;1461;True;44;-5.11125205828345;175600.788069462;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;1221;True;53;-3.74213650051288;297389.185041488;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);44;2294;True;63;-4.59660563482282;345730.734816496;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);102;2164;True;72;-8.76799240868458;1054042.38801593;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);97;11072;True;75;-3.20848717143597;94076.9465381749;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;1893;True;60;-7.74067383613396;586727.823567727;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);123;2496;True;60;-6.92527802798746;1130724.47575322;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);85;2266;True;80;-3.67681060159992;838417.093242488;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);242;12343;True;106;-5.1999399416258;374557.730517205;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);162;6781;True;77;-12.253868667969;418365.706857534;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);110;2341;True;71;-9.72887835932552;1147376.30763607;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);249;4136;True;88;-11.5717323010159;1468646.97186777;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;19853;True;153;-11.8067290856601;184.390583916418;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);12;22678;True;169;-9.27063350463885;257.972973339533;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;20733;True;181;-4.05168148241855;273.604243505335;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;28290;True;177;-9.25055353836246;284.341925378505;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;32413;True;205;-8.64958340426239;313.831300985456;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);34;50294;True;211;-12.6523460635788;249.375633682552;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);29;37064;True;215;-9.70942149451376;344.462520222117;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;17275;True;107;-9.51550957216238;57.1952779944416;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;12141;True;111;-13.3276929730596;81.3616700112211;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);5;10963;True;89;-10.5068684008267;53.1409041347403;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;13958;True;108;-8.12722584787932;79.0662032639111;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;15858;True;104;-10.2990756233811;65.2206653898198;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3960;True;48;-6.84224758963916;34.6304848652197;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3066;True;64;-3.2699978129127;38.7881522386489;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3656;True;47;-8.22239623455983;26.4616085491286;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;4039;True;62;-14.8789510494402;41.032606635155;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3867;True;53;-10.175370671654;32.4897449645105;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;3925;True;47;-8.57443755169462;22.4734934668447;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;27635;False;-1;119.649264916419;175.392105220915;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);41;46240;True;54;-10.9291279255374;83.2098204618377;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;80509;False;-1;660.397460767724;983.939353494744;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);901;1462;False;-1;2592.02714581404;2822.68799446119;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;271;False;-1;4711.66558957257;4737.81843497349;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;1777;False;-1;9300.61612514483;9830.33360382832;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);900;2952;False;-1;1392.10536353388;1537.64484712617;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);55;148491;True;54;-14.7872239603492;19.4609076311863;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1119;True;44;-5.09818763478306;36.588457164298;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;2252;True;53;-14.2261336391492;31.8112968505542;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;7396;True;92;-9.27124333725906;63.7504818885367;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;11645;True;101;-12.4188689892852;42.4004622709297;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8407;True;105;-11.9486811143474;61.8088092383569;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);8;7428;True;99;-7.94032195717369;68.6499287951878;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;9378;True;113;-9.22610973292755;57.7190444789994;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);6;6592;True;99;-8.2984749668301;69.2751249591753;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8409;True;98;-13.6974859433956;62.3581564604603;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8234;True;99;-10.2180215301883;77.607242259714;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;8006;True;107;-9.57165900998054;77.955985865525;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8972;True;110;-10.0483278486477;75.6369789148722;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);7;6498;True;99;-11.5491484101292;72.7806903021177;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8599;True;105;-12.466678915678;77.4929521130789;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;8310;True;115;-8.1245584899017;83.7680504926928;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);9;6950;True;107;-6.14303424295032;83.7777724666232;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);10;8099;True;111;-11.4807523746333;75.6832104470528;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);11;7933;True;118;-8.92448667960608;81.3150443834558;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;9986;True;115;-10.1222632582063;76.1540334265435;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;10281;True;123;-10.4568101945099;74.0888571073447;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);13;10632;True;114;-11.4161518826677;76.0746572289202;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);15;9916;True;126;-9.86460857099153;78.7701747808806;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;15390;True;132;-11.4114512492116;59.4745061182541;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);21;13480;True;127;-10.4659438079329;80.7996540203778;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);18;12676;True;110;-9.77093374629849;75.0368419097893;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);17;10668;True;124;-14.3262007212398;78.0107618139673;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;12003;True;124;-11.1574405964002;80.3472965554908;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;14143;True;116;-10.3250542724869;72.693383257196;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;11467;True;126;-12.3327363592648;73.3496644051856;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;12929;True;133;-14.1954184894625;66.71022818075;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);23;13412;True;128;-11.5835591865104;78.9315759725095;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);19;11970;True;127;-9.91183156685148;74.611852419372;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);20;11475;True;120;-14.0453353484982;80.1754509726774;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);22;12175;True;135;-13.7253802871313;89.1671434898636;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;721;True;33;-4.56291064788384;37.4579336427826;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;877;True;34;-4.09879157278221;31.6684725510137;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;864;True;36;-5.58434949097421;37.9775295579632;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;823;True;36;-4.53133483451879;28.2555451626268;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;684;True;30;-5.18362107539244;30.6743206007646;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;851;True;32;-8.22344734804879;35.2293257419609;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;989;True;40;-13.1733651227167;36.5052052545017;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1024;True;38;-5.97833465858752;35.4344037175863;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;883;True;32;-6.57209011504648;38.6190734511607;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1087;True;36;-6.41507946065109;38.7938461326027;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1081;True;36;-7.08136647436089;26.8008779847338;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1030;True;38;-7.61135798507832;42.8196796014716;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1333;True;42;-5.62949263163385;35.2501514495349;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;972;True;38;-6.49018455641379;34.495957988072;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1041;True;38;-5.50798496483926;30.2044451167601;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1068;True;39;-3.87134898647261;36.7707590031255;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1245;True;40;-6.05091788923338;38.5510030207661;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1945;True;46;-6.01696433496163;34.7159406148624;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1075;True;40;-6.8929821250028;41.5293078591105;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 5]);0;1529;True;44;-10.8788660010275;27.8744976160438;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;6459;True;64;0;38.918625506995;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);141;33214;True;73;0;43.8250849978906;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;10102;True;62;0;37.4343127309486;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);29;9972;True;60;0;33.5318320355055;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);80;1433;True;101;0;1354421.15500212;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);114;1032;True;109;0;322927059.979691;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);643;14325;True;101;0;4121597.81608267;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;23765;False;-1;0;13.6651813710061;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;36196;False;-1;0;5.80911367089466;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9016;False;-1;0;8280002.86158792;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;10962;False;-1;0;16.1576171591001;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;18008;False;-1;0;2108333.31177591;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9597;False;-1;0;12904173.7857435;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);679;6890;True;110;0;98894516.2453297;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;5089;False;-1;0;84508994.8165837;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6652;False;-1;0;60224412.9509739;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3793;False;-1;0;21433333.7746807;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4768;False;-1;0;75875367.180458;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;9626;False;-1;0;5115004.39142811;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);165;153944;True;74;0;218.133404888459;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;36161;True;48;0;115.749469253902;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);377;182649;True;110;0;368.612240486315;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;347147;False;-1;136.275630116305;408.722751813019;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);75;40161;True;99;0;547.554019550112;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;296477;False;-1;70.6681291006572;265.607827955389;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;393941;False;-1;71.8343523226645;246.753393153966;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;334215;False;-1;91.5066494116109;327.743356935227;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;164921;False;-1;266.847339784659;903.505585205082;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;248467;False;-1;153.609701039661;487.882667118706;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;125097;False;-1;217.015842678411;789.320002431484;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;118794;False;-1;333.057890474776;921.832252488413;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;131760;False;-1;342.57111803232;1057.74989972343;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;78839;False;-1;278.740316786101;1058.0993211978;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;73824;False;-1;403.697576747166;1247.54316353792;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;69351;False;-1;454.061077413295;1477.60665491794;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;91764;False;-1;602.321759835838;1936.48979052811;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;57511;False;-1;830.449612872786;2159.71057717741;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);64;163002;True;56;0;72.2201242560458;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;25518;True;58;0;60.2696130802885;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);37;124113;True;64;0;68.3369931522096;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11365;True;39;0;43.4680495652238;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;10787;True;57;0;125.425062432356;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;226461;True;33;0;29.552110777892;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;212105;True;68;0;68.6704391190307;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;5780;True;30;0;22.8691124470608;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;131160;True;26;0;36.2580259791727;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);35;220107;True;188;0;73.2070588478878;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;15555;True;142;0;149.010818073845;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;35587;True;95;0;136.345415289492;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;6757;True;198;0;201.081072226176;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);41;297483;True;90;0;59.0332342173779;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;28067;True;131;0;73.4335121872558;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;49049;True;88;0;39.3425845305907;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);85;712321;True;200;0;40.880843889179;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);141;757210;True;149;0;52.3371247299558;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);164;568537;True;318;0;115.764312812753;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;45056;True;80;0;103.232419034215;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;124340;True;190;0;83.4997429987959;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;72081;True;95;0;46.3335509534122;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);48;361385;True;89;0;60.137229981786;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;41584;True;64;0;94.304692610853;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);74;656592;True;102;0;38.8315123442086;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;21176;True;133;0;89.0590483360656;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;32666;True;334;0;260.797521523476;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);2;10605;True;155;0;95.1918238453506;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;11655;True;100;0;97.4660658000663;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);34;182504;True;270;0;157.318731627731;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;121635;True;101;0;31.6382470861901;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);553;1838994;True;346;0;78.2640271365776;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);1;7128;True;116;0;76.1174627006516;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;2429;True;52;0;39919.3720256612;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;2175;True;71;0;153113.981934403;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;4809;True;99;0;116095.937546062;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;26871;False;-1;0;345770.238608754;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);51;1890;True;95;0;1259309.2395149;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);111;3756;True;111;0;1635899.03162279;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;10430;False;-1;0;1993208.53739601;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3151;False;-1;0;3299683.8176871;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;1347;True;39;0;118933.436999198;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;766;True;33;0;134044.804687121;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1653;True;51;0;190381.241583465;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;1323;True;48;0;184389.383478064;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;1353;True;48;0;129900.289008489;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;1163;True;43;0;101571.571845456;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;1559;True;51;0;220097.021430275;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;1842;True;71;0;473037.708298654;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;1356;True;57;0;321581.962724229;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;1985;True;54;0;234906.239944671;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;1805;True;58;0;346514.419972345;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);31;2827;True;78;0;482349.208126399;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);66;3227;True;89;0;897995.034379311;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);30;2225;True;69;0;510307.352768624;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);21;1976;True;68;0;404844.600848217;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);36;2112;True;77;0;757534.609440442;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);64;2922;True;90;0;991047.190407542;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);128;4148;True;114;0;1522618.61123428;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);39;1660;True;79;0;1091569.10382119;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;1546;True;73;0;784575.48334903;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);156;4688;True;112;0;1620435.37797601;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;44019;True;201;0;249.354504852664;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;61229;True;201;0;255.300059682066;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;74384;True;237;0;278.364174218783;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);54;158874;True;263;0;297.538926605844;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);109;288836;True;257;0;317.217829534032;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);110;262823;True;289;0;361.871154635353;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);121;268059;True;283;0;354.636140902077;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);31;53940;True;142;0;122.137619043082;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);16;30613;True;114;0;125.813767464883;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;33821;True;105;0;104.522313303598;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);28;48127;True;132;0;113.519883125246;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);31;63316;True;135;0;136.997531923203;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3453;True;49;0;45.6085668531182;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;6526;True;53;0;51.5432692865873;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3161;True;40;0;31.8371835025414;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;8432;True;59;0;54.1105185779612;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3471;True;43;0;48.0877690176447;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;3002;True;45;0;39.9050890252047;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;54017;False;-1;69.4351207881753;239.198818982501;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);44;57153;True;89;0;189.726410417215;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;115147;False;-1;539.689012747414;1436.59220513745;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;3282;False;-1;1549.96078851389;2874.0792596897;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);901;797;False;-1;2944.95985948;4748.2879220209;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;4214;False;-1;5002.42050850886;10066.7761914317;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);900;6764;False;-1;805.180385269514;1557.9742719172;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;111355;True;45;0;39.6259538907652;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1187;True;42;0;40.6334447170325;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;2004;True;46;0;37.0893371946945;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;12994;True;96;0;90.183315060444;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);3;7136;True;95;0;71.6508254836262;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9794;True;102;0;82.6380448032294;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);6;11467;True;103;0;90.0098022896983;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;10140;True;101;0;85.4566174981619;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;9982;True;102;0;82.5383229297014;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;7967;True;93;0;92.5502674421946;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);5;8403;True;101;0;81.639066289514;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;15752;True;114;0;97.4315274584149;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;13033;True;111;0;107.182886283032;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;12684;True;108;0;88.0782760244176;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);4;7679;True;109;0;87.8005837553825;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11047;True;111;0;93.905603571372;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11623;True;112;0;100.719793918497;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;11267;True;110;0;87.3557982971764;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;10128;True;115;0;93.0972906641242;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;13140;True;110;0;86.0779673209898;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);7;9756;True;113;0;95.6873103288213;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);13;17810;True;115;0;102.405536888039;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;10453;True;120;0;106.339291993349;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);8;10361;True;112;0;98.7670338416059;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;14233;True;112;0;88.1495846334484;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);11;14815;True;121;0;92.3216866471026;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;16040;True;129;0;89.9449434906651;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);17;19490;True;127;0;98.5464267875447;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);9;11895;True;119;0;95.0006177327547;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);12;13497;True;122;0;94.5803449390719;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);15;17597;True;128;0;117.653247081395;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);14;15647;True;122;0;99.1817516415008;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);18;19064;True;122;0;108.961295609413;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);22;23167;True;132;0;93.0146948343934;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);23;22608;True;121;0;115.206513094687;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1137;True;34;0;42.6322821625174;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;627;True;32;0;29.1781147569019;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1173;True;36;0;40.2464312074734;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;749;True;36;0;32.741431613896;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;737;True;32;0;36.365281659166;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1302;True;32;0;30.9324586980839;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;956;True;38;0;41.3194688807627;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;729;True;32;0;36.6270644704891;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;844;True;36;0;38.6197221248273;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1157;True;38;0;37.863433723738;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1246;True;38;0;35.2217766207865;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1070;True;34;0;40.0640083781772;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1140;True;42;0;41.7890008811276;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;902;True;38;0;37.3749734706185;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1149;True;42;0;31.9640105770771;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1220;True;39;0;41.9661264198992;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1432;True;40;0;41.8744491909659;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;2221;True;50;0;41.4462881724387;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1106;True;33;0;47.9401992035643;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 15%]);0;1388;True;42;0;41.1373850161653;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;7346;True;64;0;37.9317098941417;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);201;48321;True;73;0;46.6043933042064;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;10795;True;62;0;40.854671473155;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;10450;True;58;0;34.6452191253675;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);92;1641;True;101;0;3546891.10497715;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);124;1421;True;111;0;109070226.875417;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);744;19405;True;101;0;1091310.53108616;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;17266;False;-1;0;18.7772616511399;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;38254;False;-1;0;5.00235560334947;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;12930;False;-1;0;5608273.4057859;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;12212;False;-1;0;14.1976214141262;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;10729;False;-1;0;8086876.80634773;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;6720;False;-1;0;7182890.80444474;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7917;False;-1;0;80018654.8293636;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5762;False;-1;0;158295752.653426;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7702;False;-1;0;32660316.2582212;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3453;False;-1;0;36966440.5190254;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4961;False;-1;0;62216046.2328558;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5140;False;-1;0;23609997.880943;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);91;81569;True;57;0;222.92307017438;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);34;42854;True;52;0;110.11063834891;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);185;89118;True;128;0;304.017010779685;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;364590;False;-1;31.9310224774096;398.152835711714;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);32;17012;True;117;0;504.105858592827;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;280760;False;-1;8.79059248501861;300.693182478932;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;389599;False;-1;22.9120744570745;299.700106162307;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;296687;False;-1;49.8730019853473;325.846407811403;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;170837;False;-1;148.48118227579;869.425112000106;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;199905;False;-1;40.1021845852925;593.940896532702;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;140099;False;-1;107.835903744072;732.096961487784;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;126950;False;-1;204.95148476008;985.123017916645;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;137020;False;-1;208.042155683265;1126.24499137276;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;82046;False;-1;248.694228214027;1226.82492722428;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;83700;False;-1;150.186707521319;1081.60716292568;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;64403;False;-1;260.88639242729;1815.01251828361;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;96014;False;-1;354.091144557731;2004.9974086672;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;58385;False;-1;538.097255994932;2190.09120968718;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);61;168479;True;72;0;77.1663316353227;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;51083;True;54;0;61.5974575259993;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);89;321435;True;62;0;71.4959256555619;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;6488;True;44;0;42.0714614823156;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;44718;True;53;0;92.6318956362159;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);22;152000;True;45;0;35.4651321996675;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);169;502502;True;70;0;73.6931472907403;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4717;True;29;0;26.0241849298296;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;42798;True;36;0;38.5337842893444;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;55720;True;214;0;65.6475415866136;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;32346;True;136;0;98.1029835263586;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;37187;True;105;0;135.813932456718;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;13460;True;234;0;179.312275325114;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;137055;True;90;0;54.0910728476256;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;8359;True;102;0;93.5690593840026;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;145122;True;110;0;45.526751975089;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);56;533608;True;155;0;30.7872196845719;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);43;299085;True;166;0;38.856717544504;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);247;1009455;True;277;-2.47814850172644;72.4503081299836;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);67;170643;True;83;0;110.878412563039;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);129;620306;True;146;0;68.5639683334671;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;70339;True;95;0;50.3754809933532;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);29;228274;True;83;0;56.6014464888507;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;61920;True;73;0;86.4986033404566;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);65;601992;True;185;0;40.6091503569732;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;10934;True;122;0;103.710767220787;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;26331;True;233;0;122.000881248199;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;9300;True;129;0;127.079818503925;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;15549;True;93;0;159.766603534784;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;46283;True;292;0;163.718125750827;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);222;1245378;True;152;0;54.3131225828685;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);33;109618;True;206;0;169.666216895975;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);4;15141;True;113;0;85.3444978457296;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);22;3844;True;57;0;43145.9343275768;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;1782;True;70;0;167645.76318777;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);47;4242;True;98;0;128847.912244034;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;31259;False;-1;0;353783.622476989;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);116;3696;True;107;0;1643282.37396461;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);79;3528;True;96;0;1186991.18621558;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);82;2140;True;90;0;2055215.01945077;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;5482;False;-1;0;4590554.81192095;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;1864;True;58;0;66806.260489541;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;2308;True;51;0;132178.329066038;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;1260;True;50;0;223459.726546773;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);10;1706;True;48;0;217602.534060801;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;1548;True;47;0;224587.631049513;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;2075;True;48;0;214664.241081166;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;1301;True;51;0;296050.23428407;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;1725;True;66;0;528098.387712263;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;1711;True;62;0;343045.684377703;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);19;2468;True;60;0;310725.251079259;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;1768;True;66;0;277513.880188886;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);30;2419;True;77;0;582085.39978833;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);163;5870;True;101;0;1439311.85765634;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;1995;True;80;0;542624.808824341;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;1913;True;60;0;488599.375565907;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);57;2948;True;91;0;993327.889009663;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);119;5413;True;101;0;1133087.79456799;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);68;2117;True;75;0;1812593.54319757;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);54;2621;True;81;0;987597.857981426;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);50;2125;True;72;0;1176047.6719143;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);83;3517;True;93;0;1223595.01657718;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;104293;True;203;0;220.28939434807;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);49;184104;True;223;0;279.056177789884;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);39;135785;True;197;0;273.576327219853;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);91;285254;True;231;0;278.774981651494;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);123;348367;True;255;0;288.349671439504;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);185;465706;True;271;0;326.609379821463;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);237;535947;True;283;0;345.134685353952;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);53;115432;True;133;0;103.456347202959;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);82;152812;True;112;0;145.350009549534;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);48;101057;True;104;0;113.046487348792;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);42;92809;True;138;0;106.847020680567;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;48180;True;119;0;121.160171471537;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;18351;True;47;0;44.6799963316293;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;19580;True;54;0;51.734670450178;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);1;15671;True;44;0;35.4884080470099;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);3;28757;True;57;0;47.461343242138;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);2;16642;True;49;0;49.3719425224878;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;4660;True;39;0;43.1919708532797;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;50786;False;-1;46.6262112384517;250.9827327035;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);77;103448;True;92;0;196.46055297543;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;131929;False;-1;202.655258177682;1451.91575489384;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;3572;False;-1;746.351803130519;2901.05872055836;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);901;845;False;-1;2038.56823508948;4769.9279668337;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;4625;False;-1;3828.25453384869;10159.1857966152;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);900;7579;False;-1;289.145595418108;1572.07577088006;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);258;1075108;True;44;0;48.0912965505195;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1404;True;43;0;44.3070913784373;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2580;True;51;0;49.8297915042911;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;9189;True;94;0;74.1969013204452;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;12268;True;93;0;81.2577762816679;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);5;10389;True;108;0;77.6116920086941;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);7;12684;True;100;0;79.306275452241;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;20820;True;104;0;69.1006599991968;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;16529;True;107;0;72.1841989432671;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;15870;True;108;0;92.0937656323681;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;15079;True;108;0;87.7626838773296;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);6;9718;True;106;0;90.2226984498349;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;17791;True;106;0;94.7739390066052;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);13;21624;True;112;0;88.6865059201143;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);9;13079;True;111;0;87.5118697817447;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);8;12540;True;112;0;91.0297161070969;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;16474;True;115;0;86.4448506286352;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;17038;True;106;0;75.0470219200123;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;15719;True;117;0;101.158010868813;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;21175;True;115;0;79.4383861788395;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);11;15983;True;122;0;86.9383227481974;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);12;16572;True;121;0;91.082503815792;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;18523;True;121;0;78.6140208203515;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);14;17819;True;120;0;94.014791187872;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;19205;True;110;0;104.233137041814;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;19564;True;117;0;99.4002337191744;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);25;28732;True;117;0;107.67988663621;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);23;27109;True;119;0;93.7068951209056;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;21176;True;134;0;96.7626549441553;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);16;20252;True;122;0;96.1241359075154;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);15;17833;True;123;0;100.794063053943;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);21;21900;True;131;0;108.283080417063;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);31;32715;True;132;0;120.027344609482;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);20;23096;True;121;0;106.223793641866;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);18;18889;True;130;0;90.7444872895916;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;966;True;36;0;41.4251206389914;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;519;True;28;0;29.68693952693;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;737;True;32;0;39.8362611502847;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;765;True;36;0;29.6598155742194;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;580;True;28;0;33.9022428404065;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1097;True;32;0;36.7270612018633;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1688;True;38;0;38.0549049680754;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;866;True;34;0;37.3508119431161;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1151;True;39;0;36.6037023654865;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1103;True;36;0;40.7715479342758;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1129;True;38;0;35.3126472421162;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;802;True;34;0;38.1778492278536;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1457;True;42;0;43.3852031672416;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1071;True;40;0;35.1007097089767;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1117;True;36;0;38.7817699907731;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1311;True;42;0;40.2225245404243;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;2239;True;40;0;44.4701354025555;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1801;True;46;0;46.1839284990551;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;963;True;34;0;44.0636848089728;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 20%]);0;1577;True;44;0;38.2521026955903;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;7481;True;64;-8.67669628465124;39.6406257669366;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);111;28973;True;75;-7.30856802818745;41.1872696625369;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;10381;True;62;-6.97988613850875;37.2256160204235;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;10146;True;58;-4.75848231508231;33.4959972942091;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);90;1594;True;103;-6.53145235347847;13165343.9558157;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);116;1258;True;109;0;200838198.763723;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);638;16488;True;102;-8.31511970253602;15.3057466653119;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;22680;False;-1;-10.9305586038968;14.5499910787088;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;33751;False;-1;-6.46428576154239;8.25266053198138;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;17916;False;-1;-3.94016270941927;1242974.9617566;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;11879;False;-1;-9.09917762981237;13.7544823996362;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7356;False;-1;0;6859007.99676475;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5387;False;-1;0;55438029.3689475;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7988;False;-1;0;76826728.0376302;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5037;False;-1;-9.10315498323526;69807418.6537448;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;6074;False;-1;0;56254446.3132354;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3721;False;-1;-266750682.158695;63494592.0049299;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4394;False;-1;0;97970445.9367452;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;5752;False;-1;-1.17915367392781;26488831.1031214;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);492;418705;True;71;-93.1487007161285;216.030808740532;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;9438;True;54;-2.05666630090704;154.915619772338;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);331;156535;True;149;-87.5206773005756;287.889889915304;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;370964;False;-1;-122.051804012308;396.183594656328;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;16393;True;118;-56.0475767763752;553.302827573805;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;307392;False;-1;-87.5202063582769;266.307626177801;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);802;368461;True;142;-93.2676381522012;239.980155667173;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;304355;False;-1;-105.464167334421;354.536767268823;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;169052;False;-1;-460.663198682599;903.82468963646;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;194281;False;-1;-171.351005221898;625.857497288386;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;137538;False;-1;-219.87537985419;752.806170123123;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;136156;False;-1;-285.872842314158;904.801029913228;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;137814;False;-1;-352.895221128458;1160.09081100138;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;84736;False;-1;-453.305107945439;1200.91854091336;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;80124;False;-1;-233.153785989817;1349.91837662775;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;70077;False;-1;-717.562059774037;1935.56187646213;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;95602;False;-1;-484.503118495645;2022.11371848167;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;60713;False;-1;-518.433787687342;2283.91682688;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);249;737486;True;58;-50.3306229779047;85.7376801840343;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;143195;True;50;-22.6268317966463;66.9629542797835;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);68;264165;True;62;-44.3506195707456;77.1899740820698;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);2;6935;True;32;0;25.4776173814659;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);17;55176;True;77;-17.8397723485036;84.7066389878529;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;50602;True;29;-7.70438560415908;40.5591911815658;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);281;1167763;True;69;-90.02473083042;63.9053302591341;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);1;13025;True;28;-1.83220096125619;35.6429786661209;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;41104;True;29;-3.44110446019787;34.6147403955474;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;145688;True;304;-35.5633767915998;88.4624729748036;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;19470;True;117;-15.8280032109924;115.114600903665;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;21677;True;131;-32.5991968940955;124.73549382445;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;71364;True;221;-333.574686274428;163.480681075746;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);14;119514;True;86;-16.2220453866607;55.1406351614037;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);3;16610;True;109;-11.4414587695772;84.0401025618052;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;55150;True;94;-11.8866017230136;51.8572912583019;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);131;1033151;True;159;-48.8243950609094;50.1755207137798;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);25;180046;True;103;-24.1933165974961;34.6534533788041;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);430;1434822;True;287;-61.4606710077082;83.0144985242538;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);62;136402;True;83;-63.2762995279699;113.920690441951;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;124891;True;183;-21.2328965017331;57.5209839510459;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;183238;True;106;-72.5388961236249;49.6087689270395;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;160578;True;87;-24.5067004019309;56.3860626634559;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);139;374297;True;80;-33.5920606575584;106.353827122232;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);99;794301;True;176;-33.7193386681062;41.132278361793;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);5;20321;True;110;-48.8462852597602;108.773125443584;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;119396;True;198;-38.5876952742715;100.29264309183;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;22258;True;136;-10.5272516029634;136.912681853945;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;81588;True;97;-48.9802190195349;128.060709583539;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;41083;True;322;-15.7490723219636;233.489333748042;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);139;819436;True;112;-115.901534732243;50.6995816979287;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);329;978286;True;237;-54.135471331914;85.2931507974679;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;85462;True;133;-77.085613568412;103.162512738259;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);29;4976;True;68;0;41108.2565138;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);16;1993;True;76;0;153000.106011997;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);41;3795;True;109;-3768.20818645139;140703.842808475;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);89;7055;True;148;0;238526.765511563;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);134;4022;True;111;-1361416.15435224;1817748.5866983;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);132;3586;True;92;0;2266062.27516337;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;11209;False;-1;-61824.1450963775;3498849.42804093;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4604;False;-1;-168779.873376504;6179535.13805383;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);6;2310;True;43;0;81483.3186899206;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);8;2387;True;48;-1921.57155089761;105906.596780217;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;2010;True;56;-4786.75164345959;262241.598642031;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;1741;True;47;0;218954.499633666;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;1552;True;45;0;170822.948877862;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;2459;True;55;-10072.9495555647;185769.770687814;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;1974;True;51;-23.9917166262748;271482.728074424;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);33;3685;True;79;0;378228.735562642;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);23;2115;True;65;-3973.58454815694;483087.956429888;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;2256;True;63;-7.34221067738116;317767.550308116;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;2707;True;71;-33.6594427946964;493214.878497725;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);38;3204;True;77;-37545.8203858148;544263.67778444;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);44;3938;True;91;-273.3444254182;516371.364408024;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);46;4132;True;94;0;494964.546993928;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);31;3402;True;73;-24524.6515430193;385394.801781018;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);32;2509;True;84;0;614056.236631403;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);159;8934;True;128;-113934.127375174;924674.218770183;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);133;4267;True;105;-394516.487120287;1733192.50108767;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);60;3725;True;93;0;798679.206254318;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);39;2371;True;75;0;821949.005761454;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);273;7600;True;122;-36055.616669469;2094799.07636256;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);92;368223;True;195;-76.4153263564713;227.766649985572;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);172;601325;True;197;-81.2708031745735;272.050649966623;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);338;1006061;True;193;-144.398042827358;262.436986838649;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);432;1101456;True;229;-153.073344880021;307.057529547116;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);458;1058438;True;233;-156.335797566217;322.141955520556;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1730609;False;-1;-156.302090293105;373.209834580056;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;1448839;False;-1;-208.466807373256;414.736424310148;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);579;1025384;True;120;-67.0696220104601;70.9662470924086;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);256;522427;True;107;-50.2540400800329;85.3374055493138;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);482;1211350;True;91;-34.542504528528;53.8319167827315;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);288;578186;True;111;-76.7749827206188;97.4134807376364;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);107;229807;True;107;-57.9608549267369;120.633361112008;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;97700;True;48;-9.96368454757876;45.3433295480908;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);13;98659;True;55;-9.19623867115938;56.3696350374781;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);7;54477;True;43;-13.6080604112359;40.5464040064088;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);26;196927;True;54;-20.9806036133797;52.5070064240084;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;30500;True;47;-7.54225137821102;48.9141446572594;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);4;37725;True;41;-1.26883034719024;41.8404831420448;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;54035;False;-1;-65.8944196116691;320.025994963676;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);161;310852;True;88;-35.5959342924942;75.5500389625002;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;124920;False;-1;-471.121969792167;1611.66178116526;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3548;False;-1;317.200040020243;2864.08863129158;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;779;False;-1;630.905870354486;4803.03185224074;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;4535;False;-1;-822.355382149492;10020.0422527296;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;7673;False;-1;-135.868633746441;1570.02796725543;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);900;3596849;False;-1;-23.6020366574372;48.9018650064357;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1229;True;44;-4.79779218772593;43.0604446964642;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2139;True;48;0;42.9879547923618;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;18784;True;95;-18.9761798466199;81.5218193459463;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;23417;True;104;-18.8222329767601;73.8335184709794;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;17200;True;109;-11.2364933647074;74.1373547363453;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);9;16616;True;102;-15.1725381786661;69.8277446705668;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;32336;True;107;-11.7493188425709;84.9538918772564;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);10;17611;True;106;-2.30652682106184;83.6494244857032;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);11;19569;True;97;-8.26440265881394;82.6147241481943;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);15;25020;True;110;-35.8650678043801;86.7226719655368;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);25;39145;True;107;-8.51826684577152;63.6146858943128;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);20;32877;True;113;-30.4740545314318;81.9701829460687;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;20499;True;106;-7.54705400941128;78.4600521238576;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);21;32187;True;112;-15.0084849428561;80.4900520616028;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);18;27635;True;109;-4.89058118652622;96.9475044068169;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);12;19645;True;118;-8.86636146916514;86.799941801036;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);27;41046;True;116;-15.6858938295489;78.79930174505;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;36900;True;116;-38.7819285792873;85.0447532875445;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);53;70758;True;112;-23.0116171575566;78.3938687838155;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);25;33950;True;110;-14.0639026714175;93.2340856998808;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);37;49915;True;114;-19.6783931118334;72.7309977603871;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);28;34505;True;120;-5.67181941685658;88.4426629041738;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;23830;True;120;-13.5424952908968;87.1880091258406;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);30;32140;True;115;-45.1039770660972;87.399375411182;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);38;46746;True;123;-22.1737373708241;100.8087009343;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);80;90176;True;113;-34.4965862307971;77.9598286469401;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);95;107119;True;125;-11.7484836476886;71.9353445300047;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);45;49811;True;121;-18.9380376685617;90.5258474014558;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);44;50673;True;121;-25.7993705047475;97.477000017378;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);19;23072;True;123;-6.82446922756202;94.3277551969061;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);40;44074;True;125;-25.5647094177839;94.8475209496538;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);45;48107;True;133;-10.3481455340005;88.1152616809421;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);52;55387;True;131;-73.232971082505;104.043441645817;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);49;51959;True;132;-31.0247594085502;112.043019742585;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;906;True;32;0;41.4835409173654;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;900;True;32;0;28.6877819680652;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;705;True;34;0;36.4937178052958;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1057;True;32;0;30.412264281362;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;621;True;28;-0.1107089934107;33.3752326016083;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;882;True;32;0;35.137115611081;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1554;True;40;0;40.0918967576256;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1281;True;37;0;37.7691471039567;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1076;True;38;0;39.2744082414887;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;867;True;36;0;36.8732371125004;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2641;True;42;0;22.2814333949954;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;747;True;32;0;40.9470161468714;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1026;True;40;0;35.9632722975228;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1344;True;36;0;37.0101872257608;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1208;True;36;0;32.9460735993102;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1005;True;36;0;40.5347083235065;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1760;True;48;0;41.643098716749;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1893;True;49;-3.93209712489232;46.3170561111975;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;1731;True;38;-5.79615723647846;43.0389848348177;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + N[0, 30%]);0;2087;True;39;-5.31342218106509;50.9725197086374;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);17;6770;True;62;0;39.4209710518768;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);157;41267;True;71;0;47.0311543020381;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);25;9087;True;62;0;39.5801277500774;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;9970;True;58;0;33.5768934597488;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);67;1234;True;101;0;1876381.06288756;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);118;1401;True;111;0;56352827.3655336;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);635;17495;True;102;0;987308.379306793;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;17515;False;-1;0;15.138222299608;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;46175;False;-1;0;3.0925132266628;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;16678;False;-1;0;9269320.81408537;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;13152;False;-1;0;14.05508246409;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;18862;False;-1;0;2299215.61283681;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4350;False;-1;0;15020087.2113542;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6786;False;-1;0;173650513.142184;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;5420;False;-1;0;83492178.1090687;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7467;False;-1;0;45441933.2448433;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3637;False;-1;0;31444499.573683;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4769;False;-1;0;90275674.2599627;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;6674;False;-1;0;21870266.2910803;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;651381;False;-1;167.238264412451;203.902761210179;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);81;97965;True;34;0;130.254388306959;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;381117;False;-1;494.000075742602;525.381275253416;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;343920;False;-1;340.100043143705;382.37520996886;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;440962;False;-1;509.200339148939;538.733896134453;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;256415;False;-1;376.211614754615;478.378033123176;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;384510;False;-1;212.800291822851;266.927883453671;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;305632;False;-1;349.601658094675;376.102781131038;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;161186;False;-1;712.502220401076;819.123249070447;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;208777;False;-1;457.9067418566;550.042101510281;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;128165;False;-1;477.693819007182;588.872615426994;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;92828;False;-1;1022.40187712489;1134.57925969435;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;152487;False;-1;995.878453646357;1179.34903533057;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;86694;False;-1;1005.14853332986;1214.90865281945;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;87730;False;-1;615.607604545358;814.847672431783;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;71809;False;-1;1091.05701958055;1287.8857015325;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;95970;False;-1;1895.25755014036;2102.45056406969;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;54005;False;-1;1620.72909723326;1963.57155886599;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;22584;True;50;0;69.8348463180612;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);22;94183;True;40;0;57.5779372641643;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);223;706482;True;50;0;65.0377672827345;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);104;155631;True;30;0;50.3936497366054;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;45591;True;54;0;94.1789057510126;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);53;300679;True;31;0;33.0586809603148;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);581;2621737;True;54;0;61.019089764014;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2939;True;27;0;22.7700521446196;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;26799;True;24;0;39.9175555468702;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);37;119289;True;243;0;1338.91675370269;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;21418;True;137;0;153.266331358741;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;13246;True;106;0;124.761262299286;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);19;100899;True;259;0;131.972254553955;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;250582;True;76;0;58.5034252184875;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;2688;True;95;0;93.8103802671904;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;96726;True;93;0;57.5456175602447;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);47;468444;True;93;0;39.2442733169037;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);13;111246;True;103;0;33.2691024443111;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);29;94896;True;235;0;505.745437166197;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;28541;True;77;0;88.3386437294286;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);124;651086;True;194;0;58.0584886709791;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);17;113445;True;93;0;57.9168486729137;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);33;275304;True;76;0;58.3889594153474;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;28569;True;72;0;89.4917681946722;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);80;754715;True;109;0;39.5096679462957;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;7265;True;102;0;70.3035021393567;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);55;176649;True;243;0;1485.53897993639;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;12767;True;115;0;175.271630187538;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;11909;True;97;0;135.848847845336;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;92031;True;239;0;131.057419870114;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);22;161689;True;118;0;43.1387808526625;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;48755;True;251;0;851.311034058726;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;15955;True;103;0;83.7328691961415;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);30;5064;True;40;0;40089.8860829753;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);42;4511;True;76;0;123349.018527027;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);41;3437;True;87;0;151997.174533756;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);314;18384;True;66;0;296677.869691706;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);33;1372;True;74;0;1217053.40369522;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);53;3112;True;78;0;925721.031998829;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);52;1482;True;74;0;2038179.74266461;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);389;4316;True;166;0;3447506.79805775;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;893;True;38;0;90353.4887010081;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1474;True;55;0;135578.874649343;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;1029;True;47;0;185160.65058477;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;1110;True;39;0;200180.56039707;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;1194;True;38;0;164138.77763629;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;836;True;45;0;139252.24420353;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;2370;True;72;0;157054.022071896;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;1872;True;53;0;182053.58943751;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);12;1801;True;59;0;269915.559210714;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;1210;True;51;0;202918.58692498;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);18;1957;True;66;0;368169.038820333;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);20;1780;True;56;0;536944.883687329;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);48;2218;True;70;0;1118490.01422539;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);14;1500;True;56;0;373964.788441242;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);15;2198;True;61;0;274684.673716564;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);27;1908;True;60;0;668810.55943052;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);38;2370;True;73;0;782790.297203099;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);74;2404;True;93;0;1505005.31489559;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);41;2037;True;96;0;928170.251606148;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);54;2135;True;59;0;1369418.08269518;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);129;4150;True;82;0;1795393.3146567;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;15333;True;151;0;254.676159496122;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;19357;True;159;0;273.264508678335;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;22302;True;167;0;281.809683930565;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);8;28317;True;191;0;302.496903173642;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);9;29330;True;197;0;316.230658124414;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);11;35620;True;225;0;329.764034368994;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);16;44646;True;231;0;364.788813993749;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;7125;True;102;0;122.731008545994;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5900;True;85;0;100.662585741148;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;3075;True;67;0;86.6053171958102;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5204;True;93;0;115.108649756708;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5184;True;84;0;101.651739301575;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;946;True;41;0;33.2344740504191;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1249;True;51;0;45.3895476979605;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1048;True;38;0;31.506625619443;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1421;True;55;0;41.0224197479305;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;976;True;40;0;37.4950003416011;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;814;True;38;0;28.6008422924067;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);266;26106;True;65;0;127.049896936167;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);13;14750;True;54;0;250.395843806722;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);435;101895;True;82;0;973.120293287817;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;3706;False;-1;2462.91293698871;2709.95251147087;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;865;False;-1;4497.47993943094;4760.78526805059;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;4555;False;-1;8422.05929491066;9501.31356542598;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);900;7512;False;-1;1244.45934945837;1459.12468283043;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);1;7687;True;41;0;25.4792961408663;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;950;True;42;0;38.4516022910159;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1721;True;45;0;45.1978282531619;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4995;True;89;0;83.5072465104314;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4668;True;86;0;78.3160592656795;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4883;True;90;0;84.4530636045694;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4935;True;91;0;80.0523973765075;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4711;True;89;0;83.064714700938;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5600;True;92;0;88.6581170594686;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;4999;True;91;0;86.9087679855943;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5695;True;100;0;94.0371590433083;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5782;True;97;0;93.2773513643538;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);2;5279;True;100;0;90.8727773179511;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5800;True;96;0;92.9063901158374;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;5638;True;99;0;90.305524515099;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6000;True;106;0;99.4189734093198;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6010;True;103;0;93.7062672600477;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);3;6134;True;102;0;94.1128812099342;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6576;True;111;0;101.538391357206;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7023;True;104;0;92.0750143864111;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;7267;True;109;0;95.3978532913525;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);4;6191;True;100;0;96.6963335849628;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7137;True;107;0;102.343764130779;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;6807;True;109;0;102.275200734015;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;6721;True;103;0;92.7542399072419;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7185;True;107;0;101.173083793446;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7318;True;109;0;103.948541128125;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;8402;True;114;0;103.399945258544;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7313;True;112;0;102.634204821936;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;7987;True;112;0;108.486912110418;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);5;7150;True;114;0;102.352457457956;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8186;True;114;0;98.8249515629891;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8394;True;117;0;107.822543686931;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);7;8597;True;119;0;107.692386887905;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);6;8054;True;115;0;105.867072907995;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;869;True;36;0;38.2592586640948;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;534;True;30;0;28.6661924968188;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;705;True;34;0;35.107062806221;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;791;True;38;0;28.9857031681983;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;557;True;28;0;33.457521267283;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;808;True;34;0;32.1686842592628;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;881;True;38;0;37.1245020169184;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;787;True;36;0;36.1595351193511;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;798;True;36;0;35.6060741386047;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;903;True;36;0;36.728540588317;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1182;True;38;0;25.5622232528234;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;899;True;36;0;40.5853551938838;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1010;True;42;0;39.247163514798;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1009;True;38;0;35.5601695531158;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1085;True;42;0;34.9920786572196;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1208;True;38;0;32.7715074632211;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1566;True;44;0;38.4439232484068;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1189;True;43;0;40.0078807502342;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1579;True;42;0;40.8551041959112;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-5%, 5%]);0;1170;True;40;0;31.0509359653916;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;7238;True;62;0;39.8360227659935;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);157;39943;True;73;0;46.0304765661206;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);27;9587;True;60;0;40.4554555690752;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);25;9090;True;58;0;32.2429573103511;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);73;1365;True;101;0;1560374.04885474;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);259;3726;True;109;0;40101902.4977553;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);656;18083;True;101;0;1969542.5825702;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;24372;False;-1;0;13.1037133613162;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;43740;False;-1;0;3.37337544920105;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;9976;False;-1;0;2384372.70855271;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;13607;False;-1;0;13.4293411033962;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;19608;False;-1;0;1061119.25840678;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;11365;False;-1;0;4668049.03695373;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;6805;False;-1;0;162636682.244274;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5236;False;-1;0;76338555.9940238;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;7671;False;-1;0;34127611.8138709;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3846;False;-1;0;23384278.6315216;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;4593;False;-1;0;62161805.5770295;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;5857;False;-1;0;13743689.4431907;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);663;550273;True;69;0;204.478767002373;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;61843;True;38;0;128.841478392204;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;384995;False;-1;468.000070028007;524.237485248226;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;271691;False;-1;331.200803214312;421.126152689003;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;458475;False;-1;482.400457157195;539.364836839271;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;237358;False;-1;286.20041868221;331.822499286727;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);534;209436;True;98;0;314.608348447868;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);64;25941;True;95;0;357.131701347226;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;179400;False;-1;671.415851031437;813.404701471717;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;248263;False;-1;415.805564824308;506.269009495952;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;142944;False;-1;415.806818806197;505.210881184572;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;110129;False;-1;961.305124823798;1134.43075886417;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;151441;False;-1;933.075475889386;1176.86366563354;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;87422;False;-1;1033.21764645801;1285.24639803087;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;85689;False;-1;513.126159279666;906.139267819081;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;66337;False;-1;1107.02450258845;1479.99064933155;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;93263;False;-1;1726.42882579632;1980.57794695534;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;60128;False;-1;1674.47541165188;2120.72473199098;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);40;106680;True;64;0;69.1896942795065;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;25875;True;40;0;57.6282031503173;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;32469;True;50;0;66.1127442327579;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);86;169518;True;32;0;42.6278623615901;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);13;32950;True;50;0;137.482158478809;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);78;431156;True;34;0;33.7930415867169;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);445;1649075;True;55;0;59.3503015664388;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2216;True;26;0;33.2211604132061;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;124687;True;26;0;37.907691216821;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);26;80440;True;289;0;1351.90710002724;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;10924;True;113;0;174.395138806511;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);18;95284;True;142;0;102.017850794214;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;69592;True;225;0;121.368065655257;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);47;338969;True;81;0;59.7529630187345;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2462;True;105;0;100.804090203181;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;113291;True;88;0;50.2461654974395;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);71;620088;True;96;0;30.9771059553891;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);89;535161;True;133;0;48.8820019646154;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);26;58533;True;238;0;619.616800234634;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;16538;True;75;0;83.3266326343432;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);161;762965;True;191;0;58.2399024888471;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;124207;True;88;0;45.0494091072644;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);37;274290;True;90;0;59.1070059495796;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;12231;True;75;0;85.2364588840104;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);69;581537;True;93;0;42.7514963092571;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;12725;True;107;0;56.2836675562962;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);23;58516;True;224;0;1777.80493431027;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;16423;True;125;0;156.237281890354;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;13351;True;99;0;176.10366135994;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);33;153888;True;235;0;156.279496221224;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;92398;True;118;0;32.860273940109;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);29;69661;True;272;0;602.392804138765;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;23526;True;110;0;89.9008651800716;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);35;5068;True;44;0;39912.5159774749;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;1779;True;62;0;137134.092442205;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);68;5747;True;126;0;145535.923269302;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);107;6157;True;81;0;261561.698855717;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);41;1694;True;82;0;1002349.71828136;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);91;2411;True;75;0;1718870.80513204;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);115;1954;True;96;0;2639210.77046627;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);296;3796;True;130;0;3000041.55688721;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;1614;True;40;0;60604.2013009845;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;1249;True;42;0;106611.016764892;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;1077;True;43;0;159958.439652562;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;1704;True;44;0;199602.877703353;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;1036;True;38;0;119546.876668523;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;1209;True;45;0;138783.627987909;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;2185;True;64;0;144759.580545009;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);9;1066;True;53;0;280804.818622396;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);15;2235;True;62;0;213059.811502947;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;1466;True;48;0;161648.546147049;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;1111;True;49;0;336410.390719434;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);36;2834;True;73;0;476020.63919562;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);29;2603;True;80;0;417733.820806623;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;1116;True;58;0;514350.153934367;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);17;2778;True;61;0;171855.817134023;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);27;2144;True;71;0;467921.522306991;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);37;2755;True;77;0;566119.460170273;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);99;2752;True;86;0;1726046.55364404;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);37;1966;True;83;0;759210.587391174;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);39;1583;True;66;0;1023996.78236777;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);187;5191;True;99;0;1724282.88396756;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;17950;True;163;0;248.728451173283;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;22540;True;185;0;265.86514453714;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;25862;True;211;0;279.673902621608;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);12;36269;True;205;0;308.464301290103;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);14;39397;True;245;0;307.271880255052;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);16;41060;True;257;0;333.29774726857;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);20;49660;True;263;0;344.617366427609;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6845;True;98;0;125.838508084103;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;8917;True;105;0;102.217988566869;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;5343;True;78;0;101.526515394193;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6305;True;97;0;109.404316532283;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6439;True;96;0;99.2417490941165;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1938;True;44;0;37.1277901226307;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2068;True;52;0;47.4550881851383;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;827;True;33;0;31.5332215820522;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1892;True;59;0;48.8395314176451;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1175;True;43;0;36.4979316833781;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1486;True;45;0;32.279076659596;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);446;31732;True;72;0;139.352660888616;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);20;18018;True;48;0;190.252724570178;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;151356;False;-1;994.081291629598;1181.85173673513;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;1620;False;-1;2403.77836905177;2800.60249047826;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;641;False;-1;4246.04204723381;4780.15158823101;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;3838;False;-1;8177.73229647192;9609.12239082185;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);900;6172;False;-1;1247.52793480872;1511.50311757486;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);2;11262;True;43;0;27.6011791093868;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1120;True;43;0;42.2490187130488;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;2100;True;47;0;48.8954702924609;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6158;True;89;0;85.0830188606304;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;5748;True;88;0;84.8147590664922;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;4906;True;88;0;84.2181325351335;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;5283;True;92;0;83.21814958405;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6406;True;97;0;89.9805354818561;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6119;True;92;0;93.9302092482896;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;5834;True;98;0;82.9752646479272;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6718;True;98;0;92.8490033444547;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6466;True;103;0;91.2851386543677;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);3;6006;True;96;0;91.0367441295707;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6252;True;96;0;87.5761107617575;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;7993;True;105;0;96.7352477117838;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;8108;True;109;0;102.347550182784;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;7026;True;105;0;95.5162918231613;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);4;6898;True;100;0;88.1873921429389;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;6892;True;111;0;93.749011302314;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;7631;True;104;0;95.1878141537373;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);6;8006;True;105;0;96.467153080139;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);5;6679;True;104;0;93.1252512395731;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8829;True;110;0;112.851156229535;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8715;True;117;0;109.30157752119;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8097;True;111;0;100.392696824373;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9840;True;116;0;101.385343805497;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8075;True;114;0;110.660586861908;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9550;True;115;0;107.239572138335;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);7;8566;True;109;0;94.7010459609187;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9479;True;121;0;98.9311966469213;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);8;9182;True;116;0;110.5334164568;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;10507;True;117;0;96.8908323038538;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;10270;True;117;0;103.037343809358;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);11;11259;True;122;0;115.382800655395;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);10;10322;True;115;0;120.799586662302;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;705;True;32;0;36.5613145481114;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;574;True;30;0;28.981174280276;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;744;True;40;0;33.8433837093525;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;733;True;34;0;27.8583899144149;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;565;True;28;0;33.6220575672143;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;989;True;34;0;34.0349422357884;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;890;True;36;0;35.2364188356572;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;799;True;34;0;37.5723742487521;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;948;True;34;0;38.9627925888084;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;783;True;34;0;38.9550477081039;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1018;True;42;0;35.7360193776244;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1003;True;32;0;46.9489959928803;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1024;True;42;0;38.5083830337416;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1172;True;36;0;35.5527432982028;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1111;True;40;0;35.9298410133722;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1347;True;40;0;34.380427174461;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1988;True;40;0;44.4082138455646;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1714;True;50;0;34.8974526615953;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1187;True;46;0;41.1508984854309;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-10%, 10%]);0;1012;True;42;0;35.3656896580906;
0;0;airport;p08-airport2-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);19;7419;True;64;0;39.4434904709546;
0;0;airport;p09-airport2-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);227;54590;True;73;0;49.2780293918671;
0;0;airport;p14-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);27;9722;True;60;0;40.0161834720414;
0;0;airport;p15-airport3-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);26;9096;True;58;0;34.7737517752388;
0;0;airport;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);77;1396;True;103;0;8102897.39708489;
0;0;airport;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);73;555;True;109;0;315992166.945664;
0;0;airport-adl;p21-airport4halfMUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);693;19043;True;101;0;568070.382423213;
0;0;airport-adl;p22-airport4halfMUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;16929;False;-1;0;864562.233834765;
0;0;airport-adl;p23-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;37126;False;-1;0;4.9637553377073;
0;0;airport-adl;p24-airport4halfMUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;11661;False;-1;0;19489083.1218433;
0;0;airport-adl;p25-airport4halfMUC-p5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;14256;False;-1;0;13.0325011033017;
0;0;airport-adl;p26-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;19170;False;-1;0;322729.03437476;
0;0;airport-adl;p27-airport4halfMUC-p6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;11130;False;-1;0;2863178.02608819;
0;0;airport-adl;p36-airport5MUC-p2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;8144;False;-1;0;76813472.0835822;
0;0;airport-adl;p37-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5478;False;-1;0;83741441.3853459;
0;0;airport-adl;p38-airport5MUC-p3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;5576;False;-1;0;62840898.2007061;
0;0;airport-adl;p39-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3791;False;-1;0;36833633.850894;
0;0;airport-adl;p40-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4729;False;-1;0;77663276.7568148;
0;0;airport-adl;p41-airport5MUC-p4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;6108;False;-1;0;14640904.7761553;
0;0;assembly;prob01.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;701124;False;-1;149.836914211622;201.570312073319;
0;0;assembly;prob02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);41;48442;True;51;0;148.467435437283;
0;0;assembly;prob04.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;385371;False;-1;440.465805428273;526.705520000307;
0;0;assembly;prob05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;279887;False;-1;306.000079762191;411.949512145215;
0;0;assembly;prob06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;462866;False;-1;265.200269448012;438.438396240547;
0;0;assembly;prob07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;240833;False;-1;314.513985072735;462.212078319789;
0;0;assembly;prob09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);388;127806;True;112;0;503.05637088416;
0;0;assembly;prob10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;349559;False;-1;236.302887972725;307.078007813505;
0;0;assembly;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;162468;False;-1;642.664069930121;833.529200110154;
0;0;assembly;prob13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;236595;False;-1;242.133305023393;469.624046865948;
0;0;assembly;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;130419;False;-1;403.050730764005;709.417021940036;
0;0;assembly;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;96688;False;-1;910.125331296877;1142.27471009309;
0;0;assembly;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;148486;False;-1;893.16778046152;1181.60081716721;
0;0;assembly;prob23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;87514;False;-1;623.909088715263;1051.43138703575;
0;0;assembly;prob24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;81112;False;-1;713.230360161388;1032.07139658581;
0;0;assembly;prob25.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;69297;False;-1;1154.53671894038;1507.44506507256;
0;0;assembly;prob26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;95441;False;-1;1664.02251230554;2051.12232483594;
0;0;assembly;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;62438;False;-1;1315.88918688804;1803.95138772375;
0;0;blocks;probBLOCKS-10-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);93;236424;True;66;0;71.0615433978488;
0;0;blocks;probBLOCKS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);34;142525;True;54;0;58.3678941167855;
0;0;blocks;probBLOCKS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);174;567602;True;60;0;66.1958635898444;
0;0;depot;pfile13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);79;164105;True;31;0;38.5480917048408;
0;0;depot;pfile3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);18;39467;True;47;0;116.042037972888;
0;0;driverlog;pfile11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);44;241378;True;33;0;33.7178571098422;
0;0;driverlog;pfile14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);397;1640726;True;57;0;51.7015901413497;
0;0;driverlog;pfile8.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2335;True;29;0;21.5464644959134;
0;0;driverlog;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;24490;True;34;0;38.1402551473456;
0;0;elevators-opt08-strips;p06.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;40034;True;259;0;569.20334537518;
0;0;elevators-opt08-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;16772;True;154;0;163.203417915792;
0;0;elevators-opt08-strips;p08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;10672;True;103;0;132.524611486773;
0;0;elevators-opt08-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;32727;True;295;0;123.0299452012;
0;0;elevators-opt08-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);42;333095;True;103;0;59.7164890428034;
0;0;elevators-opt08-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;3690;True;95;0;110.977602454959;
0;0;elevators-opt08-strips;p21.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;61273;True;98;0;45.1921378897985;
0;0;elevators-opt08-strips;p22.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);32;215542;True;201;0;74.8656676928798;
0;0;elevators-opt08-strips;p23.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);44;294381;True;129;0;46.752948191717;
0;0;elevators-opt08-strips;p24.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;47380;True;274;0;593.677185202819;
0;0;elevators-opt08-strips;p26.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;16046;True;72;0;98.5020718369114;
0;0;elevators-opt08-strips;p27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;79494;True;183;0;39.8700560833895;
0;0;elevators-opt11-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;59555;True;88;0;49.3990487304744;
0;0;elevators-opt11-strips;p05.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);48;377776;True;101;0;60.5706767676283;
0;0;elevators-opt11-strips;p07.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;13480;True;72;0;103.301272980513;
0;0;elevators-opt11-strips;p09.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);58;557122;True;107;0;38.2638126554665;
0;0;elevators-opt11-strips;p10.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;7938;True;112;0;71.821249516308;
0;0;elevators-opt11-strips;p12.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;11054;True;222;0;708.226673194151;
0;0;elevators-opt11-strips;p13.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;11711;True;128;0;163.632649213201;
0;0;elevators-opt11-strips;p14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;11152;True;94;0;156.408563770595;
0;0;elevators-opt11-strips;p15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);65;323706;True;231;0;153.987660952361;
0;0;elevators-opt11-strips;p19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);14;114933;True;96;0;33.2144591797718;
0;0;elevators-opt11-strips;p20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);42;89452;True;251;0;356.917126533178;
0;0;elevators-sat08-strips;p02.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);1;9724;True;103;0;78.2857123462431;
0;0;freecell;pfile5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);33;5234;True;46;0;39762.709623016;
0;0;freecell;pfile6.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);47;3722;True;75;0;162810.651459978;
0;0;freecell;pfile7.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;2556;True;72;0;110056.581477424;
0;0;freecell;pfile9.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);389;18672;True;75;0;304699.671871858;
0;0;freecell;probfreecell-10-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);110;3254;True;107;0;1675365.35810049;
0;0;freecell;probfreecell-10-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);80;2326;True;83;0;1846096.90124051;
0;0;freecell;probfreecell-11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);75;2156;True;97;0;1870688.71222541;
0;0;freecell;probfreecell-13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4660;False;-1;0;5201454.44536976;
0;0;freecell;probfreecell-5-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;1101;True;43;0;81850.4579052852;
0;0;freecell;probfreecell-5-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;1090;True;39;0;131789.886304741;
0;0;freecell;probfreecell-6-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;1096;True;47;0;206392.010430201;
0;0;freecell;probfreecell-6-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;1237;True;44;0;219929.354362525;
0;0;freecell;probfreecell-6-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;878;True;37;0;175895.955421608;
0;0;freecell;probfreecell-6-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;1299;True;43;0;118634.613648778;
0;0;freecell;probfreecell-6-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;1084;True;50;0;220609.142393449;
0;0;freecell;probfreecell-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;1008;True;51;0;325327.780710364;
0;0;freecell;probfreecell-7-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;1859;True;69;0;260373.651113716;
0;0;freecell;probfreecell-7-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;1707;True;52;0;139890.518966018;
0;0;freecell;probfreecell-7-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;1907;True;61;0;183119.379849624;
0;0;freecell;probfreecell-7-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;2283;True;66;0;423477.305863847;
0;0;freecell;probfreecell-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);34;1866;True;67;0;868765.372377609;
0;0;freecell;probfreecell-8-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);20;1692;True;70;0;518780.754060167;
0;0;freecell;probfreecell-8-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);17;1851;True;61;0;381798.498692835;
0;0;freecell;probfreecell-8-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);43;2082;True;68;0;1053782.91947824;
0;0;freecell;probfreecell-8-5.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);60;3403;True;88;0;860900.841413916;
0;0;freecell;probfreecell-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);67;4201;True;108;0;780525.192697987;
0;0;freecell;probfreecell-9-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);44;1918;True;84;0;1124903.73604177;
0;0;freecell;probfreecell-9-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);47;2460;True;82;0;937310.196718581;
0;0;freecell;probfreecell-9-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);92;2764;True;83;0;1689780.22168696;
0;0;gripper;prob14.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;24436;True;185;0;248.194944216906;
0;0;gripper;prob15.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;28794;True;195;0;267.746494675719;
0;0;gripper;prob16.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);10;37071;True;227;0;274.038945321074;
0;0;gripper;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);13;45560;True;211;0;281.486887275734;
0;0;gripper;prob18.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);15;45592;True;225;0;309.472573744526;
0;0;gripper;prob19.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);22;61259;True;255;0;332.686876457998;
0;0;gripper;prob20.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);23;60221;True;275;0;352.160325245809;
0;0;logistics00;probLOGISTICS-13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;10743;True;125;0;118.79539161989;
0;0;logistics00;probLOGISTICS-13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;9935;True;104;0;106.271960559981;
0;0;logistics00;probLOGISTICS-14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;9902;True;92;0;96.9071347451954;
0;0;logistics00;probLOGISTICS-14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;10839;True;108;0;131.587533445051;
0;0;logistics00;probLOGISTICS-15-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;7989;True;106;0;107.751392252957;
0;0;logistics00;probLOGISTICS-7-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2334;True;51;0;40.6060365331958;
0;0;logistics00;probLOGISTICS-7-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;4533;True;56;0;53.1750916779624;
0;0;logistics00;probLOGISTICS-8-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1415;True;37;0;34.6878144716057;
0;0;logistics00;probLOGISTICS-8-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;2714;True;54;0;48.2024535388104;
0;0;logistics00;probLOGISTICS-9-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;990;True;40;0;36.7391114652857;
0;0;logistics00;probLOGISTICS-9-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1047;True;39;0;31.3155340272346;
0;0;logistics98;prob08.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;50723;False;-1;64.6339030778193;135.261543481754;
0;0;logistics98;prob11.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);16;16978;True;49;0;226.80654929507;
0;0;logistics98;prob17.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;192117;False;-1;934.47754317847;1183.82807927403;
0;0;logistics98;prob27.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;3532;False;-1;2206.66790847302;2726.73435300251;
0;0;logistics98;prob28.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);901;851;False;-1;4053.6983769278;4796.22713471618;
0;0;logistics98;prob29.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;4479;False;-1;7672.35072368777;9536.7133999985;
0;0;logistics98;prob30.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);900;7583;False;-1;1099.82843539353;1449.15812234114;
0;0;logistics98;prob35.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);2;13839;True;46;0;20.5075863156728;
0;0;miconic;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1042;True;45;0;36.894166809932;
0;0;miconic;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1710;True;47;0;45.3344671459586;
0;0;miconic;s23-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;5874;True;91;0;82.6924601203638;
0;0;miconic;s23-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6600;True;97;0;82.8946284346932;
0;0;miconic;s24-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6546;True;96;0;90.9780243859144;
0;0;miconic;s24-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;5939;True;93;0;81.3166215827785;
0;0;miconic;s24-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7897;True;93;0;86.0954267349018;
0;0;miconic;s24-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7449;True;98;0;95.1681926799204;
0;0;miconic;s24-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;8385;True;93;0;88.3375054432509;
0;0;miconic;s25-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;6572;True;100;0;87.9496853032346;
0;0;miconic;s25-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;6718;True;101;0;86.343067480754;
0;0;miconic;s25-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);4;7335;True;101;0;98.6714603748791;
0;0;miconic;s25-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);3;6506;True;97;0;97.8411696470382;
0;0;miconic;s26-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8124;True;105;0;86.6728034970827;
0;0;miconic;s26-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8479;True;111;0;96.4356886942029;
0;0;miconic;s26-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8224;True;109;0;93.0678054512528;
0;0;miconic;s26-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);5;8146;True;103;0;96.3152164936101;
0;0;miconic;s27-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;9034;True;110;0;101.579417047345;
0;0;miconic;s27-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;8700;True;107;0;93.4944843895792;
0;0;miconic;s27-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9617;True;109;0;101.577466746689;
0;0;miconic;s27-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);6;8822;True;108;0;109.344859738549;
0;0;miconic;s28-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);7;9065;True;111;0;100.294577670207;
0;0;miconic;s28-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10506;True;119;0;104.543962669159;
0;0;miconic;s28-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10520;True;109;0;102.138926890465;
0;0;miconic;s28-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10178;True;113;0;106.414809362307;
0;0;miconic;s29-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10616;True;122;0;109.784777880213;
0;0;miconic;s29-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;11736;True;117;0;98.7550875445753;
0;0;miconic;s29-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;9983;True;118;0;101.406844259017;
0;0;miconic;s29-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10766;True;110;0;104.847482413773;
0;0;miconic;s29-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);8;10223;True;116;0;109.230348884025;
0;0;miconic;s30-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;12507;True;119;0;115.630328646835;
0;0;miconic;s30-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);12;13598;True;127;0;113.393788881118;
0;0;miconic;s30-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);11;12136;True;125;0;106.059021261154;
0;0;miconic;s30-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);9;10192;True;116;0;116.22448358916;
0;0;miconic-simpleadl;s11-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;862;True;34;0;41.9777407755697;
0;0;miconic-simpleadl;s11-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;693;True;30;0;27.7029808573958;
0;0;miconic-simpleadl;s11-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;797;True;36;0;31.945171344354;
0;0;miconic-simpleadl;s11-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;744;True;34;0;33.1041962455678;
0;0;miconic-simpleadl;s11-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;564;True;28;0;32.5492293633113;
0;0;miconic-simpleadl;s12-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1258;True;32;0;33.5716606199545;
0;0;miconic-simpleadl;s12-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;973;True;42;0;38.4930475048868;
0;0;miconic-simpleadl;s12-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1038;True;34;0;41.0173430838094;
0;0;miconic-simpleadl;s12-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;910;True;35;0;37.0294045722014;
0;0;miconic-simpleadl;s12-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;942;True;38;0;38.7539486307859;
0;0;miconic-simpleadl;s13-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1050;True;36;0;28.4925472885824;
0;0;miconic-simpleadl;s13-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;907;True;32;0;43.6289145970232;
0;0;miconic-simpleadl;s13-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1051;True;40;0;40.5274268265454;
0;0;miconic-simpleadl;s13-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1012;True;34;0;37.3598747026692;
0;0;miconic-simpleadl;s13-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1108;True;40;0;26.8119224135728;
0;0;miconic-simpleadl;s14-0.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1327;True;40;0;36.9092858494758;
0;0;miconic-simpleadl;s14-1.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1581;True;46;0;41.6146466489363;
0;0;miconic-simpleadl;s14-2.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1902;True;50;0;42.0365862603392;
0;0;miconic-simpleadl;s14-3.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1201;True;37;0;47.045242538503;
0;0;miconic-simpleadl;s14-4.sas;A*+Wintelect Red-Black Tree Heap;Noisy heuristic(weighted Fast Forward heuristic. Weight = 2 + U[-15%, 15%]);0;1257;True;41;0;44.1255736392588;
